Frege file
  PsiComment(LINE_COMMENT)('-- https://github.com/Frege/frege/blob/master/examples/Sudoku.fr\n')
  PsiElement(PACKAGE)('package')
  PsiElement(IDENT)('examples')
  PsiElement(.)('.')
  PsiElement(IDENT)('Sudoku')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(IMPORT)('import')
  PsiElement(IDENT)('Data')
  PsiElement(.)('.')
  PsiElement(IDENT)('TreeMap')
  PsiElement(IDENT)('as')
  PsiElement(IDENT)('TM')
  PsiElement(()('(')
  PsiElement(IDENT)('TreeMap')
  PsiElement(,)(',')
  PsiElement(IDENT)('keys')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IMPORT)('import')
  PsiElement(IDENT)('Data')
  PsiElement(.)('.')
  PsiElement(IDENT)('List')
  PsiElement(IDENT)('as')
  PsiElement(IDENT)('DL')
  PsiElement(IDENT)('hiding')
  PsiElement(()('(')
  PsiElement(IDENT)('find')
  PsiElement(,)(',')
  PsiElement(IDENT)('union')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(TYPE)('type')
  PsiElement(IDENT)('Element')
  PsiElement(=)('=')
  PsiElement(IDENT)('Int')
  PsiComment(LINE_COMMENT)('-- 1,2,3,4,5,6,7,8,9\n')
  PsiElement(TYPE)('type')
  PsiElement(IDENT)('Zelle')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('Element')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- set of candidates\n')
  PsiElement(TYPE)('type')
  PsiElement(IDENT)('Position')
  PsiElement(=)('=')
  PsiElement(IDENT)('Int')
  PsiComment(LINE_COMMENT)('-- 0..80\n')
  PsiElement(TYPE)('type')
  PsiElement(IDENT)('Feld')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('Position')
  PsiElement(,)(',')
  PsiElement(IDENT)('Zelle')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(TYPE)('type')
  PsiElement(IDENT)('Brett')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('Feld')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(DOC_COMMENT)('--- data type for assumptions and conclusions\n')
  PsiElement(DATA)('data')
  PsiElement(IDENT)('Assumption')
  PsiElement(=)('=')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('!')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('Position')
  PsiElement(IDENT)('Element')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(OPERATOR)('!')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('Position')
  PsiElement(IDENT)('Element')
  PsiElement(EOL)('\n')
  PsiElement(DERIVE)('derive')
  PsiElement(IDENT)('Eq')
  PsiElement(IDENT)('Assumption')
  PsiElement(EOL)('\n')
  PsiElement(DERIVE)('derive')
  PsiElement(IDENT)('Ord')
  PsiElement(IDENT)('Assumption')
  PsiElement(EOL)('\n')
  PsiElement(INSTANCE)('instance')
  PsiElement(IDENT)('Show')
  PsiElement(IDENT)('Assumption')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('show')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('e')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('pname')
  PsiElement(IDENT)('p')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"="')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('e')
  PsiElement(.)('.')
  PsiElement(IDENT)('show')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('show')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('e')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('pname')
  PsiElement(IDENT)('p')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"/"')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('e')
  PsiElement(.)('.')
  PsiElement(IDENT)('show')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('showcs')
  PsiElement(IDENT)('cs')
  PsiElement(=)('=')
  PsiElement(IDENT)('joined')
  PsiElement(STRING_LITERAL)('" "')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('Assumption')
  PsiElement(.)('.')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('elements')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('Element')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- all possible elements\n')
  PsiElement(IDENT)('elements')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(.)('.')
  PsiElement(.)('.')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(BLOCK_COMMENT)('{-\n    a  b  c   d  e  f   g  h  i\n     0  1  2 | 3  4  5 | 6  7  8    1\n     9 10 11 |12 13 14 |15 16 17    2\n    18 19 20 |21 22 23 |24 25 26    3\n    ---------|---------|--------\n    27 28 29 |30 31 32 |33 34 35    4\n    36 37 38 |39 40 41 |42 43 44    5\n    45 46 47 |48 49 50 |51 52 53    6\n    ---------|---------|--------\n    54 55 56 |57 58 59 |60 61 62    7\n    63 64 65 |66 67 68 |69 70 71    8\n    72 73 74 |75 76 77 |78 79 80    9\n-}')
  PsiElement(IDENT)('positions')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- all possible positions\n')
  PsiElement(IDENT)('positions')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('0')
  PsiElement(.)('.')
  PsiElement(.)('.')
  PsiElement(NUMBER_LITERAL)('80')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('rowstarts')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- all positions where a row is starting\n')
  PsiElement(IDENT)('rowstarts')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('0')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('18')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('27')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('36')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('45')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('54')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('63')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('72')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('colstarts')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- all positions where a column is starting\n')
  PsiElement(IDENT)('colstarts')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('0')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('3')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('4')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('5')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('6')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('7')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('8')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('boxstarts')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- all positions where a box is starting\n')
  PsiElement(IDENT)('boxstarts')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('0')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('3')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('6')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('27')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('30')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('33')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('54')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('57')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('60')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('boxmuster')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- pattern for a box, by adding upper left position results in real box\n')
  PsiElement(IDENT)('boxmuster')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('0')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('10')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('11')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('18')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('19')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('20')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(DOC_COMMENT)('--- extract field for position\n')
  PsiElement(IDENT)('getf')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Feld')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('getf')
  PsiElement(()('(')
  PsiElement(IDENT)('f')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('fs')
  PsiElement())(')')
  PsiElement(IDENT)('p')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('fst')
  PsiElement(IDENT)('f')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement(IDENT)('f')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('fs')
  PsiElement(IDENT)('p')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('getf')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(DOC_COMMENT)('--- extract cell for position\n')
  PsiElement(IDENT)('getc')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Zelle')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement(IDENT)('snd')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('p')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(DOC_COMMENT)('--- compute the list of all positions that belong to the same row as a given position\n')
  PsiElement(IDENT)('row')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('z')
  PsiElement(.)('.')
  PsiElement(.)('.')
  PsiElement(()('(')
  PsiElement(IDENT)('z')
  PsiElement(OPERATOR)('+')
  PsiElement(NUMBER_LITERAL)('8')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(WHERE)('where')
  PsiElement(IDENT)('z')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('quot')
  PsiElement(`)('`')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement())(')')
  PsiElement(OPERATOR)('*')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(EOL)('\n')
  PsiComment(DOC_COMMENT)('--- compute the list of all positions that belong to the same col as a given position\n')
  PsiElement(IDENT)('col')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('+')
  PsiElement())(')')
  PsiElement(IDENT)('rowstarts')
  PsiElement(WHERE)('where')
  PsiElement(IDENT)('c')
  PsiElement(=)('=')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('mod')
  PsiElement(`)('`')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(EOL)('\n')
  PsiComment(DOC_COMMENT)('--- compute the list of all positions that belong to the same box as a given position\n')
  PsiElement(IDENT)('box')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('box')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('z')
  PsiElement(OPERATOR)('+')
  PsiElement())(')')
  PsiElement(IDENT)('boxmuster')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('ri')
  PsiElement(=)('=')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('div')
  PsiElement(`)('`')
  PsiElement(NUMBER_LITERAL)('27')
  PsiElement(OPERATOR)('*')
  PsiElement(NUMBER_LITERAL)('27')
  PsiComment(LINE_COMMENT)('-- 0, 27 or 54, depending on row\n')
  PsiElement(IDENT)('ci')
  PsiElement(=)('=')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('mod')
  PsiElement(`)('`')
  PsiElement(NUMBER_LITERAL)('9')
  PsiComment(LINE_COMMENT)('-- column index 0..8, 0,1,2 is left, 3,4,5 is middle, 6,7,8 is right\n')
  PsiElement(IDENT)('cs')
  PsiElement(=)('=')
  PsiElement(IDENT)('ci')
  PsiElement(`)('`')
  PsiElement(IDENT)('div')
  PsiElement(`)('`')
  PsiElement(NUMBER_LITERAL)('3')
  PsiElement(OPERATOR)('*')
  PsiElement(NUMBER_LITERAL)('3')
  PsiComment(LINE_COMMENT)('-- 0, 3 or 6\n')
  PsiElement(IDENT)('z')
  PsiElement(=)('=')
  PsiElement(IDENT)('ri')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('cs')
  PsiElement(EOL)('\n')
  PsiComment(DOC_COMMENT)('--- check if candidate set has exactly one member, i.e. field has been solved\n')
  PsiElement(IDENT)('single')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Zelle')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Bool')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('single')
  PsiElement([)('[')
  PsiElement(_)('_')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(TRUE)('true')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('single')
  PsiElement(_)('_')
  PsiElement(=)('=')
  PsiElement(FALSE)('false')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('unsolved')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Zelle')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Bool')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('unsolved')
  PsiElement([)('[')
  PsiElement(_)('_')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(FALSE)('false')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('unsolved')
  PsiElement(_)('_')
  PsiElement(=)('=')
  PsiElement(TRUE)('true')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- list of rows, cols, boxes\n')
  PsiElement(IDENT)('allrows')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('rowstarts')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('allcols')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('colstarts')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('allboxs')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('box')
  PsiElement(IDENT)('boxstarts')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('allrcb')
  PsiElement(=)('=')
  PsiElement(IDENT)('zip')
  PsiElement(()('(')
  PsiElement(IDENT)('repeat')
  PsiElement(STRING_LITERAL)('"row"')
  PsiElement())(')')
  PsiElement(IDENT)('allrows')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('zip')
  PsiElement(()('(')
  PsiElement(IDENT)('repeat')
  PsiElement(STRING_LITERAL)('"col"')
  PsiElement())(')')
  PsiElement(IDENT)('allcols')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('zip')
  PsiElement(()('(')
  PsiElement(IDENT)('repeat')
  PsiElement(STRING_LITERAL)('"box"')
  PsiElement())(')')
  PsiElement(IDENT)('allboxs')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('containers')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(()('(')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Position')
  PsiElement(])(']')
  PsiElement(,)(',')
  PsiElement(IDENT)('String')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('containers')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(()('(')
  PsiElement(IDENT)('row')
  PsiElement(,)(',')
  PsiElement(STRING_LITERAL)('"row"')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(()('(')
  PsiElement(IDENT)('col')
  PsiElement(,)(',')
  PsiElement(STRING_LITERAL)('"col"')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(()('(')
  PsiElement(IDENT)('box')
  PsiElement(,)(',')
  PsiElement(STRING_LITERAL)('"box"')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- ----------------- PRINTING ------------------------------------\n')
  PsiComment(LINE_COMMENT)('-- printable coordinate of field, upper left is a1, lower right is i9\n')
  PsiElement(IDENT)('pname')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement(IDENT)('packed')
  PsiElement([)('[')
  PsiElement(IDENT)('chr')
  PsiElement(()('(')
  PsiElement(IDENT)('ord')
  PsiElement(CHAR_LITERAL)(''a'')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('mod')
  PsiElement(`)('`')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(IDENT)('chr')
  PsiElement(()('(')
  PsiElement(IDENT)('ord')
  PsiElement(CHAR_LITERAL)(''1'')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('div')
  PsiElement(`)('`')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- print board\n')
  PsiElement(IDENT)('printb')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('mapM_')
  PsiElement(IDENT)('p1line')
  PsiElement(IDENT)('allrows')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('println')
  PsiElement(STRING_LITERAL)('""')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('p1line')
  PsiElement(IDENT)('row')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('print')
  PsiElement(()('(')
  PsiElement(IDENT)('joined')
  PsiElement(STRING_LITERAL)('""')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('pfld')
  PsiElement(IDENT)('line')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(IDENT)('line')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('row')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- print field (brief)\n')
  PsiComment(LINE_COMMENT)('--   ? = no candidate\n')
  PsiComment(LINE_COMMENT)('--   5 = field is 5\n')
  PsiComment(LINE_COMMENT)('--   . = some candidates\n')
  PsiElement(IDENT)('pfld')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"?"')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('pfld')
  PsiElement([)('[')
  PsiElement(IDENT)('x')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('x')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('pfld')
  PsiElement(IDENT)('zs')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"0"')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- print initial/final board\n')
  PsiElement(IDENT)('result')
  PsiElement(IDENT)('msg')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('println')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"Result: "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('msg')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('print')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"Board: "')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('printb')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('return')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('res012')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(CASE)('case')
  PsiElement(IDENT)('concatMap')
  PsiElement(()('(')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('0')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(,)(',')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(])(']')
  PsiElement(OF)('of')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement([)('[')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiElement(IDENT)('c')
  PsiElement(])(']')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('*')
  PsiElement(NUMBER_LITERAL)('100')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('*')
  PsiElement(NUMBER_LITERAL)('10')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('c')
  PsiElement(EOL)('\n')
  PsiElement(_)('_')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(NUMBER_LITERAL)('9999999')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- -------------------------- BOARD ALTERATION ACTIONS ---------------------------------\n')
  PsiComment(LINE_COMMENT)('-- print a message about what is done to the board and return the new board\n')
  PsiElement(IDENT)('turnoff1')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Zelle')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('IO')
  PsiElement(IDENT)('Brett')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('turnoff1')
  PsiElement(IDENT)('i')
  PsiElement(IDENT)('off')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('single')
  PsiElement(IDENT)('nc')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('            -- print (pname i)\n')
  PsiComment(LINE_COMMENT)('            -- print ": set to "\n')
  PsiComment(LINE_COMMENT)('            -- print (head nc)\n')
  PsiComment(LINE_COMMENT)('            -- println " (naked single)"\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('return')
  PsiElement(IDENT)('newb')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(IDENT)('return')
  PsiElement(IDENT)('newb')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('cell')
  PsiElement(=)('=')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('i')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('nc')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('notElem')
  PsiElement(`)('`')
  PsiElement(IDENT)('off')
  PsiElement())(')')
  PsiElement(IDENT)('cell')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('newb')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('i')
  PsiElement(,)(',')
  PsiElement(IDENT)('nc')
  PsiElement())(')')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiElement(IDENT)('fst')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('i')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('turnoff')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Int')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Zelle')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('String')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('IO')
  PsiElement(IDENT)('Brett')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('turnoff')
  PsiElement(IDENT)('i')
  PsiElement(IDENT)('off')
  PsiElement(IDENT)('msg')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('        -- print (pname i)\n')
  PsiComment(LINE_COMMENT)('        -- print ": set to "\n')
  PsiComment(LINE_COMMENT)('        -- print nc\n')
  PsiComment(LINE_COMMENT)('        -- print " by clearing "\n')
  PsiComment(LINE_COMMENT)('        -- print off\n')
  PsiComment(LINE_COMMENT)('        -- print " "\n')
  PsiComment(LINE_COMMENT)('        -- println  msg\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('return')
  PsiElement(IDENT)('newb')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('cell')
  PsiElement(=)('=')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('i')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('nc')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('notElem')
  PsiElement(`)('`')
  PsiElement(IDENT)('off')
  PsiElement())(')')
  PsiElement(IDENT)('cell')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('newb')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('i')
  PsiElement(,)(',')
  PsiElement(IDENT)('nc')
  PsiElement())(')')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiElement(IDENT)('fst')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('i')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('turnoffh')
  PsiElement(IDENT)('ps')
  PsiElement(IDENT)('off')
  PsiElement(IDENT)('msg')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('foldM')
  PsiElement(IDENT)('toh')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('ps')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('toh')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('p')
  PsiElement(=)('=')
  PsiElement(IDENT)('turnoff')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('off')
  PsiElement(IDENT)('msg')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('setto')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Position')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Element')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('String')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('IO')
  PsiElement(IDENT)('Brett')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('setto')
  PsiElement(IDENT)('i')
  PsiElement(IDENT)('n')
  PsiElement(IDENT)('cname')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('        -- print (pname i)\n')
  PsiComment(LINE_COMMENT)('        -- print ": set to "\n')
  PsiComment(LINE_COMMENT)('        -- print n\n')
  PsiComment(LINE_COMMENT)('        -- print " (hidden single in "\n')
  PsiComment(LINE_COMMENT)('        -- print cname\n')
  PsiComment(LINE_COMMENT)('        -- println ")"\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('return')
  PsiElement(IDENT)('newb')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('nf')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('n')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('newb')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('i')
  PsiElement(,)(',')
  PsiElement(IDENT)('nf')
  PsiElement())(')')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiElement(IDENT)('fst')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('i')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- ----------------------------- SOLVING STRATEGIES ---------------------------------------------\n')
  PsiComment(LINE_COMMENT)('-- reduce candidate sets that contains numbers already in same row, col or box\n')
  PsiComment(LINE_COMMENT)('-- This finds (and logs) NAKED SINGLEs in passing.\n')
  PsiElement(IDENT)('reduce')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('turnoff1')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('sss')
  PsiElement(OPERATOR)('|')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('cell')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- for each field\n')
  PsiElement(IDENT)('unsolved')
  PsiElement(IDENT)('cell')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--  with more than 1 candidate\n')
  PsiComment(LINE_COMMENT)('--       single fields in containers that are candidates of that field\n')
  PsiElement(IDENT)('sss')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('s')
  PsiElement(OPERATOR)('|')
  PsiElement(()('(')
  PsiElement(IDENT)('rcb')
  PsiElement(,)(',')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('containers')
  PsiElement(,)(',')
  PsiElement([)('[')
  PsiElement(IDENT)('s')
  PsiElement(])(']')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('rcb')
  PsiElement(IDENT)('p')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(IDENT)('s')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('cell')
  PsiElement(])(']')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('sss')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- collect field index, elements to remove from candidate set\n')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for a number that appears in exactly 1 candidate set of a container\n')
  PsiComment(LINE_COMMENT)('-- this number can go in no other place (HIDDEN SINGLE)\n')
  PsiElement(IDENT)('hiddenSingle')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('setto')
  PsiElement(IDENT)('i')
  PsiElement(IDENT)('n')
  PsiElement(IDENT)('cname')
  PsiElement(OPERATOR)('|')
  PsiComment(LINE_COMMENT)('-- select index, number, containername\n')
  PsiElement(()('(')
  PsiElement(IDENT)('cname')
  PsiElement(,)(',')
  PsiElement(IDENT)('rcb')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('allrcb')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- FOR rcb IN allrcb\n')
  PsiElement(IDENT)('n')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('elements')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--  FOR n IN elements\n')
  PsiElement(IDENT)('fs')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('unsolved')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('rcb')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('occurs')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('n')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement())(')')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('occurs')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(()('(')
  PsiElement(IDENT)('i')
  PsiElement(,)(',')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('occurs')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for NAKED PAIRS, TRIPLES, QUADS\n')
  PsiElement(IDENT)('nakedPair')
  PsiElement(IDENT)('n')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('turnoff')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('t')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"(naked tuple in "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('nm')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('")"')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiComment(LINE_COMMENT)('-- SELECT pos, tuple, name\n')
  PsiComment(LINE_COMMENT)('-- n <- [2,3,4],                    //  FOR n IN [2,3,4]\n')
  PsiElement(()('(')
  PsiElement(IDENT)('nm')
  PsiElement(,)(',')
  PsiElement(IDENT)('rcb')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('allrcb')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--    FOR rcb IN containers\n')
  PsiElement(IDENT)('fs')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('rcb')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--      let fs = fields for rcb positions\n')
  PsiElement(IDENT)('u')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('fold')
  PsiElement(IDENT)('union')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(.)('.')
  PsiElement(IDENT)('filter')
  PsiElement(IDENT)('unsolved')
  PsiElement(.)('.')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- let u = union of non single candidates\n')
  PsiElement(IDENT)('t')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('n')
  PsiElement(`)('`')
  PsiElement(IDENT)('outof')
  PsiElement(`)('`')
  PsiElement(IDENT)('u')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--      FOR t IN n-tuples\n')
  PsiElement(IDENT)('hit')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('subset')
  PsiElement(`)('`')
  PsiElement(IDENT)('t')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('unsolved')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('hit')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('n')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('cell')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('notElem')
  PsiElement(`)('`')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('fst')
  PsiElement(IDENT)('hit')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('any')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('cell')
  PsiElement())(')')
  PsiElement(IDENT)('t')
  PsiElement(EOL)('\n')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for HIDDEN PAIRS, TRIPLES or QUADS\n')
  PsiElement(IDENT)('hiddenPair')
  PsiElement(IDENT)('n')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('turnoff')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('off')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"(hidden "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('t')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" in "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('nm')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('")"')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiComment(LINE_COMMENT)('-- SELECT pos, tuple, name\n')
  PsiComment(LINE_COMMENT)('-- n <- [2,3,4],                    //  FOR n IN [2,3,4]\n')
  PsiElement(()('(')
  PsiElement(IDENT)('nm')
  PsiElement(,)(',')
  PsiElement(IDENT)('rcb')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('allrcb')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--    FOR rcb IN containers\n')
  PsiElement(IDENT)('fs')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('rcb')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--      let fs = fields for rcb positions\n')
  PsiElement(IDENT)('u')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('fold')
  PsiElement(IDENT)('union')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(.)('.')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(OPERATOR)('>')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('length')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- let u = union of non single candidates\n')
  PsiElement(IDENT)('t')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('n')
  PsiElement(`)('`')
  PsiElement(IDENT)('outof')
  PsiElement(`)('`')
  PsiElement(IDENT)('u')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('--      FOR t IN n-tuples\n')
  PsiElement(IDENT)('hit')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('any')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('t')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('unsolved')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('hit')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('n')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('off')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('fold')
  PsiElement(IDENT)('union')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(.)('.')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('hit')
  PsiElement(`)('`')
  PsiElement(IDENT)('minus')
  PsiElement(`)('`')
  PsiElement(IDENT)('t')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('off')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('cell')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('hit')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('!')
  PsiElement(()('(')
  PsiElement(IDENT)('cell')
  PsiElement(`)('`')
  PsiElement(IDENT)('subset')
  PsiElement(`)('`')
  PsiElement(IDENT)('t')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('a')
  PsiElement(`)('`')
  PsiElement(IDENT)('subset')
  PsiElement(`)('`')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('all')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('a')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('a')
  PsiElement(`)('`')
  PsiElement(IDENT)('union')
  PsiElement(`)('`')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('uniq')
  PsiElement(()('(')
  PsiElement(IDENT)('sort')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('a')
  PsiElement(`)('`')
  PsiElement(IDENT)('minus')
  PsiElement(`)('`')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('notElem')
  PsiElement(`)('`')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('a')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('a')
  PsiElement(`)('`')
  PsiElement(IDENT)('common')
  PsiElement(`)('`')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('a')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('n')
  PsiElement(`)('`')
  PsiElement(IDENT)('outof')
  PsiElement(`)('`')
  PsiElement(IDENT)('as')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('as')
  PsiElement(OPERATOR)('<')
  PsiElement(IDENT)('n')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('as')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('n')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement(IDENT)('as')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('bs')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('as')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('n')
  PsiElement(NUMBER_LITERAL)('-1')
  PsiElement())(')')
  PsiElement(`)('`')
  PsiElement(IDENT)('outof')
  PsiElement(`)('`')
  PsiElement(IDENT)('bs')
  PsiElement())(')')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(()('(')
  PsiElement(IDENT)('n')
  PsiElement(`)('`')
  PsiElement(IDENT)('outof')
  PsiElement(`)('`')
  PsiElement(IDENT)('bs')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(IDENT)('undefined')
  PsiComment(LINE_COMMENT)('-- cannot happen because either as is empty or not\n')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('same')
  PsiElement(IDENT)('f')
  PsiElement(IDENT)('a')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('b')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('f')
  PsiElement(IDENT)('a')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('intersectionlist')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(()('(')
  PsiElement(IDENT)('allboxs')
  PsiElement(,)(',')
  PsiElement(IDENT)('row')
  PsiElement(,)(',')
  PsiElement(STRING_LITERAL)('"box/row intersection"')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(()('(')
  PsiElement(IDENT)('allboxs')
  PsiElement(,)(',')
  PsiElement(IDENT)('col')
  PsiElement(,)(',')
  PsiElement(STRING_LITERAL)('"box/col intersection"')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(()('(')
  PsiElement(IDENT)('allrows')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('allcols')
  PsiElement(,)(',')
  PsiElement(IDENT)('box')
  PsiElement(,)(',')
  PsiElement(STRING_LITERAL)('"line/box intersection"')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('intersections')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('turnoff')
  PsiElement(IDENT)('pos')
  PsiElement([)('[')
  PsiElement(IDENT)('c')
  PsiElement(])(']')
  PsiElement(IDENT)('reason')
  PsiElement(OPERATOR)('|')
  PsiComment(LINE_COMMENT)('-- SELECT position, candidate, reson\n')
  PsiElement(()('(')
  PsiElement(IDENT)('from')
  PsiElement(,)(',')
  PsiElement(IDENT)('container')
  PsiElement(,)(',')
  PsiElement(IDENT)('reason')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('intersectionlist')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('rcb')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('from')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('fs')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('unsolved')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('rcb')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- fs = fields in from with more than 1 candidate\n')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(()('(')
  PsiElement(IDENT)('fold')
  PsiElement(IDENT)('union')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- FOR c IN union of candidates\n')
  PsiElement(IDENT)('cpos')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('fst')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('c')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement())(')')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- cpos = positions where c occurs\n')
  PsiElement(IDENT)('cpos')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- WHERE cpos is not empty\n')
  PsiElement(IDENT)('all')
  PsiElement(()('(')
  PsiElement(IDENT)('same')
  PsiElement(IDENT)('container')
  PsiElement(()('(')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('cpos')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('tail')
  PsiElement(IDENT)('cpos')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- WHERE all positions are in the intersection\n')
  PsiComment(LINE_COMMENT)('-- we can remove all occurences of c that are in container, but not in from\n')
  PsiElement(()('(')
  PsiElement(IDENT)('pos')
  PsiElement(,)(',')
  PsiElement(IDENT)('cell')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('container')
  PsiElement(()('(')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('cpos')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('c')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('cell')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('pos')
  PsiElement(`)('`')
  PsiElement(IDENT)('notElem')
  PsiElement(`)('`')
  PsiElement(IDENT)('rcb')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for an XY Wing\n')
  PsiComment(LINE_COMMENT)('--  - there exists a cell A with candidates X and Y\n')
  PsiComment(LINE_COMMENT)('--  - there exists a cell B with candidates X and Z that shares a container with A\n')
  PsiComment(LINE_COMMENT)('--  - there exists a cell C with candidates Y and Z that shares a container with A\n')
  PsiComment(LINE_COMMENT)('-- reasoning\n')
  PsiComment(LINE_COMMENT)('--  - if A is X, B will be Z\n')
  PsiComment(LINE_COMMENT)('--  - if A is Y, C will be Z\n')
  PsiComment(LINE_COMMENT)('--  - since A will indeed be X or Y -> B or C will be Z\n')
  PsiComment(LINE_COMMENT)('--  - thus, no cell that can see B and C can be Z\n')
  PsiElement(IDENT)('xyWing')
  PsiElement(IDENT)('board')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('turnoff')
  PsiElement(IDENT)('p')
  PsiElement([)('[')
  PsiElement(IDENT)('z')
  PsiElement(])(']')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"xy wing "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('pname')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('pname')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" because of "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('pname')
  PsiElement(IDENT)('a')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement([)('[')
  PsiElement(IDENT)('x')
  PsiElement(,)(',')
  PsiElement(IDENT)('y')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('board')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- there exists a cell a with candidates x and y\n')
  PsiElement(IDENT)('rcba')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('box')
  PsiElement(IDENT)('a')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- rcba = all fields that share a container with a\n')
  PsiElement(()('(')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiElement([)('[')
  PsiElement(IDENT)('b1')
  PsiElement(,)(',')
  PsiElement(IDENT)('b2')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('rcba')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('b1')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('b2')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('y')
  PsiElement(OPERATOR)('|')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('b2')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('b1')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('y')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- there exists a cell B with candidates x and z\n')
  PsiElement(IDENT)('z')
  PsiElement(=)('=')
  PsiElement(IF)('if')
  PsiElement(IDENT)('b1')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('x')
  PsiElement(THEN)('then')
  PsiElement(IDENT)('b2')
  PsiElement(ELSE)('else')
  PsiElement(IDENT)('b1')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(()('(')
  PsiElement(IDENT)('c')
  PsiElement(,)(',')
  PsiElement([)('[')
  PsiElement(IDENT)('c1')
  PsiElement(,)(',')
  PsiElement(IDENT)('c2')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('rcba')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('c1')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('y')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('c2')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('z')
  PsiElement(OPERATOR)('|')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('c1')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('z')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('c2')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('y')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- there exists a cell C with candidates y and z\n')
  PsiElement(IDENT)('ps')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('uniq')
  PsiElement(.)('.')
  PsiElement(IDENT)('sort')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('box')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(`)('`')
  PsiElement(IDENT)('common')
  PsiElement(`)('`')
  PsiElement(()('(')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('box')
  PsiElement(IDENT)('c')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('        -- remove z in ps\n')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement(IDENT)('ps')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('p')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('b')
  PsiElement(,)(',')
  PsiElement(IDENT)('p')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('c')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('z')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('cs')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for a N-Fish (2: X-Wing, 3: Swordfish, 4: Jellyfish)\n')
  PsiComment(LINE_COMMENT)('-- When all candidates for a particular digit in N rows are located\n')
  PsiComment(LINE_COMMENT)('-- in only N columns, we can eliminate all candidates from those N columns\n')
  PsiComment(LINE_COMMENT)('--  which are not located on those N rows\n')
  PsiElement(IDENT)('fish')
  PsiElement(IDENT)('n')
  PsiElement(IDENT)('board')
  PsiElement(=)('=')
  PsiElement(IDENT)('fish')
  PsiElement(STRING_LITERAL)('"row"')
  PsiElement(IDENT)('allrows')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('col')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('fish')
  PsiElement(STRING_LITERAL)('"col"')
  PsiElement(IDENT)('allcols')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('row')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('fishname')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"X-Wing"')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('fishname')
  PsiElement(NUMBER_LITERAL)('3')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"Swordfish"')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('fishname')
  PsiElement(NUMBER_LITERAL)('4')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"Jellyfish"')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('fishname')
  PsiElement(_)('_')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"unknown fish"')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('fish')
  PsiElement(IDENT)('nm')
  PsiElement(IDENT)('allrows')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('col')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('turnoff')
  PsiElement(IDENT)('p')
  PsiElement([)('[')
  PsiElement(IDENT)('x')
  PsiElement(])(']')
  PsiElement(()('(')
  PsiElement(IDENT)('fishname')
  PsiElement(IDENT)('n')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" in "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('nm')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('pname')
  PsiElement(.)('.')
  PsiElement(IDENT)('head')
  PsiElement())(')')
  PsiElement(IDENT)('rset')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('rset')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('n')
  PsiElement(`)('`')
  PsiElement(IDENT)('outof')
  PsiElement(`)('`')
  PsiElement(IDENT)('allrows')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- take n rows (or cols)\n')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('elements')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- look for certain number\n')
  PsiElement(IDENT)('rflds')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(OPERATOR)('>')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('length')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('rset')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- unsolved fields in the rowset\n')
  PsiElement(IDENT)('colss')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('head')
  PsiElement(.)('.')
  PsiElement(IDENT)('col')
  PsiElement(.)('.')
  PsiElement(IDENT)('fst')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('x')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('rflds')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- where x occurs in candidates\n')
  PsiElement(IDENT)('all')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(OPERATOR)('>')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('length')
  PsiElement())(')')
  PsiElement(IDENT)('colss')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- x must appear in at least 2 cols\n')
  PsiElement(IDENT)('cols')
  PsiElement(=)('=')
  PsiElement(IDENT)('fold')
  PsiElement(IDENT)('union')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(IDENT)('colss')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('cols')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('n')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('cstart')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('cols')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('cell')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('cstart')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('x')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('cell')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('all')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('notElem')
  PsiElement(`)('`')
  PsiElement())(')')
  PsiElement(IDENT)('rset')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- compute immediate consequences of an assumption of the form (p `IS` e) or (p `ISNOT` e)\n')
  PsiElement(IDENT)('conseq')
  PsiElement(IDENT)('board')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('e')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('uniq')
  PsiElement(()('(')
  PsiElement(IDENT)('sort')
  PsiElement(()('(')
  PsiElement([)('[')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('ISNOT')
  PsiElement(`)('`')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('e')
  PsiElement(])(']')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement([)('[')
  PsiElement(IDENT)('a')
  PsiElement(`)('`')
  PsiElement(IDENT)('ISNOT')
  PsiElement(`)('`')
  PsiElement(IDENT)('e')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('p')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('p')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('box')
  PsiElement(IDENT)('p')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('e')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('cs')
  PsiElement(EOL)('\n')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('conseq')
  PsiElement(IDENT)('board')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('e')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('uniq')
  PsiElement(()('(')
  PsiElement(IDENT)('sort')
  PsiElement(()('(')
  PsiElement([)('[')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('IS')
  PsiElement(`)('`')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('cs')
  PsiElement(=)('=')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('cs')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(,)(',')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('cs')
  PsiElement(,)(',')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('e')
  PsiElement(])(']')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement([)('[')
  PsiElement(IDENT)('a')
  PsiElement(`)('`')
  PsiElement(IDENT)('IS')
  PsiElement(`)('`')
  PsiElement(IDENT)('e')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('cp')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement([)('[')
  PsiElement(IDENT)('row')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('box')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('col')
  PsiElement(IDENT)('p')
  PsiElement(])(']')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('as')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('e')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('cp')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('as')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('a')
  PsiElement(=)('=')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('as')
  PsiElement(EOL)('\n')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- check if two assumptions contradict each other\n')
  PsiElement(IDENT)('contradicts')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('a')
  PsiElement(IDENT)('x')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('y')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('a')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement(IDENT)('y')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('contradicts')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('a')
  PsiElement(IDENT)('x')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('y')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('a')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('x')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('y')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('contradicts')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('a')
  PsiElement(IDENT)('x')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('y')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('a')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('x')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(IDENT)('y')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('contradicts')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(_)('_')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(_)('_')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(FALSE)('false')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- get the Position of an Assumption\n')
  PsiElement(IDENT)('aPos')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('p')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('p')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('aPos')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('p')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('p')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- get List of elements that must be turned off when assumption is true/false\n')
  PsiElement(IDENT)('toClear')
  PsiElement(IDENT)('board')
  PsiElement(TRUE)('true')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('x')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('p')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('toClear')
  PsiElement(IDENT)('board')
  PsiElement(FALSE)('false')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('x')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('x')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('toClear')
  PsiElement(IDENT)('board')
  PsiElement(TRUE)('true')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('x')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('x')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('toClear')
  PsiElement(IDENT)('board')
  PsiElement(FALSE)('false')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('p')
  PsiElement(IDENT)('x')
  PsiElement())(')')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('getc')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('p')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for assumptions whose implications contradict themselves\n')
  PsiElement(IDENT)('chain')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('paths')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('solution')
  PsiElement(IDENT)('a')
  PsiElement(()('(')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('reverse')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(IDENT)('css')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('paths')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('cs')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement([)('[')
  PsiElement(IDENT)('cs')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('cs')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('css')
  PsiElement(,)(',')
  PsiElement(IDENT)('contradicts')
  PsiElement(IDENT)('a')
  PsiElement(()('(')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('solution')
  PsiElement(IDENT)('a')
  PsiElement(IDENT)('c')
  PsiElement(IDENT)('cs')
  PsiElement(=)('=')
  PsiElement(IDENT)('turnoff')
  PsiElement(()('(')
  PsiElement(IDENT)('aPos')
  PsiElement(IDENT)('a')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('toClear')
  PsiElement(IDENT)('board')
  PsiElement(FALSE)('false')
  PsiElement(IDENT)('a')
  PsiElement())(')')
  PsiElement(IDENT)('reason')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('reason')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"Assumption "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" implies "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"\n\t"')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('             ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('showcs')
  PsiElement(IDENT)('cs')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"\n\t"')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"Therefore, "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" must be false."')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for an assumption that yields to contradictory implications\n')
  PsiComment(LINE_COMMENT)('-- this assumption must be false\n')
  PsiElement(IDENT)('chainContra')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('paths')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('solution')
  PsiElement(IDENT)('a')
  PsiElement(()('(')
  PsiElement(IDENT)('reverse')
  PsiElement(IDENT)('pro')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('reverse')
  PsiElement(IDENT)('contra')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(IDENT)('css')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('paths')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- FOR ALL assumptions "a" with list of conclusions "css"\n')
  PsiElement(()('(')
  PsiElement(IDENT)('pro')
  PsiElement(,)(',')
  PsiElement(IDENT)('contra')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement([)('[')
  PsiElement(()('(')
  PsiElement(IDENT)('pro')
  PsiElement(,)(',')
  PsiElement(IDENT)('contra')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('pro')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(()('(')
  PsiElement(IDENT)('uniqBy')
  PsiElement(()('(')
  PsiElement(IDENT)('using')
  PsiElement(IDENT)('head')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('sortBy')
  PsiElement(()('(')
  PsiElement(IDENT)('comparing')
  PsiElement(IDENT)('head')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('css')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- FOR ALL conclusion chains "pro"\n')
  PsiElement(IDENT)('c')
  PsiElement(=)('=')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('pro')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- LET "c" BE the final conclusion\n')
  PsiElement(IDENT)('contra')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(()('(')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('contradicts')
  PsiElement(IDENT)('c')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('head')
  PsiElement())(')')
  PsiElement(IDENT)('css')
  PsiElement())(')')
  PsiComment(LINE_COMMENT)('-- THE FIRST conclusion that contradicts c\n')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('solution')
  PsiElement(IDENT)('a')
  PsiElement(IDENT)('pro')
  PsiElement(IDENT)('con')
  PsiElement(=)('=')
  PsiElement(IDENT)('turnoff')
  PsiElement(()('(')
  PsiElement(IDENT)('aPos')
  PsiElement(IDENT)('a')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('toClear')
  PsiElement(IDENT)('board')
  PsiElement(FALSE)('false')
  PsiElement(IDENT)('a')
  PsiElement())(')')
  PsiElement(IDENT)('reason')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('reason')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"assumption "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" leads to contradictory conclusions\n\t"')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('             ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('showcs')
  PsiElement(IDENT)('pro')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"\n\t"')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('showcs')
  PsiElement(IDENT)('con')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- look for a common implication c of some assumptions ai, where at least 1 ai is true\n')
  PsiComment(LINE_COMMENT)('-- so that (a0 OR a1 OR a2 OR ...) IMPLIES c\n')
  PsiComment(LINE_COMMENT)('-- For all cells pi in same container that have x as candidate, we can construct (p0==x OR p1==x OR ... OR pi==x)\n')
  PsiComment(LINE_COMMENT)('-- For a cell p with candidates ci, we can construct (p==c0 OR p==c1)\n')
  PsiElement(IDENT)('cellRegionChain')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('paths')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('solution')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('as')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('os')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('as')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('cellas')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('regionas')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- one of as must be true\n')
  PsiElement(IDENT)('iss')
  PsiElement(=)('=')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement(IDENT)('as')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('fst')
  PsiElement())(')')
  PsiElement(IDENT)('paths')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- the implications for as\n')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(IDENT)('ass')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(IDENT)('iss')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- implications for first assumption\n')
  PsiElement(IDENT)('fs')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(()('(')
  PsiElement(IDENT)('uniqBy')
  PsiElement(()('(')
  PsiElement(IDENT)('using')
  PsiElement(IDENT)('head')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('sortBy')
  PsiElement(()('(')
  PsiElement(IDENT)('comparing')
  PsiElement(IDENT)('head')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(IDENT)('ass')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('head')
  PsiElement(IDENT)('fs')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- final conclusions of first assumption\n')
  PsiElement(IDENT)('os')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('fs')
  PsiElement(])(']')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(.)('.')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('head')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('tail')
  PsiElement(IDENT)('iss')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- look for implications with same conclusion\n')
  PsiElement(IDENT)('all')
  PsiElement(()('(')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement(IDENT)('os')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('cellas')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(`)('`')
  PsiElement(IDENT)('IS')
  PsiElement(`)('`')
  PsiElement())(')')
  PsiElement(IDENT)('candidates')
  PsiElement(OPERATOR)('|')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('candidates')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('board')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('regionas')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(`)('`')
  PsiElement(IDENT)('IS')
  PsiElement(`)('`')
  PsiElement(IDENT)('e')
  PsiElement())(')')
  PsiElement(IDENT)('ps')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('region')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('getf')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('allrows')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('allcols')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('allboxs')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('e')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('elements')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('ps')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('fst')
  PsiElement(()('(')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(IDENT)('e')
  PsiElement(`)('`')
  PsiElement(IDENT)('elem')
  PsiElement(`)('`')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('region')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('ps')
  PsiElement(OPERATOR)('>')
  PsiElement(NUMBER_LITERAL)('1')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('solution')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('as')
  PsiElement(IDENT)('oss')
  PsiElement(=)('=')
  PsiElement(IDENT)('turnoff')
  PsiElement(()('(')
  PsiElement(IDENT)('aPos')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(()('(')
  PsiElement(IDENT)('toClear')
  PsiElement(IDENT)('board')
  PsiElement(TRUE)('true')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('reason')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('reason')
  PsiElement(=)('=')
  PsiElement(STRING_LITERAL)('"all of the assumptions "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('joined')
  PsiElement(STRING_LITERAL)('", "')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('as')
  PsiElement())(')')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" imply "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"\n\t"')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('             ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('joined')
  PsiElement(STRING_LITERAL)('"\n\t"')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('showcs')
  PsiElement(.)('.')
  PsiElement(IDENT)('reverse')
  PsiElement())(')')
  PsiElement(IDENT)('oss')
  PsiElement())(')')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"\n\t"')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"One of them must be true, so "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('" must be true."')
  PsiElement(EOL)('\n')
  PsiComment(BLOCK_COMMENT)('{-\n    For some functions, we need a data structure like\n        [ (Assumption, [[Assumption]]) ]\n    i.e. a list of possible assumptions including all implied assumptions.\n    The implied assumptions shall at best be stored in reverse order for easier selection of:\n    - self-contradicting assumptions,\n    - everything that follows from a given assumption (map (map head) [[a]])\n    -...\n-}')
  PsiComment(DOC_COMMENT)('--- List of all assumptions for a given board (Brett)\n')
  PsiElement(IDENT)('assumptions')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('assumptions')
  PsiElement(IDENT)('board')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(()('(')
  PsiElement(IDENT)('p')
  PsiElement(,)(',')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('board')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('!')
  PsiElement(()('(')
  PsiElement(IDENT)('single')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('a')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('ISNOT')
  PsiElement(IDENT)('p')
  PsiElement())(')')
  PsiElement(IDENT)('cs')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('IS')
  PsiElement(IDENT)('p')
  PsiElement())(')')
  PsiElement(IDENT)('cs')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('consequences')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('consequences')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('as')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(()('(')
  PsiElement(IDENT)('conseq')
  PsiElement(IDENT)('board')
  PsiElement())(')')
  PsiElement(IDENT)('as')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('acstree')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('Brett')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('TreeMap')
  PsiElement(IDENT)('Assumption')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('acstree')
  PsiElement(IDENT)('board')
  PsiElement(=)('=')
  PsiElement(IDENT)('TM')
  PsiElement(.)('.')
  PsiElement(IDENT)('fromList')
  PsiElement(()('(')
  PsiElement(IDENT)('zip')
  PsiElement(IDENT)('as')
  PsiElement(IDENT)('cs')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('as')
  PsiElement(=)('=')
  PsiElement(IDENT)('assumptions')
  PsiElement(IDENT)('board')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('cs')
  PsiElement(=)('=')
  PsiElement(IDENT)('consequences')
  PsiElement(IDENT)('board')
  PsiElement(IDENT)('as')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- bypass maybe on tree lookup\n')
  PsiElement(IDENT)('find')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('TreeMap')
  PsiElement(IDENT)('Assumption')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('Assumption')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('find')
  PsiElement(IDENT)('t')
  PsiElement(IDENT)('a')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('Just')
  PsiElement(IDENT)('cs')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('t')
  PsiElement(.)('.')
  PsiElement(IDENT)('lookup')
  PsiElement(IDENT)('a')
  PsiElement(=)('=')
  PsiElement(IDENT)('cs')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(IDENT)('error')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"no consequences for "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(IDENT)('a')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- for performance reasons, we confine ourselves to implication chains of length 20 per assumption\n')
  PsiElement(IDENT)('mkPaths')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('TreeMap')
  PsiElement(IDENT)('Assumption')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(()('(')
  PsiElement(IDENT)('Assumption')
  PsiElement(,)(',')
  PsiElement([)('[')
  PsiElement([)('[')
  PsiElement(IDENT)('Assumption')
  PsiElement(])(']')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('mkPaths')
  PsiElement(IDENT)('acst')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('impl')
  PsiElement(()('(')
  PsiElement(IDENT)('keys')
  PsiElement(IDENT)('acst')
  PsiElement())(')')
  PsiComment(LINE_COMMENT)('-- {[a1], [a2], [a3] ]\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('        -- [Assumption] -> [(a, [chains, ordered by length]\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('impl')
  PsiElement(IDENT)('a')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiElement(IDENT)('impls')
  PsiElement([)('[')
  PsiElement([)('[')
  PsiElement(IDENT)('a')
  PsiElement(])(']')
  PsiElement(])(']')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('impls')
  PsiElement(IDENT)('ns')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('1000')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('concat')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('takeUntil')
  PsiElement(IDENT)('null')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('iterate')
  PsiElement(IDENT)('expandchain')
  PsiElement())(')')
  PsiElement(IDENT)('ns')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('        -- expandchain :: [[Assumption]] -> [[Assumption]]\n')
  PsiElement(IDENT)('expandchain')
  PsiElement(IDENT)('css')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(()('(')
  PsiElement(IDENT)('n')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('a')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('as')
  PsiElement())(')')
  PsiElement(OPERATOR)('|')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(()('(')
  PsiElement(IDENT)('a')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('as')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('css')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- list of assumptions\n')
  PsiElement(IDENT)('n')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('find')
  PsiElement(IDENT)('acst')
  PsiElement(IDENT)('a')
  PsiElement(,)(',')
  PsiComment(LINE_COMMENT)('-- consequences of a\n')
  PsiElement(IDENT)('n')
  PsiElement(`)('`')
  PsiElement(IDENT)('notElem')
  PsiElement(`)('`')
  PsiElement(IDENT)('as')
  PsiComment(LINE_COMMENT)('-- avoid loops\n')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('        -- uni (a:as) = a : uni (filter ((head a !=) • head) as)\n')
  PsiComment(LINE_COMMENT)('        -- uni [] = empty\n')
  PsiComment(LINE_COMMENT)('        -- empty = []\n')
  PsiComment(LINE_COMMENT)('-- ------------------ SOLVE A SUDOKU --------------------------\n')
  PsiComment(LINE_COMMENT)('-- Apply all available strategies until nothing changes anymore\n')
  PsiComment(LINE_COMMENT)('-- Strategy functions are supposed to return a list of\n')
  PsiComment(LINE_COMMENT)('-- functions, which, when applied to a board, give a changed board.\n')
  PsiComment(LINE_COMMENT)('-- When a strategy does not find anything to alter,\n')
  PsiComment(LINE_COMMENT)('-- it returns [], and the next strategy can be tried.\n')
  PsiElement(IDENT)('solve')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('all')
  PsiElement(()('(')
  PsiElement(IDENT)('single')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('result')
  PsiElement(STRING_LITERAL)('"Solved"')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('any')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement(.)('.')
  PsiElement(IDENT)('snd')
  PsiElement())(')')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('result')
  PsiElement(STRING_LITERAL)('"not solvable"')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('reduce')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- compute smallest candidate sets\n')
  PsiComment(LINE_COMMENT)('-- comment "candidate sets are up to date" = ()\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('hiddenSingle')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find HIDDEN SINGLES\n')
  PsiComment(LINE_COMMENT)('-- comment "no more hidden singles" = ()\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('intersections')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find locked candidates\n')
  PsiComment(LINE_COMMENT)('-- comment "no more intersections" = ()\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('nakedPair')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find NAKED PAIRS, TRIPLES or QUADRUPELS\n')
  PsiComment(LINE_COMMENT)('-- comment "no more naked pairs" = ()\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('hiddenPair')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find HIDDEN PAIRS, TRIPLES or QUADRUPELS\n')
  PsiComment(LINE_COMMENT)('-- comment "no more hidden pairs" = ()\n')
  PsiComment(LINE_COMMENT)('-- res@(_:_) <- nakedPair 3 b     = apply b res >>= solve       // find NAKED PAIRS, TRIPLES or QUADRUPELS\n')
  PsiComment(LINE_COMMENT)('-- | comment "no more naked triples" = ()\n')
  PsiComment(LINE_COMMENT)('-- res@(_:_) <- hiddenPair  3 b    = apply b res >>= solve      // find HIDDEN PAIRS, TRIPLES or QUADRUPELS\n')
  PsiComment(LINE_COMMENT)('-- | comment "no more hidden triples" = ()\n')
  PsiComment(LINE_COMMENT)('-- res@(_:_) <- nakedPair 4 b     = apply b res >>=solve       // find NAKED PAIRS, TRIPLES or QUADRUPELS\n')
  PsiComment(LINE_COMMENT)('-- | comment "no more naked quadruples" = ()\n')
  PsiComment(LINE_COMMENT)('-- res@(_:_) <- hiddenPair  4 b    = apply b res >>=solve      // find HIDDEN PAIRS, TRIPLES or QUADRUPELS\n')
  PsiComment(LINE_COMMENT)('-- | comment "no more hidden quadruples" = ()\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('xyWing')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find XY WINGS\n')
  PsiComment(LINE_COMMENT)('-- comment "no more xy wings"       = ()\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('fish')
  PsiElement(NUMBER_LITERAL)('2')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find 2-FISH\n')
  PsiComment(LINE_COMMENT)('-- comment "no more x-wings"        = ()\n')
  PsiComment(LINE_COMMENT)('-- res@(_:_) <- fish 3 b            = apply b res >>=solve      // find 3-FISH\n')
  PsiComment(LINE_COMMENT)('-- | comment "no more swordfish"      = ()\n')
  PsiComment(LINE_COMMENT)('-- res@(_:_) <- fish 4 b            = apply b res >>=solve      // find 4-FISH\n')
  PsiComment(LINE_COMMENT)('-- | comment "no more jellyfish"      = ()\n')
  PsiComment(LINE_COMMENT)('-- | comment pcomment                 = ()\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('chain')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('paths')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(()('(')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(IDENT)('res')
  PsiElement())(')')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find forcing chains\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('cellRegionChain')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('paths')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(()('(')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(IDENT)('res')
  PsiElement())(')')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find common conclusion for true assumption\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('res')
  PsiElement(OPERATOR)('@')
  PsiElement(()('(')
  PsiElement(_)('_')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(_)('_')
  PsiElement())(')')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('chainContra')
  PsiElement(IDENT)('b')
  PsiElement(IDENT)('paths')
  PsiElement(=)('=')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('b')
  PsiElement(()('(')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(IDENT)('res')
  PsiElement())(')')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiComment(LINE_COMMENT)('-- find assumptions that allow to infer both a and !a\n')
  PsiComment(LINE_COMMENT)('-- comment "consistent conclusions only"       = ()\n')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(IDENT)('result')
  PsiElement(STRING_LITERAL)('"ambiguous"')
  PsiElement(IDENT)('b')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('apply')
  PsiElement(IDENT)('brd')
  PsiElement(IDENT)('fs')
  PsiElement(=)('=')
  PsiElement(IDENT)('foldM')
  PsiElement(()('(')
  PsiElement(OPERATOR)('\')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('\')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('f')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('brd')
  PsiElement(IDENT)('fs')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('paths')
  PsiElement(=)('=')
  PsiElement(IDENT)('mkPaths')
  PsiElement(()('(')
  PsiElement(IDENT)('acstree')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('        -- pcomment = show (length paths) ++ " assumptions with " ++ show (fold (+) 0 (map (length <~ snd) paths))\n')
  PsiComment(LINE_COMMENT)('        --    ++ " implication chains"\n')
  PsiComment(LINE_COMMENT)('-- comment com = do stderr << com << "\n" for false\n')
  PsiComment(LINE_COMMENT)('-- log com     = do stderr << com << "\n" for true\n')
  PsiComment(DOC_COMMENT)('--- turn a string into a row\n')
  PsiElement(IDENT)('mkrow')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('String')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement([)('[')
  PsiElement(IDENT)('Zelle')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('mkrow')
  PsiElement(IDENT)('s')
  PsiElement(=)('=')
  PsiElement(IDENT)('mkrow1')
  PsiElement(IDENT)('xs')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('xs')
  PsiElement(=)('=')
  PsiElement(IDENT)('s')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(STRING_LITERAL)('"---------"')
  PsiComment(LINE_COMMENT)('-- make sure at least 9 elements\n')
  PsiElement(IDENT)('mkrow1')
  PsiElement(IDENT)('xs')
  PsiElement(=)('=')
  PsiElement(()('(')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('filter')
  PsiElement(()('(')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(OPERATOR)('!')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('f')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('unpacked')
  PsiElement())(')')
  PsiElement(IDENT)('xs')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('f')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(CHAR_LITERAL)(''1'')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('<')
  PsiElement(=)('=')
  PsiElement(CHAR_LITERAL)(''9'')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(IDENT)('ord')
  PsiElement(IDENT)('x')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('ord')
  PsiElement(CHAR_LITERAL)(''0'')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('x')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(CHAR_LITERAL)('' '')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiComment(LINE_COMMENT)('-- ignored\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(IDENT)('elements')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('main')
  PsiElement([)('[')
  PsiElement(STRING_LITERAL)('"-h"')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(IDENT)('main')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('main')
  PsiElement([)('[')
  PsiElement(STRING_LITERAL)('"-help"')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(IDENT)('main')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('main')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('mapM_')
  PsiElement(IDENT)('stderr')
  PsiElement(.)('.')
  PsiElement(IDENT)('println')
  PsiElement([)('[')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(STRING_LITERAL)('"usage: java Sudoku file ..."')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('"       java Sudoku position"')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('"where position is a 81 char string consisting of digits"')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('"One can get such a string by going to"')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('"http://www.sudokuoftheday.com/pages/s-o-t-d.php"')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('"Right click on the puzzle and open it in new tab"')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('"Copy the 81 digits from the URL in the address field of your browser."')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('""')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(STRING_LITERAL)('"There is also a file with hard sudokus in examples/top95.txt\n"')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('return')
  PsiElement(()('(')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('main')
  PsiElement([)('[')
  PsiElement(IDENT)('s')
  PsiElement(OPERATOR)('@')
  PsiElement(BAD_CHARACTER)('´')
  PsiElement(OPERATOR)('^')
  PsiElement([)('[')
  PsiElement(NUMBER_LITERAL)('0')
  PsiElement(NUMBER_LITERAL)('-9')
  PsiElement(OPERATOR)('\')
  PsiElement(IDENT)('W')
  PsiElement(])(']')
  PsiElement({)('{')
  PsiElement(NUMBER_LITERAL)('81')
  PsiElement(})('}')
  PsiElement(OPERATOR)('$')
  PsiElement(BAD_CHARACTER)('´')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(IDENT)('solve')
  PsiElement(IDENT)('board')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('return')
  PsiElement(()('(')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('board')
  PsiElement(=)('=')
  PsiElement(IDENT)('zip')
  PsiElement(IDENT)('positions')
  PsiElement(IDENT)('felder')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('felder')
  PsiElement(=)('=')
  PsiElement(IDENT)('decode')
  PsiElement(IDENT)('s')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('main')
  PsiElement(IDENT)('files')
  PsiElement(=)('=')
  PsiElement(IDENT)('forM_')
  PsiElement(IDENT)('files')
  PsiElement(IDENT)('sudoku')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('sudoku')
  PsiElement(IDENT)('file')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('br')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('openReader')
  PsiElement(IDENT)('file')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('lines')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('BufferedReader')
  PsiElement(.)('.')
  PsiElement(IDENT)('getLines')
  PsiElement(IDENT)('br')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('bs')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('process')
  PsiElement(IDENT)('lines')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('ss')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('mapM')
  PsiElement(()('(')
  PsiElement(OPERATOR)('\')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('-')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('print')
  PsiElement(STRING_LITERAL)('"Puzzle: "')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('printb')
  PsiElement(IDENT)('b')
  PsiElement(OPERATOR)('>')
  PsiElement(OPERATOR)('>')
  PsiElement(IDENT)('solve')
  PsiElement(IDENT)('b')
  PsiElement())(')')
  PsiElement(IDENT)('bs')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('println')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"Euler: "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('show')
  PsiElement(()('(')
  PsiElement(IDENT)('sum')
  PsiElement(()('(')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('res012')
  PsiElement(IDENT)('ss')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('return')
  PsiElement(()('(')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('-- "--3-" => [1..9, 1..9, [3], 1..9]\n')
  PsiElement(IDENT)('decode')
  PsiElement(IDENT)('s')
  PsiElement(=)('=')
  PsiElement(IDENT)('map')
  PsiElement(IDENT)('candi')
  PsiElement(()('(')
  PsiElement(IDENT)('unpacked')
  PsiElement(IDENT)('s')
  PsiElement())(')')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('candi')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('>')
  PsiElement(=)('=')
  PsiElement(CHAR_LITERAL)(''1'')
  PsiElement(OPERATOR)('&')
  PsiElement(OPERATOR)('&')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('<')
  PsiElement(=)('=')
  PsiElement(CHAR_LITERAL)(''9'')
  PsiElement(=)('=')
  PsiElement([)('[')
  PsiElement(()('(')
  PsiElement(IDENT)('ord')
  PsiElement(IDENT)('c')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('ord')
  PsiElement(CHAR_LITERAL)(''0'')
  PsiElement())(')')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(IDENT)('elements')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('process')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(=)('=')
  PsiElement(IDENT)('return')
  PsiElement([)('[')
  PsiElement(])(']')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('process')
  PsiElement(()('(')
  PsiElement(IDENT)('s')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('ss')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('s')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(NUMBER_LITERAL)('81')
  PsiElement(=)('=')
  PsiElement(IDENT)('consider')
  PsiElement(IDENT)('b1')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('s')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('length')
  PsiElement(IDENT)('acht')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement(NUMBER_LITERAL)('8')
  PsiElement(,)(',')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('all')
  PsiElement(()('(')
  PsiElement(()('(')
  PsiElement(NUMBER_LITERAL)('9')
  PsiElement(=)('=')
  PsiElement(=)('=')
  PsiElement())(')')
  PsiElement(OPERATOR)('•')
  PsiElement(IDENT)('length')
  PsiElement())(')')
  PsiElement(IDENT)('acht')
  PsiElement(=)('=')
  PsiElement(IDENT)('consider')
  PsiElement(IDENT)('b2')
  PsiElement(EOL)('\n')
  PsiElement(OPERATOR)('|')
  PsiElement(IDENT)('otherwise')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('stderr')
  PsiElement(.)('.')
  PsiElement(IDENT)('println')
  PsiElement(()('(')
  PsiElement(STRING_LITERAL)('"skipped line: "')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement(IDENT)('s')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('process')
  PsiElement(IDENT)('ss')
  PsiElement(EOL)('\n')
  PsiElement(WHERE)('where')
  PsiElement(EOL)('\n')
  PsiElement(INDENT)('     ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('acht')
  PsiElement(=)('=')
  PsiElement(IDENT)('take')
  PsiElement(NUMBER_LITERAL)('8')
  PsiElement(IDENT)('ss')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('neun')
  PsiElement(=)('=')
  PsiElement(IDENT)('fold')
  PsiElement(()('(')
  PsiElement(OPERATOR)('+')
  PsiElement(OPERATOR)('+')
  PsiElement())(')')
  PsiElement(STRING_LITERAL)('""')
  PsiElement(()('(')
  PsiElement(IDENT)('s')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('acht')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('b1')
  PsiElement(=)('=')
  PsiElement(IDENT)('zip')
  PsiElement(IDENT)('positions')
  PsiElement(()('(')
  PsiElement(IDENT)('decode')
  PsiElement(IDENT)('s')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('b2')
  PsiElement(=)('=')
  PsiElement(IDENT)('zip')
  PsiElement(IDENT)('positions')
  PsiElement(()('(')
  PsiElement(IDENT)('decode')
  PsiElement(IDENT)('neun')
  PsiElement())(')')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('consider')
  PsiElement(IDENT)('b')
  PsiElement(=)('=')
  PsiElement(DO)('do')
  PsiElement(EOL)('\n')
  PsiComment(LINE_COMMENT)('            -- print "Puzzle: "\n')
  PsiComment(LINE_COMMENT)('            -- printb b\n')
  PsiElement(INDENT)('         ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(INDENT)(' ')
  PsiElement(IDENT)('bs')
  PsiElement(OPERATOR)('<')
  PsiElement(OPERATOR)('-')
  PsiElement(IDENT)('process')
  PsiElement(IDENT)('ss')
  PsiElement(EOL)('\n')
  PsiElement(IDENT)('return')
  PsiElement(()('(')
  PsiElement(IDENT)('b')
  PsiElement(BAD_CHARACTER)(':')
  PsiElement(IDENT)('bs')
  PsiElement())(')')