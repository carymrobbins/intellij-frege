LINE_COMMENT ('-- https://github.com/Frege/frege/blob/master/examples/Sudoku.fr\n') 0-65
KEYWORD ('package') 65-72
WHITE_SPACE (' ') 72-73
IDENT ('examples') 73-81
DOT ('.') 81-82
IDENT ('Sudoku') 82-88
WHITE_SPACE (' ') 88-89
KEYWORD ('where') 89-94
WHITE_SPACE ('\n\n') 94-96
KEYWORD ('import') 96-102
WHITE_SPACE (' ') 102-103
IDENT ('Data') 103-107
DOT ('.') 107-108
IDENT ('TreeMap') 108-115
WHITE_SPACE (' ') 115-116
IDENT ('as') 116-118
WHITE_SPACE (' ') 118-119
IDENT ('TM') 119-121
LPAREN ('(') 121-122
IDENT ('TreeMap') 122-129
COMMA (',') 129-130
WHITE_SPACE (' ') 130-131
IDENT ('keys') 131-135
RPAREN (')') 135-136
WHITE_SPACE ('\n') 136-137
KEYWORD ('import') 137-143
WHITE_SPACE (' ') 143-144
IDENT ('Data') 144-148
DOT ('.') 148-149
IDENT ('List') 149-153
WHITE_SPACE (' ') 153-154
IDENT ('as') 154-156
WHITE_SPACE (' ') 156-157
IDENT ('DL') 157-159
WHITE_SPACE (' ') 159-160
IDENT ('hiding') 160-166
WHITE_SPACE (' ') 166-167
LPAREN ('(') 167-168
IDENT ('find') 168-172
COMMA (',') 172-173
WHITE_SPACE (' ') 173-174
IDENT ('union') 174-179
RPAREN (')') 179-180
WHITE_SPACE ('\n\n\n') 180-183
KEYWORD ('type') 183-187
WHITE_SPACE (' ') 187-188
IDENT ('Element') 188-195
WHITE_SPACE ('    ') 195-199
OPERATOR ('=') 199-200
WHITE_SPACE (' ') 200-201
IDENT ('Int') 201-204
WHITE_SPACE ('           ') 204-215
LINE_COMMENT ('-- 1,2,3,4,5,6,7,8,9\n') 215-236
KEYWORD ('type') 236-240
WHITE_SPACE (' ') 240-241
IDENT ('Zelle') 241-246
WHITE_SPACE ('      ') 246-252
OPERATOR ('=') 252-253
WHITE_SPACE (' ') 253-254
LBRACKET ('[') 254-255
IDENT ('Element') 255-262
RBRACKET (']') 262-263
WHITE_SPACE ('     ') 263-268
LINE_COMMENT ('-- set of candidates\n') 268-289
KEYWORD ('type') 289-293
WHITE_SPACE (' ') 293-294
IDENT ('Position') 294-302
WHITE_SPACE ('   ') 302-305
OPERATOR ('=') 305-306
WHITE_SPACE (' ') 306-307
IDENT ('Int') 307-310
WHITE_SPACE ('           ') 310-321
LINE_COMMENT ('-- 0..80\n') 321-330
KEYWORD ('type') 330-334
WHITE_SPACE (' ') 334-335
IDENT ('Feld') 335-339
WHITE_SPACE ('       ') 339-346
OPERATOR ('=') 346-347
WHITE_SPACE (' ') 347-348
LPAREN ('(') 348-349
IDENT ('Position') 349-357
COMMA (',') 357-358
WHITE_SPACE (' ') 358-359
IDENT ('Zelle') 359-364
RPAREN (')') 364-365
WHITE_SPACE ('\n') 365-366
KEYWORD ('type') 366-370
WHITE_SPACE (' ') 370-371
IDENT ('Brett') 371-376
WHITE_SPACE ('      ') 376-382
OPERATOR ('=') 382-383
WHITE_SPACE (' ') 383-384
LBRACKET ('[') 384-385
IDENT ('Feld') 385-389
RBRACKET (']') 389-390
WHITE_SPACE ('\n\n') 390-392
DOC_COMMENT ('--- data type for assumptions and conclusions\n') 392-438
KEYWORD ('data') 438-442
WHITE_SPACE (' ') 442-443
IDENT ('Assumption') 443-453
WHITE_SPACE (' ') 453-454
OPERATOR ('=') 454-455
WHITE_SPACE ('\n              ') 455-470
OPERATOR ('!') 470-471
IDENT ('ISNOT') 471-476
WHITE_SPACE (' ') 476-477
IDENT ('Position') 477-485
WHITE_SPACE (' ') 485-486
IDENT ('Element') 486-493
WHITE_SPACE ('\n            ') 493-506
OPERATOR ('|') 506-507
WHITE_SPACE (' ') 507-508
OPERATOR ('!') 508-509
IDENT ('IS') 509-511
WHITE_SPACE ('    ') 511-515
IDENT ('Position') 515-523
WHITE_SPACE (' ') 523-524
IDENT ('Element') 524-531
WHITE_SPACE ('\n\n\n') 531-534
KEYWORD ('derive') 534-540
WHITE_SPACE (' ') 540-541
IDENT ('Eq') 541-543
WHITE_SPACE (' ') 543-544
IDENT ('Assumption') 544-554
WHITE_SPACE ('\n') 554-555
KEYWORD ('derive') 555-561
WHITE_SPACE (' ') 561-562
IDENT ('Ord') 562-565
WHITE_SPACE (' ') 565-566
IDENT ('Assumption') 566-576
WHITE_SPACE ('\n') 576-577
KEYWORD ('instance') 577-585
WHITE_SPACE (' ') 585-586
IDENT ('Show') 586-590
WHITE_SPACE (' ') 590-591
IDENT ('Assumption') 591-601
WHITE_SPACE (' ') 601-602
KEYWORD ('where') 602-607
WHITE_SPACE ('\n    ') 607-612
IDENT ('show') 612-616
WHITE_SPACE (' ') 616-617
LPAREN ('(') 617-618
IDENT ('IS') 618-620
WHITE_SPACE (' ') 620-621
IDENT ('p') 621-622
WHITE_SPACE (' ') 622-623
IDENT ('e') 623-624
RPAREN (')') 624-625
WHITE_SPACE ('    ') 625-629
OPERATOR ('=') 629-630
WHITE_SPACE (' ') 630-631
IDENT ('pname') 631-636
WHITE_SPACE (' ') 636-637
IDENT ('p') 637-638
WHITE_SPACE (' ') 638-639
OPERATOR ('++') 639-641
WHITE_SPACE (' ') 641-642
STRING_LITERAL ('"="') 642-645
WHITE_SPACE (' ') 645-646
OPERATOR ('++') 646-648
WHITE_SPACE (' ') 648-649
IDENT ('e') 649-650
DOT ('.') 650-651
IDENT ('show') 651-655
WHITE_SPACE ('\n    ') 655-660
IDENT ('show') 660-664
WHITE_SPACE (' ') 664-665
LPAREN ('(') 665-666
IDENT ('ISNOT') 666-671
WHITE_SPACE (' ') 671-672
IDENT ('p') 672-673
WHITE_SPACE (' ') 673-674
IDENT ('e') 674-675
RPAREN (')') 675-676
WHITE_SPACE (' ') 676-677
OPERATOR ('=') 677-678
WHITE_SPACE (' ') 678-679
IDENT ('pname') 679-684
WHITE_SPACE (' ') 684-685
IDENT ('p') 685-686
WHITE_SPACE (' ') 686-687
OPERATOR ('++') 687-689
WHITE_SPACE (' ') 689-690
STRING_LITERAL ('"/"') 690-693
WHITE_SPACE (' ') 693-694
OPERATOR ('++') 694-696
WHITE_SPACE (' ') 696-697
IDENT ('e') 697-698
DOT ('.') 698-699
IDENT ('show') 699-703
WHITE_SPACE ('\n\n') 703-705
IDENT ('showcs') 705-711
WHITE_SPACE (' ') 711-712
IDENT ('cs') 712-714
WHITE_SPACE (' ') 714-715
OPERATOR ('=') 715-716
WHITE_SPACE (' ') 716-717
IDENT ('joined') 717-723
WHITE_SPACE (' ') 723-724
STRING_LITERAL ('" "') 724-727
WHITE_SPACE (' ') 727-728
LPAREN ('(') 728-729
IDENT ('map') 729-732
WHITE_SPACE (' ') 732-733
IDENT ('Assumption') 733-743
DOT ('.') 743-744
IDENT ('show') 744-748
WHITE_SPACE (' ') 748-749
IDENT ('cs') 749-751
RPAREN (')') 751-752
WHITE_SPACE ('\n\n') 752-754
IDENT ('elements') 754-762
WHITE_SPACE (' ') 762-763
OPERATOR ('::') 763-765
WHITE_SPACE (' ') 765-766
LBRACKET ('[') 766-767
IDENT ('Element') 767-774
RBRACKET (']') 774-775
WHITE_SPACE ('           ') 775-786
LINE_COMMENT ('-- all possible elements\n') 786-811
IDENT ('elements') 811-819
WHITE_SPACE (' ') 819-820
OPERATOR ('=') 820-821
WHITE_SPACE (' ') 821-822
LBRACKET ('[') 822-823
NUMBER_LITERAL ('1') 823-824
WHITE_SPACE (' ') 824-825
DOT ('.') 825-826
DOT ('.') 826-827
WHITE_SPACE (' ') 827-828
NUMBER_LITERAL ('9') 828-829
RBRACKET (']') 829-830
WHITE_SPACE ('\n\n') 830-832
BLOCK_COMMENT ('{-\n    a  b  c   d  e  f   g  h  i\n     0  1  2 | 3  4  5 | 6  7  8    1\n     9 10 11 |12 13 14 |15 16 17    2\n    18 19 20 |21 22 23 |24 25 26    3\n    ---------|---------|--------\n    27 28 29 |30 31 32 |33 34 35    4\n    36 37 38 |39 40 41 |42 43 44    5\n    45 46 47 |48 49 50 |51 52 53    6\n    ---------|---------|--------\n    54 55 56 |57 58 59 |60 61 62    7\n    63 64 65 |66 67 68 |69 70 71    8\n    72 73 74 |75 76 77 |78 79 80    9\n-}') 832-1277
WHITE_SPACE ('\n\n') 1277-1279
IDENT ('positions') 1279-1288
WHITE_SPACE (' ') 1288-1289
OPERATOR ('::') 1289-1291
WHITE_SPACE (' ') 1291-1292
LBRACKET ('[') 1292-1293
IDENT ('Position') 1293-1301
RBRACKET (']') 1301-1302
WHITE_SPACE ('         ') 1302-1311
LINE_COMMENT ('-- all possible positions\n') 1311-1337
IDENT ('positions') 1337-1346
WHITE_SPACE (' ') 1346-1347
OPERATOR ('=') 1347-1348
WHITE_SPACE (' ') 1348-1349
LBRACKET ('[') 1349-1350
NUMBER_LITERAL ('0') 1350-1351
DOT ('.') 1351-1352
DOT ('.') 1352-1353
NUMBER_LITERAL ('80') 1353-1355
RBRACKET (']') 1355-1356
WHITE_SPACE ('\n') 1356-1357
IDENT ('rowstarts') 1357-1366
WHITE_SPACE (' ') 1366-1367
OPERATOR ('::') 1367-1369
WHITE_SPACE (' ') 1369-1370
LBRACKET ('[') 1370-1371
IDENT ('Position') 1371-1379
RBRACKET (']') 1379-1380
WHITE_SPACE ('         ') 1380-1389
LINE_COMMENT ('-- all positions where a row is starting\n') 1389-1430
IDENT ('rowstarts') 1430-1439
WHITE_SPACE (' ') 1439-1440
OPERATOR ('=') 1440-1441
WHITE_SPACE ('  ') 1441-1443
LBRACKET ('[') 1443-1444
NUMBER_LITERAL ('0') 1444-1445
COMMA (',') 1445-1446
NUMBER_LITERAL ('9') 1446-1447
COMMA (',') 1447-1448
NUMBER_LITERAL ('18') 1448-1450
COMMA (',') 1450-1451
NUMBER_LITERAL ('27') 1451-1453
COMMA (',') 1453-1454
NUMBER_LITERAL ('36') 1454-1456
COMMA (',') 1456-1457
NUMBER_LITERAL ('45') 1457-1459
COMMA (',') 1459-1460
NUMBER_LITERAL ('54') 1460-1462
COMMA (',') 1462-1463
NUMBER_LITERAL ('63') 1463-1465
COMMA (',') 1465-1466
NUMBER_LITERAL ('72') 1466-1468
RBRACKET (']') 1468-1469
WHITE_SPACE ('\n') 1469-1470
IDENT ('colstarts') 1470-1479
WHITE_SPACE (' ') 1479-1480
OPERATOR ('::') 1480-1482
WHITE_SPACE (' ') 1482-1483
LBRACKET ('[') 1483-1484
IDENT ('Position') 1484-1492
RBRACKET (']') 1492-1493
WHITE_SPACE ('         ') 1493-1502
LINE_COMMENT ('-- all positions where a column is starting\n') 1502-1546
IDENT ('colstarts') 1546-1555
WHITE_SPACE (' ') 1555-1556
OPERATOR ('=') 1556-1557
WHITE_SPACE ('  ') 1557-1559
LBRACKET ('[') 1559-1560
NUMBER_LITERAL ('0') 1560-1561
COMMA (',') 1561-1562
NUMBER_LITERAL ('1') 1562-1563
COMMA (',') 1563-1564
NUMBER_LITERAL ('2') 1564-1565
COMMA (',') 1565-1566
NUMBER_LITERAL ('3') 1566-1567
COMMA (',') 1567-1568
NUMBER_LITERAL ('4') 1568-1569
COMMA (',') 1569-1570
NUMBER_LITERAL ('5') 1570-1571
COMMA (',') 1571-1572
NUMBER_LITERAL ('6') 1572-1573
COMMA (',') 1573-1574
NUMBER_LITERAL ('7') 1574-1575
COMMA (',') 1575-1576
NUMBER_LITERAL ('8') 1576-1577
RBRACKET (']') 1577-1578
WHITE_SPACE ('\n') 1578-1579
IDENT ('boxstarts') 1579-1588
WHITE_SPACE (' ') 1588-1589
OPERATOR ('::') 1589-1591
WHITE_SPACE (' ') 1591-1592
LBRACKET ('[') 1592-1593
IDENT ('Position') 1593-1601
RBRACKET (']') 1601-1602
WHITE_SPACE ('         ') 1602-1611
LINE_COMMENT ('-- all positions where a box is starting\n') 1611-1652
IDENT ('boxstarts') 1652-1661
WHITE_SPACE (' ') 1661-1662
OPERATOR ('=') 1662-1663
WHITE_SPACE ('  ') 1663-1665
LBRACKET ('[') 1665-1666
NUMBER_LITERAL ('0') 1666-1667
COMMA (',') 1667-1668
NUMBER_LITERAL ('3') 1668-1669
COMMA (',') 1669-1670
NUMBER_LITERAL ('6') 1670-1671
COMMA (',') 1671-1672
NUMBER_LITERAL ('27') 1672-1674
COMMA (',') 1674-1675
NUMBER_LITERAL ('30') 1675-1677
COMMA (',') 1677-1678
NUMBER_LITERAL ('33') 1678-1680
COMMA (',') 1680-1681
NUMBER_LITERAL ('54') 1681-1683
COMMA (',') 1683-1684
NUMBER_LITERAL ('57') 1684-1686
COMMA (',') 1686-1687
NUMBER_LITERAL ('60') 1687-1689
RBRACKET (']') 1689-1690
WHITE_SPACE ('\n') 1690-1691
IDENT ('boxmuster') 1691-1700
WHITE_SPACE (' ') 1700-1701
OPERATOR ('::') 1701-1703
WHITE_SPACE (' ') 1703-1704
LBRACKET ('[') 1704-1705
IDENT ('Position') 1705-1713
RBRACKET (']') 1713-1714
WHITE_SPACE ('         ') 1714-1723
LINE_COMMENT ('-- pattern for a box, by adding upper left position results in real box\n') 1723-1795
IDENT ('boxmuster') 1795-1804
WHITE_SPACE (' ') 1804-1805
OPERATOR ('=') 1805-1806
WHITE_SPACE ('  ') 1806-1808
LBRACKET ('[') 1808-1809
NUMBER_LITERAL ('0') 1809-1810
COMMA (',') 1810-1811
NUMBER_LITERAL ('1') 1811-1812
COMMA (',') 1812-1813
NUMBER_LITERAL ('2') 1813-1814
COMMA (',') 1814-1815
NUMBER_LITERAL ('9') 1815-1816
COMMA (',') 1816-1817
NUMBER_LITERAL ('10') 1817-1819
COMMA (',') 1819-1820
NUMBER_LITERAL ('11') 1820-1822
COMMA (',') 1822-1823
NUMBER_LITERAL ('18') 1823-1825
COMMA (',') 1825-1826
NUMBER_LITERAL ('19') 1826-1828
COMMA (',') 1828-1829
NUMBER_LITERAL ('20') 1829-1831
RBRACKET (']') 1831-1832
WHITE_SPACE ('\n\n\n') 1832-1835
DOC_COMMENT ('--- extract field for position\n') 1835-1866
IDENT ('getf') 1866-1870
WHITE_SPACE (' ') 1870-1871
OPERATOR ('::') 1871-1873
WHITE_SPACE (' ') 1873-1874
IDENT ('Brett') 1874-1879
WHITE_SPACE (' ') 1879-1880
OPERATOR ('->') 1880-1882
WHITE_SPACE (' ') 1882-1883
IDENT ('Position') 1883-1891
WHITE_SPACE ('  ') 1891-1893
OPERATOR ('->') 1893-1895
WHITE_SPACE (' ') 1895-1896
IDENT ('Feld') 1896-1900
WHITE_SPACE ('\n') 1900-1901
IDENT ('getf') 1901-1905
WHITE_SPACE (' ') 1905-1906
LPAREN ('(') 1906-1907
IDENT ('f') 1907-1908
OPERATOR (':') 1908-1909
IDENT ('fs') 1909-1911
RPAREN (')') 1911-1912
WHITE_SPACE (' ') 1912-1913
IDENT ('p') 1913-1914
WHITE_SPACE ('\n    ') 1914-1919
OPERATOR ('|') 1919-1920
WHITE_SPACE (' ') 1920-1921
IDENT ('fst') 1921-1924
WHITE_SPACE (' ') 1924-1925
IDENT ('f') 1925-1926
WHITE_SPACE (' ') 1926-1927
OPERATOR ('==') 1927-1929
WHITE_SPACE (' ') 1929-1930
IDENT ('p') 1930-1931
WHITE_SPACE (' ') 1931-1932
OPERATOR ('=') 1932-1933
WHITE_SPACE (' ') 1933-1934
IDENT ('f') 1934-1935
WHITE_SPACE ('\n    ') 1935-1940
OPERATOR ('|') 1940-1941
WHITE_SPACE (' ') 1941-1942
IDENT ('otherwise') 1942-1951
WHITE_SPACE ('  ') 1951-1953
OPERATOR ('=') 1953-1954
WHITE_SPACE (' ') 1954-1955
IDENT ('getf') 1955-1959
WHITE_SPACE (' ') 1959-1960
IDENT ('fs') 1960-1962
WHITE_SPACE (' ') 1962-1963
IDENT ('p') 1963-1964
WHITE_SPACE ('\n') 1964-1965
IDENT ('getf') 1965-1969
WHITE_SPACE (' ') 1969-1970
LBRACKET ('[') 1970-1971
RBRACKET (']') 1971-1972
WHITE_SPACE (' ') 1972-1973
IDENT ('p') 1973-1974
WHITE_SPACE (' ') 1974-1975
OPERATOR ('=') 1975-1976
WHITE_SPACE (' ') 1976-1977
LPAREN ('(') 1977-1978
IDENT ('p') 1978-1979
COMMA (',') 1979-1980
LBRACKET ('[') 1980-1981
RBRACKET (']') 1981-1982
RPAREN (')') 1982-1983
WHITE_SPACE ('\n\n\n') 1983-1986
DOC_COMMENT ('--- extract cell for position\n') 1986-2016
IDENT ('getc') 2016-2020
WHITE_SPACE (' ') 2020-2021
OPERATOR ('::') 2021-2023
WHITE_SPACE (' ') 2023-2024
IDENT ('Brett') 2024-2029
WHITE_SPACE (' ') 2029-2030
OPERATOR ('->') 2030-2032
WHITE_SPACE (' ') 2032-2033
IDENT ('Position') 2033-2041
WHITE_SPACE (' ') 2041-2042
OPERATOR ('->') 2042-2044
WHITE_SPACE (' ') 2044-2045
IDENT ('Zelle') 2045-2050
WHITE_SPACE ('\n') 2050-2051
IDENT ('getc') 2051-2055
WHITE_SPACE (' ') 2055-2056
IDENT ('b') 2056-2057
WHITE_SPACE (' ') 2057-2058
IDENT ('p') 2058-2059
WHITE_SPACE (' ') 2059-2060
OPERATOR ('=') 2060-2061
WHITE_SPACE (' ') 2061-2062
IDENT ('snd') 2062-2065
WHITE_SPACE (' ') 2065-2066
LPAREN ('(') 2066-2067
IDENT ('getf') 2067-2071
WHITE_SPACE (' ') 2071-2072
IDENT ('b') 2072-2073
WHITE_SPACE (' ') 2073-2074
IDENT ('p') 2074-2075
RPAREN (')') 2075-2076
WHITE_SPACE ('\n\n') 2076-2078
DOC_COMMENT ('--- compute the list of all positions that belong to the same row as a given position\n') 2078-2164
IDENT ('row') 2164-2167
WHITE_SPACE (' ') 2167-2168
OPERATOR ('::') 2168-2170
WHITE_SPACE (' ') 2170-2171
IDENT ('Position') 2171-2179
WHITE_SPACE (' ') 2179-2180
OPERATOR ('->') 2180-2182
WHITE_SPACE (' ') 2182-2183
LBRACKET ('[') 2183-2184
IDENT ('Position') 2184-2192
RBRACKET (']') 2192-2193
WHITE_SPACE ('\n') 2193-2194
IDENT ('row') 2194-2197
WHITE_SPACE (' ') 2197-2198
IDENT ('p') 2198-2199
WHITE_SPACE (' ') 2199-2200
OPERATOR ('=') 2200-2201
WHITE_SPACE (' ') 2201-2202
LBRACKET ('[') 2202-2203
IDENT ('z') 2203-2204
DOT ('.') 2204-2205
DOT ('.') 2205-2206
LPAREN ('(') 2206-2207
IDENT ('z') 2207-2208
OPERATOR ('+') 2208-2209
NUMBER_LITERAL ('8') 2209-2210
RPAREN (')') 2210-2211
RBRACKET (']') 2211-2212
WHITE_SPACE (' ') 2212-2213
KEYWORD ('where') 2213-2218
WHITE_SPACE (' ') 2218-2219
IDENT ('z') 2219-2220
WHITE_SPACE (' ') 2220-2221
OPERATOR ('=') 2221-2222
WHITE_SPACE (' ') 2222-2223
LPAREN ('(') 2223-2224
IDENT ('p') 2224-2225
WHITE_SPACE (' ') 2225-2226
INFIX_IDENT ('`quot`') 2226-2232
WHITE_SPACE (' ') 2232-2233
NUMBER_LITERAL ('9') 2233-2234
RPAREN (')') 2234-2235
WHITE_SPACE (' ') 2235-2236
OPERATOR ('*') 2236-2237
WHITE_SPACE (' ') 2237-2238
NUMBER_LITERAL ('9') 2238-2239
WHITE_SPACE ('\n\n') 2239-2241
DOC_COMMENT ('--- compute the list of all positions that belong to the same col as a given position\n') 2241-2327
IDENT ('col') 2327-2330
WHITE_SPACE (' ') 2330-2331
OPERATOR ('::') 2331-2333
WHITE_SPACE (' ') 2333-2334
IDENT ('Position') 2334-2342
WHITE_SPACE (' ') 2342-2343
OPERATOR ('->') 2343-2345
WHITE_SPACE (' ') 2345-2346
LBRACKET ('[') 2346-2347
IDENT ('Position') 2347-2355
RBRACKET (']') 2355-2356
WHITE_SPACE ('\n') 2356-2357
IDENT ('col') 2357-2360
WHITE_SPACE (' ') 2360-2361
IDENT ('p') 2361-2362
WHITE_SPACE (' ') 2362-2363
OPERATOR ('=') 2363-2364
WHITE_SPACE (' ') 2364-2365
IDENT ('map') 2365-2368
WHITE_SPACE (' ') 2368-2369
LPAREN ('(') 2369-2370
IDENT ('c') 2370-2371
OPERATOR ('+') 2371-2372
RPAREN (')') 2372-2373
WHITE_SPACE (' ') 2373-2374
IDENT ('rowstarts') 2374-2383
WHITE_SPACE (' ') 2383-2384
KEYWORD ('where') 2384-2389
WHITE_SPACE (' ') 2389-2390
IDENT ('c') 2390-2391
WHITE_SPACE (' ') 2391-2392
OPERATOR ('=') 2392-2393
WHITE_SPACE (' ') 2393-2394
IDENT ('p') 2394-2395
WHITE_SPACE (' ') 2395-2396
INFIX_IDENT ('`mod`') 2396-2401
WHITE_SPACE (' ') 2401-2402
NUMBER_LITERAL ('9') 2402-2403
WHITE_SPACE ('\n\n') 2403-2405
DOC_COMMENT ('--- compute the list of all positions that belong to the same box as a given position\n') 2405-2491
IDENT ('box') 2491-2494
WHITE_SPACE (' ') 2494-2495
OPERATOR ('::') 2495-2497
WHITE_SPACE (' ') 2497-2498
IDENT ('Position') 2498-2506
WHITE_SPACE (' ') 2506-2507
OPERATOR ('->') 2507-2509
WHITE_SPACE (' ') 2509-2510
LBRACKET ('[') 2510-2511
IDENT ('Position') 2511-2519
RBRACKET (']') 2519-2520
WHITE_SPACE ('\n') 2520-2521
IDENT ('box') 2521-2524
WHITE_SPACE (' ') 2524-2525
IDENT ('p') 2525-2526
WHITE_SPACE ('  ') 2526-2528
OPERATOR ('=') 2528-2529
WHITE_SPACE (' ') 2529-2530
IDENT ('map') 2530-2533
WHITE_SPACE (' ') 2533-2534
LPAREN ('(') 2534-2535
IDENT ('z') 2535-2536
OPERATOR ('+') 2536-2537
RPAREN (')') 2537-2538
WHITE_SPACE (' ') 2538-2539
IDENT ('boxmuster') 2539-2548
WHITE_SPACE (' ') 2548-2549
KEYWORD ('where') 2549-2554
WHITE_SPACE ('\n    ') 2554-2559
IDENT ('ri') 2559-2561
WHITE_SPACE (' ') 2561-2562
OPERATOR ('=') 2562-2563
WHITE_SPACE (' ') 2563-2564
IDENT ('p') 2564-2565
WHITE_SPACE (' ') 2565-2566
INFIX_IDENT ('`div`') 2566-2571
WHITE_SPACE (' ') 2571-2572
NUMBER_LITERAL ('27') 2572-2574
WHITE_SPACE (' ') 2574-2575
OPERATOR ('*') 2575-2576
WHITE_SPACE (' ') 2576-2577
NUMBER_LITERAL ('27') 2577-2579
WHITE_SPACE ('    ') 2579-2583
LINE_COMMENT ('-- 0, 27 or 54, depending on row\n') 2583-2616
WHITE_SPACE ('    ') 2616-2620
IDENT ('ci') 2620-2622
WHITE_SPACE (' ') 2622-2623
OPERATOR ('=') 2623-2624
WHITE_SPACE (' ') 2624-2625
IDENT ('p') 2625-2626
WHITE_SPACE (' ') 2626-2627
INFIX_IDENT ('`mod`') 2627-2632
WHITE_SPACE (' ') 2632-2633
NUMBER_LITERAL ('9') 2633-2634
WHITE_SPACE ('          ') 2634-2644
LINE_COMMENT ('-- column index 0..8, 0,1,2 is left, 3,4,5 is middle, 6,7,8 is right\n') 2644-2713
WHITE_SPACE ('    ') 2713-2717
IDENT ('cs') 2717-2719
WHITE_SPACE (' ') 2719-2720
OPERATOR ('=') 2720-2721
WHITE_SPACE (' ') 2721-2722
IDENT ('ci') 2722-2724
WHITE_SPACE (' ') 2724-2725
INFIX_IDENT ('`div`') 2725-2730
WHITE_SPACE (' ') 2730-2731
NUMBER_LITERAL ('3') 2731-2732
WHITE_SPACE (' ') 2732-2733
OPERATOR ('*') 2733-2734
WHITE_SPACE (' ') 2734-2735
NUMBER_LITERAL ('3') 2735-2736
WHITE_SPACE ('     ') 2736-2741
LINE_COMMENT ('-- 0, 3 or 6\n') 2741-2754
WHITE_SPACE ('    ') 2754-2758
IDENT ('z') 2758-2759
WHITE_SPACE ('  ') 2759-2761
OPERATOR ('=') 2761-2762
WHITE_SPACE (' ') 2762-2763
IDENT ('ri') 2763-2765
WHITE_SPACE (' ') 2765-2766
OPERATOR ('+') 2766-2767
WHITE_SPACE (' ') 2767-2768
IDENT ('cs') 2768-2770
WHITE_SPACE ('\n\n') 2770-2772
DOC_COMMENT ('--- check if candidate set has exactly one member, i.e. field has been solved\n') 2772-2850
IDENT ('single') 2850-2856
WHITE_SPACE (' ') 2856-2857
OPERATOR ('::') 2857-2859
WHITE_SPACE (' ') 2859-2860
IDENT ('Zelle') 2860-2865
WHITE_SPACE (' ') 2865-2866
OPERATOR ('->') 2866-2868
WHITE_SPACE (' ') 2868-2869
IDENT ('Bool') 2869-2873
WHITE_SPACE ('\n') 2873-2874
IDENT ('single') 2874-2880
WHITE_SPACE (' ') 2880-2881
LBRACKET ('[') 2881-2882
IDENT ('_') 2882-2883
RBRACKET (']') 2883-2884
WHITE_SPACE (' ') 2884-2885
OPERATOR ('=') 2885-2886
WHITE_SPACE (' ') 2886-2887
KEYWORD ('true') 2887-2891
WHITE_SPACE ('\n') 2891-2892
IDENT ('single') 2892-2898
WHITE_SPACE (' ') 2898-2899
IDENT ('_') 2899-2900
WHITE_SPACE ('   ') 2900-2903
OPERATOR ('=') 2903-2904
WHITE_SPACE (' ') 2904-2905
KEYWORD ('false') 2905-2910
WHITE_SPACE ('\n\n') 2910-2912
IDENT ('unsolved') 2912-2920
WHITE_SPACE (' ') 2920-2921
OPERATOR ('::') 2921-2923
WHITE_SPACE (' ') 2923-2924
IDENT ('Zelle') 2924-2929
WHITE_SPACE (' ') 2929-2930
OPERATOR ('->') 2930-2932
WHITE_SPACE (' ') 2932-2933
IDENT ('Bool') 2933-2937
WHITE_SPACE ('\n') 2937-2938
IDENT ('unsolved') 2938-2946
WHITE_SPACE (' ') 2946-2947
LBRACKET ('[') 2947-2948
IDENT ('_') 2948-2949
RBRACKET (']') 2949-2950
WHITE_SPACE (' ') 2950-2951
OPERATOR ('=') 2951-2952
WHITE_SPACE (' ') 2952-2953
KEYWORD ('false') 2953-2958
WHITE_SPACE ('\n') 2958-2959
IDENT ('unsolved') 2959-2967
WHITE_SPACE (' ') 2967-2968
IDENT ('_') 2968-2969
WHITE_SPACE ('   ') 2969-2972
OPERATOR ('=') 2972-2973
WHITE_SPACE (' ') 2973-2974
KEYWORD ('true') 2974-2978
WHITE_SPACE ('\n\n') 2978-2980
LINE_COMMENT ('-- list of rows, cols, boxes\n') 2980-3009
IDENT ('allrows') 3009-3016
WHITE_SPACE (' ') 3016-3017
OPERATOR ('=') 3017-3018
WHITE_SPACE (' ') 3018-3019
IDENT ('map') 3019-3022
WHITE_SPACE (' ') 3022-3023
IDENT ('row') 3023-3026
WHITE_SPACE (' ') 3026-3027
IDENT ('rowstarts') 3027-3036
WHITE_SPACE ('\n') 3036-3037
IDENT ('allcols') 3037-3044
WHITE_SPACE (' ') 3044-3045
OPERATOR ('=') 3045-3046
WHITE_SPACE (' ') 3046-3047
IDENT ('map') 3047-3050
WHITE_SPACE (' ') 3050-3051
IDENT ('col') 3051-3054
WHITE_SPACE (' ') 3054-3055
IDENT ('colstarts') 3055-3064
WHITE_SPACE ('\n') 3064-3065
IDENT ('allboxs') 3065-3072
WHITE_SPACE (' ') 3072-3073
OPERATOR ('=') 3073-3074
WHITE_SPACE (' ') 3074-3075
IDENT ('map') 3075-3078
WHITE_SPACE (' ') 3078-3079
IDENT ('box') 3079-3082
WHITE_SPACE (' ') 3082-3083
IDENT ('boxstarts') 3083-3092
WHITE_SPACE ('\n') 3092-3093
IDENT ('allrcb') 3093-3099
WHITE_SPACE ('  ') 3099-3101
OPERATOR ('=') 3101-3102
WHITE_SPACE (' ') 3102-3103
IDENT ('zip') 3103-3106
WHITE_SPACE (' ') 3106-3107
LPAREN ('(') 3107-3108
IDENT ('repeat') 3108-3114
WHITE_SPACE (' ') 3114-3115
STRING_LITERAL ('"row"') 3115-3120
RPAREN (')') 3120-3121
WHITE_SPACE (' ') 3121-3122
IDENT ('allrows') 3122-3129
WHITE_SPACE ('\n          ') 3129-3140
OPERATOR ('++') 3140-3142
WHITE_SPACE (' ') 3142-3143
IDENT ('zip') 3143-3146
WHITE_SPACE (' ') 3146-3147
LPAREN ('(') 3147-3148
IDENT ('repeat') 3148-3154
WHITE_SPACE (' ') 3154-3155
STRING_LITERAL ('"col"') 3155-3160
RPAREN (')') 3160-3161
WHITE_SPACE (' ') 3161-3162
IDENT ('allcols') 3162-3169
WHITE_SPACE ('\n          ') 3169-3180
OPERATOR ('++') 3180-3182
WHITE_SPACE (' ') 3182-3183
IDENT ('zip') 3183-3186
WHITE_SPACE (' ') 3186-3187
LPAREN ('(') 3187-3188
IDENT ('repeat') 3188-3194
WHITE_SPACE (' ') 3194-3195
STRING_LITERAL ('"box"') 3195-3200
RPAREN (')') 3200-3201
WHITE_SPACE (' ') 3201-3202
IDENT ('allboxs') 3202-3209
WHITE_SPACE ('\n\n\n') 3209-3212
IDENT ('containers') 3212-3222
WHITE_SPACE (' ') 3222-3223
OPERATOR ('::') 3223-3225
WHITE_SPACE (' ') 3225-3226
LBRACKET ('[') 3226-3227
LPAREN ('(') 3227-3228
IDENT ('Position') 3228-3236
WHITE_SPACE (' ') 3236-3237
OPERATOR ('->') 3237-3239
WHITE_SPACE (' ') 3239-3240
LBRACKET ('[') 3240-3241
IDENT ('Position') 3241-3249
RBRACKET (']') 3249-3250
COMMA (',') 3250-3251
WHITE_SPACE (' ') 3251-3252
IDENT ('String') 3252-3258
RPAREN (')') 3258-3259
RBRACKET (']') 3259-3260
WHITE_SPACE ('\n') 3260-3261
IDENT ('containers') 3261-3271
WHITE_SPACE (' ') 3271-3272
OPERATOR ('=') 3272-3273
WHITE_SPACE (' ') 3273-3274
LBRACKET ('[') 3274-3275
LPAREN ('(') 3275-3276
IDENT ('row') 3276-3279
COMMA (',') 3279-3280
WHITE_SPACE (' ') 3280-3281
STRING_LITERAL ('"row"') 3281-3286
RPAREN (')') 3286-3287
COMMA (',') 3287-3288
WHITE_SPACE (' ') 3288-3289
LPAREN ('(') 3289-3290
IDENT ('col') 3290-3293
COMMA (',') 3293-3294
WHITE_SPACE (' ') 3294-3295
STRING_LITERAL ('"col"') 3295-3300
RPAREN (')') 3300-3301
COMMA (',') 3301-3302
WHITE_SPACE (' ') 3302-3303
LPAREN ('(') 3303-3304
IDENT ('box') 3304-3307
COMMA (',') 3307-3308
WHITE_SPACE (' ') 3308-3309
STRING_LITERAL ('"box"') 3309-3314
RPAREN (')') 3314-3315
RBRACKET (']') 3315-3316
WHITE_SPACE ('\n\n') 3316-3318
LINE_COMMENT ('-- ----------------- PRINTING ------------------------------------\n') 3318-3385
LINE_COMMENT ('-- printable coordinate of field, upper left is a1, lower right is i9\n') 3385-3455
IDENT ('pname') 3455-3460
WHITE_SPACE (' ') 3460-3461
IDENT ('p') 3461-3462
WHITE_SPACE (' ') 3462-3463
OPERATOR ('=') 3463-3464
WHITE_SPACE (' ') 3464-3465
IDENT ('packed') 3465-3471
WHITE_SPACE (' ') 3471-3472
LBRACKET ('[') 3472-3473
IDENT ('chr') 3473-3476
WHITE_SPACE (' ') 3476-3477
LPAREN ('(') 3477-3478
IDENT ('ord') 3478-3481
WHITE_SPACE (' ') 3481-3482
CHAR_LITERAL (''a'') 3482-3485
WHITE_SPACE (' ') 3485-3486
OPERATOR ('+') 3486-3487
WHITE_SPACE (' ') 3487-3488
IDENT ('p') 3488-3489
WHITE_SPACE (' ') 3489-3490
INFIX_IDENT ('`mod`') 3490-3495
WHITE_SPACE (' ') 3495-3496
NUMBER_LITERAL ('9') 3496-3497
RPAREN (')') 3497-3498
COMMA (',') 3498-3499
WHITE_SPACE (' ') 3499-3500
IDENT ('chr') 3500-3503
WHITE_SPACE (' ') 3503-3504
LPAREN ('(') 3504-3505
IDENT ('ord') 3505-3508
WHITE_SPACE (' ') 3508-3509
CHAR_LITERAL (''1'') 3509-3512
WHITE_SPACE (' ') 3512-3513
OPERATOR ('+') 3513-3514
WHITE_SPACE (' ') 3514-3515
IDENT ('p') 3515-3516
WHITE_SPACE (' ') 3516-3517
INFIX_IDENT ('`div`') 3517-3522
WHITE_SPACE (' ') 3522-3523
NUMBER_LITERAL ('9') 3523-3524
RPAREN (')') 3524-3525
RBRACKET (']') 3525-3526
WHITE_SPACE ('\n\n') 3526-3528
LINE_COMMENT ('-- print board\n') 3528-3543
IDENT ('printb') 3543-3549
WHITE_SPACE (' ') 3549-3550
IDENT ('b') 3550-3551
WHITE_SPACE (' ') 3551-3552
OPERATOR ('=') 3552-3553
WHITE_SPACE (' ') 3553-3554
IDENT ('mapM_') 3554-3559
WHITE_SPACE (' ') 3559-3560
IDENT ('p1line') 3560-3566
WHITE_SPACE (' ') 3566-3567
IDENT ('allrows') 3567-3574
WHITE_SPACE (' ') 3574-3575
OPERATOR ('>>') 3575-3577
WHITE_SPACE (' ') 3577-3578
IDENT ('println') 3578-3585
WHITE_SPACE (' ') 3585-3586
STRING_LITERAL ('""') 3586-3588
WHITE_SPACE ('\n    ') 3588-3593
KEYWORD ('where') 3593-3598
WHITE_SPACE ('\n        ') 3598-3607
IDENT ('p1line') 3607-3613
WHITE_SPACE (' ') 3613-3614
IDENT ('row') 3614-3617
WHITE_SPACE (' ') 3617-3618
OPERATOR ('=') 3618-3619
WHITE_SPACE (' ') 3619-3620
KEYWORD ('do') 3620-3622
WHITE_SPACE ('\n                ') 3622-3639
IDENT ('print') 3639-3644
WHITE_SPACE (' ') 3644-3645
LPAREN ('(') 3645-3646
IDENT ('joined') 3646-3652
WHITE_SPACE (' ') 3652-3653
STRING_LITERAL ('""') 3653-3655
WHITE_SPACE (' ') 3655-3656
LPAREN ('(') 3656-3657
IDENT ('map') 3657-3660
WHITE_SPACE (' ') 3660-3661
IDENT ('pfld') 3661-3665
WHITE_SPACE (' ') 3665-3666
IDENT ('line') 3666-3670
RPAREN (')') 3670-3671
RPAREN (')') 3671-3672
WHITE_SPACE ('\n            ') 3672-3685
KEYWORD ('where') 3685-3690
WHITE_SPACE (' ') 3690-3691
IDENT ('line') 3691-3695
WHITE_SPACE (' ') 3695-3696
OPERATOR ('=') 3696-3697
WHITE_SPACE (' ') 3697-3698
IDENT ('map') 3698-3701
WHITE_SPACE (' ') 3701-3702
LPAREN ('(') 3702-3703
IDENT ('getc') 3703-3707
WHITE_SPACE (' ') 3707-3708
IDENT ('b') 3708-3709
RPAREN (')') 3709-3710
WHITE_SPACE (' ') 3710-3711
IDENT ('row') 3711-3714
WHITE_SPACE ('\n\n') 3714-3716
LINE_COMMENT ('-- print field (brief)\n') 3716-3739
LINE_COMMENT ('--   ? = no candidate\n') 3739-3761
LINE_COMMENT ('--   5 = field is 5\n') 3761-3781
LINE_COMMENT ('--   . = some candidates\n') 3781-3806
IDENT ('pfld') 3806-3810
WHITE_SPACE (' ') 3810-3811
LBRACKET ('[') 3811-3812
RBRACKET (']') 3812-3813
WHITE_SPACE (' ') 3813-3814
OPERATOR ('=') 3814-3815
WHITE_SPACE (' ') 3815-3816
STRING_LITERAL ('"?"') 3816-3819
WHITE_SPACE ('\n') 3819-3820
IDENT ('pfld') 3820-3824
WHITE_SPACE (' ') 3824-3825
LBRACKET ('[') 3825-3826
IDENT ('x') 3826-3827
RBRACKET (']') 3827-3828
WHITE_SPACE (' ') 3828-3829
OPERATOR ('=') 3829-3830
WHITE_SPACE (' ') 3830-3831
IDENT ('show') 3831-3835
WHITE_SPACE (' ') 3835-3836
IDENT ('x') 3836-3837
WHITE_SPACE ('\n') 3837-3838
IDENT ('pfld') 3838-3842
WHITE_SPACE (' ') 3842-3843
IDENT ('zs') 3843-3845
WHITE_SPACE (' ') 3845-3846
OPERATOR ('=') 3846-3847
WHITE_SPACE (' ') 3847-3848
STRING_LITERAL ('"0"') 3848-3851
WHITE_SPACE ('\n\n') 3851-3853
LINE_COMMENT ('-- print initial/final board\n') 3853-3882
IDENT ('result') 3882-3888
WHITE_SPACE (' ') 3888-3889
IDENT ('msg') 3889-3892
WHITE_SPACE (' ') 3892-3893
IDENT ('b') 3893-3894
WHITE_SPACE (' ') 3894-3895
OPERATOR ('=') 3895-3896
WHITE_SPACE (' ') 3896-3897
KEYWORD ('do') 3897-3899
WHITE_SPACE ('\n        ') 3899-3908
IDENT ('println') 3908-3915
WHITE_SPACE (' ') 3915-3916
LPAREN ('(') 3916-3917
STRING_LITERAL ('"Result: "') 3917-3927
WHITE_SPACE (' ') 3927-3928
OPERATOR ('++') 3928-3930
WHITE_SPACE (' ') 3930-3931
IDENT ('msg') 3931-3934
RPAREN (')') 3934-3935
WHITE_SPACE ('\n        ') 3935-3944
IDENT ('print') 3944-3949
WHITE_SPACE ('   ') 3949-3952
LPAREN ('(') 3952-3953
STRING_LITERAL ('"Board: "') 3953-3962
RPAREN (')') 3962-3963
WHITE_SPACE ('\n        ') 3963-3972
IDENT ('printb') 3972-3978
WHITE_SPACE (' ') 3978-3979
IDENT ('b') 3979-3980
WHITE_SPACE ('\n        ') 3980-3989
IDENT ('return') 3989-3995
WHITE_SPACE (' ') 3995-3996
IDENT ('b') 3996-3997
WHITE_SPACE ('\n\n') 3997-3999
IDENT ('res012') 3999-4005
WHITE_SPACE (' ') 4005-4006
IDENT ('b') 4006-4007
WHITE_SPACE (' ') 4007-4008
OPERATOR ('=') 4008-4009
WHITE_SPACE (' ') 4009-4010
KEYWORD ('case') 4010-4014
WHITE_SPACE (' ') 4014-4015
IDENT ('concatMap') 4015-4024
WHITE_SPACE (' ') 4024-4025
LPAREN ('(') 4025-4026
IDENT ('getc') 4026-4030
WHITE_SPACE (' ') 4030-4031
IDENT ('b') 4031-4032
RPAREN (')') 4032-4033
WHITE_SPACE (' ') 4033-4034
LBRACKET ('[') 4034-4035
NUMBER_LITERAL ('0') 4035-4036
COMMA (',') 4036-4037
NUMBER_LITERAL ('1') 4037-4038
COMMA (',') 4038-4039
NUMBER_LITERAL ('2') 4039-4040
RBRACKET (']') 4040-4041
WHITE_SPACE (' ') 4041-4042
KEYWORD ('of') 4042-4044
WHITE_SPACE ('\n    ') 4044-4049
LBRACKET ('[') 4049-4050
IDENT ('a') 4050-4051
COMMA (',') 4051-4052
IDENT ('b') 4052-4053
COMMA (',') 4053-4054
IDENT ('c') 4054-4055
RBRACKET (']') 4055-4056
WHITE_SPACE (' ') 4056-4057
OPERATOR ('->') 4057-4059
WHITE_SPACE (' ') 4059-4060
IDENT ('a') 4060-4061
OPERATOR ('*') 4061-4062
NUMBER_LITERAL ('100') 4062-4065
OPERATOR ('+') 4065-4066
IDENT ('b') 4066-4067
OPERATOR ('*') 4067-4068
NUMBER_LITERAL ('10') 4068-4070
OPERATOR ('+') 4070-4071
IDENT ('c') 4071-4072
WHITE_SPACE ('\n    ') 4072-4077
IDENT ('_') 4077-4078
WHITE_SPACE (' ') 4078-4079
OPERATOR ('->') 4079-4081
WHITE_SPACE (' ') 4081-4082
NUMBER_LITERAL ('9999999') 4082-4089
WHITE_SPACE ('\n\n') 4089-4091
LINE_COMMENT ('-- -------------------------- BOARD ALTERATION ACTIONS ---------------------------------\n') 4091-4180
LINE_COMMENT ('-- print a message about what is done to the board and return the new board\n') 4180-4256
IDENT ('turnoff1') 4256-4264
WHITE_SPACE (' ') 4264-4265
OPERATOR ('::') 4265-4267
WHITE_SPACE (' ') 4267-4268
IDENT ('Position') 4268-4276
WHITE_SPACE (' ') 4276-4277
OPERATOR ('->') 4277-4279
WHITE_SPACE (' ') 4279-4280
IDENT ('Zelle') 4280-4285
WHITE_SPACE (' ') 4285-4286
OPERATOR ('->') 4286-4288
WHITE_SPACE (' ') 4288-4289
IDENT ('Brett') 4289-4294
WHITE_SPACE (' ') 4294-4295
OPERATOR ('->') 4295-4297
WHITE_SPACE (' ') 4297-4298
IDENT ('IO') 4298-4300
WHITE_SPACE (' ') 4300-4301
IDENT ('Brett') 4301-4306
WHITE_SPACE ('\n') 4306-4307
IDENT ('turnoff1') 4307-4315
WHITE_SPACE (' ') 4315-4316
IDENT ('i') 4316-4317
WHITE_SPACE (' ') 4317-4318
IDENT ('off') 4318-4321
WHITE_SPACE (' ') 4321-4322
IDENT ('b') 4322-4323
WHITE_SPACE ('\n    ') 4323-4328
OPERATOR ('|') 4328-4329
WHITE_SPACE (' ') 4329-4330
IDENT ('single') 4330-4336
WHITE_SPACE (' ') 4336-4337
IDENT ('nc') 4337-4339
WHITE_SPACE (' ') 4339-4340
OPERATOR ('=') 4340-4341
WHITE_SPACE (' ') 4341-4342
KEYWORD ('do') 4342-4344
WHITE_SPACE ('\n            ') 4344-4357
LINE_COMMENT ('-- print (pname i)\n') 4357-4376
WHITE_SPACE ('            ') 4376-4388
LINE_COMMENT ('-- print ": set to "\n') 4388-4409
WHITE_SPACE ('            ') 4409-4421
LINE_COMMENT ('-- print (head nc)\n') 4421-4440
WHITE_SPACE ('            ') 4440-4452
LINE_COMMENT ('-- println " (naked single)"\n') 4452-4481
WHITE_SPACE ('            ') 4481-4493
IDENT ('return') 4493-4499
WHITE_SPACE (' ') 4499-4500
IDENT ('newb') 4500-4504
WHITE_SPACE ('\n    ') 4504-4509
OPERATOR ('|') 4509-4510
WHITE_SPACE (' ') 4510-4511
IDENT ('otherwise') 4511-4520
WHITE_SPACE (' ') 4520-4521
OPERATOR ('=') 4521-4522
WHITE_SPACE (' ') 4522-4523
IDENT ('return') 4523-4529
WHITE_SPACE (' ') 4529-4530
IDENT ('newb') 4530-4534
WHITE_SPACE ('\n    ') 4534-4539
KEYWORD ('where') 4539-4544
WHITE_SPACE ('\n        ') 4544-4553
IDENT ('cell') 4553-4557
WHITE_SPACE ('   ') 4557-4560
OPERATOR ('=') 4560-4561
WHITE_SPACE (' ') 4561-4562
IDENT ('getc') 4562-4566
WHITE_SPACE (' ') 4566-4567
IDENT ('b') 4567-4568
WHITE_SPACE (' ') 4568-4569
IDENT ('i') 4569-4570
WHITE_SPACE ('\n        ') 4570-4579
IDENT ('nc') 4579-4581
WHITE_SPACE ('     ') 4581-4586
OPERATOR ('=') 4586-4587
WHITE_SPACE (' ') 4587-4588
IDENT ('filter') 4588-4594
WHITE_SPACE (' ') 4594-4595
LPAREN ('(') 4595-4596
INFIX_IDENT ('`notElem`') 4596-4605
WHITE_SPACE (' ') 4605-4606
IDENT ('off') 4606-4609
RPAREN (')') 4609-4610
WHITE_SPACE (' ') 4610-4611
IDENT ('cell') 4611-4615
WHITE_SPACE ('\n        ') 4615-4624
IDENT ('newb') 4624-4628
WHITE_SPACE ('   ') 4628-4631
OPERATOR ('=') 4631-4632
WHITE_SPACE (' ') 4632-4633
LPAREN ('(') 4633-4634
IDENT ('i') 4634-4635
COMMA (',') 4635-4636
WHITE_SPACE (' ') 4636-4637
IDENT ('nc') 4637-4639
RPAREN (')') 4639-4640
WHITE_SPACE (' ') 4640-4641
OPERATOR (':') 4641-4642
WHITE_SPACE (' ') 4642-4643
LBRACKET ('[') 4643-4644
WHITE_SPACE (' ') 4644-4645
IDENT ('f') 4645-4646
WHITE_SPACE (' ') 4646-4647
OPERATOR ('|') 4647-4648
WHITE_SPACE (' ') 4648-4649
IDENT ('f') 4649-4650
WHITE_SPACE (' ') 4650-4651
OPERATOR ('<-') 4651-4653
WHITE_SPACE (' ') 4653-4654
IDENT ('b') 4654-4655
COMMA (',') 4655-4656
WHITE_SPACE (' ') 4656-4657
IDENT ('fst') 4657-4660
WHITE_SPACE (' ') 4660-4661
IDENT ('f') 4661-4662
WHITE_SPACE (' ') 4662-4663
OPERATOR ('!=') 4663-4665
WHITE_SPACE (' ') 4665-4666
IDENT ('i') 4666-4667
WHITE_SPACE (' ') 4667-4668
RBRACKET (']') 4668-4669
WHITE_SPACE ('\n\n') 4669-4671
IDENT ('turnoff') 4671-4678
WHITE_SPACE (' ') 4678-4679
OPERATOR ('::') 4679-4681
WHITE_SPACE (' ') 4681-4682
IDENT ('Int') 4682-4685
WHITE_SPACE (' ') 4685-4686
OPERATOR ('->') 4686-4688
WHITE_SPACE (' ') 4688-4689
IDENT ('Zelle') 4689-4694
WHITE_SPACE (' ') 4694-4695
OPERATOR ('->') 4695-4697
WHITE_SPACE (' ') 4697-4698
IDENT ('String') 4698-4704
WHITE_SPACE (' ') 4704-4705
OPERATOR ('->') 4705-4707
WHITE_SPACE (' ') 4707-4708
IDENT ('Brett') 4708-4713
WHITE_SPACE (' ') 4713-4714
OPERATOR ('->') 4714-4716
WHITE_SPACE (' ') 4716-4717
IDENT ('IO') 4717-4719
WHITE_SPACE (' ') 4719-4720
IDENT ('Brett') 4720-4725
WHITE_SPACE ('\n') 4725-4726
IDENT ('turnoff') 4726-4733
WHITE_SPACE (' ') 4733-4734
IDENT ('i') 4734-4735
WHITE_SPACE (' ') 4735-4736
IDENT ('off') 4736-4739
WHITE_SPACE (' ') 4739-4740
IDENT ('msg') 4740-4743
WHITE_SPACE (' ') 4743-4744
IDENT ('b') 4744-4745
WHITE_SPACE (' ') 4745-4746
OPERATOR ('=') 4746-4747
WHITE_SPACE (' ') 4747-4748
KEYWORD ('do') 4748-4750
WHITE_SPACE ('\n        ') 4750-4759
LINE_COMMENT ('-- print (pname i)\n') 4759-4778
WHITE_SPACE ('        ') 4778-4786
LINE_COMMENT ('-- print ": set to "\n') 4786-4807
WHITE_SPACE ('        ') 4807-4815
LINE_COMMENT ('-- print nc\n') 4815-4827
WHITE_SPACE ('        ') 4827-4835
LINE_COMMENT ('-- print " by clearing "\n') 4835-4860
WHITE_SPACE ('        ') 4860-4868
LINE_COMMENT ('-- print off\n') 4868-4881
WHITE_SPACE ('        ') 4881-4889
LINE_COMMENT ('-- print " "\n') 4889-4902
WHITE_SPACE ('        ') 4902-4910
LINE_COMMENT ('-- println  msg\n') 4910-4926
WHITE_SPACE ('        ') 4926-4934
IDENT ('return') 4934-4940
WHITE_SPACE (' ') 4940-4941
IDENT ('newb') 4941-4945
WHITE_SPACE ('\n    ') 4945-4950
KEYWORD ('where') 4950-4955
WHITE_SPACE ('\n        ') 4955-4964
IDENT ('cell') 4964-4968
WHITE_SPACE ('   ') 4968-4971
OPERATOR ('=') 4971-4972
WHITE_SPACE (' ') 4972-4973
IDENT ('getc') 4973-4977
WHITE_SPACE (' ') 4977-4978
IDENT ('b') 4978-4979
WHITE_SPACE (' ') 4979-4980
IDENT ('i') 4980-4981
WHITE_SPACE ('\n        ') 4981-4990
IDENT ('nc') 4990-4992
WHITE_SPACE ('     ') 4992-4997
OPERATOR ('=') 4997-4998
WHITE_SPACE (' ') 4998-4999
IDENT ('filter') 4999-5005
WHITE_SPACE (' ') 5005-5006
LPAREN ('(') 5006-5007
INFIX_IDENT ('`notElem`') 5007-5016
WHITE_SPACE (' ') 5016-5017
IDENT ('off') 5017-5020
RPAREN (')') 5020-5021
WHITE_SPACE (' ') 5021-5022
IDENT ('cell') 5022-5026
WHITE_SPACE ('\n        ') 5026-5035
IDENT ('newb') 5035-5039
WHITE_SPACE ('   ') 5039-5042
OPERATOR ('=') 5042-5043
WHITE_SPACE (' ') 5043-5044
LPAREN ('(') 5044-5045
IDENT ('i') 5045-5046
COMMA (',') 5046-5047
WHITE_SPACE (' ') 5047-5048
IDENT ('nc') 5048-5050
RPAREN (')') 5050-5051
WHITE_SPACE (' ') 5051-5052
OPERATOR (':') 5052-5053
WHITE_SPACE (' ') 5053-5054
LBRACKET ('[') 5054-5055
WHITE_SPACE (' ') 5055-5056
IDENT ('f') 5056-5057
WHITE_SPACE (' ') 5057-5058
OPERATOR ('|') 5058-5059
WHITE_SPACE (' ') 5059-5060
IDENT ('f') 5060-5061
WHITE_SPACE (' ') 5061-5062
OPERATOR ('<-') 5062-5064
WHITE_SPACE (' ') 5064-5065
IDENT ('b') 5065-5066
COMMA (',') 5066-5067
WHITE_SPACE (' ') 5067-5068
IDENT ('fst') 5068-5071
WHITE_SPACE (' ') 5071-5072
IDENT ('f') 5072-5073
WHITE_SPACE (' ') 5073-5074
OPERATOR ('!=') 5074-5076
WHITE_SPACE (' ') 5076-5077
IDENT ('i') 5077-5078
WHITE_SPACE (' ') 5078-5079
RBRACKET (']') 5079-5080
WHITE_SPACE ('\n\n') 5080-5082
IDENT ('turnoffh') 5082-5090
WHITE_SPACE (' ') 5090-5091
IDENT ('ps') 5091-5093
WHITE_SPACE (' ') 5093-5094
IDENT ('off') 5094-5097
WHITE_SPACE (' ') 5097-5098
IDENT ('msg') 5098-5101
WHITE_SPACE (' ') 5101-5102
IDENT ('b') 5102-5103
WHITE_SPACE (' ') 5103-5104
OPERATOR ('=') 5104-5105
WHITE_SPACE (' ') 5105-5106
IDENT ('foldM') 5106-5111
WHITE_SPACE (' ') 5111-5112
IDENT ('toh') 5112-5115
WHITE_SPACE (' ') 5115-5116
IDENT ('b') 5116-5117
WHITE_SPACE (' ') 5117-5118
IDENT ('ps') 5118-5120
WHITE_SPACE ('\n    ') 5120-5125
KEYWORD ('where') 5125-5130
WHITE_SPACE ('\n        ') 5130-5139
IDENT ('toh') 5139-5142
WHITE_SPACE (' ') 5142-5143
IDENT ('b') 5143-5144
WHITE_SPACE (' ') 5144-5145
IDENT ('p') 5145-5146
WHITE_SPACE (' ') 5146-5147
OPERATOR ('=') 5147-5148
WHITE_SPACE (' ') 5148-5149
IDENT ('turnoff') 5149-5156
WHITE_SPACE (' ') 5156-5157
IDENT ('p') 5157-5158
WHITE_SPACE (' ') 5158-5159
IDENT ('off') 5159-5162
WHITE_SPACE (' ') 5162-5163
IDENT ('msg') 5163-5166
WHITE_SPACE (' ') 5166-5167
IDENT ('b') 5167-5168
WHITE_SPACE ('\n\n') 5168-5170
IDENT ('setto') 5170-5175
WHITE_SPACE (' ') 5175-5176
OPERATOR ('::') 5176-5178
WHITE_SPACE (' ') 5178-5179
IDENT ('Position') 5179-5187
WHITE_SPACE (' ') 5187-5188
OPERATOR ('->') 5188-5190
WHITE_SPACE (' ') 5190-5191
IDENT ('Element') 5191-5198
WHITE_SPACE (' ') 5198-5199
OPERATOR ('->') 5199-5201
WHITE_SPACE (' ') 5201-5202
IDENT ('String') 5202-5208
WHITE_SPACE (' ') 5208-5209
OPERATOR ('->') 5209-5211
WHITE_SPACE (' ') 5211-5212
IDENT ('Brett') 5212-5217
WHITE_SPACE (' ') 5217-5218
OPERATOR ('->') 5218-5220
WHITE_SPACE (' ') 5220-5221
IDENT ('IO') 5221-5223
WHITE_SPACE (' ') 5223-5224
IDENT ('Brett') 5224-5229
WHITE_SPACE ('\n') 5229-5230
IDENT ('setto') 5230-5235
WHITE_SPACE (' ') 5235-5236
IDENT ('i') 5236-5237
WHITE_SPACE (' ') 5237-5238
IDENT ('n') 5238-5239
WHITE_SPACE (' ') 5239-5240
IDENT ('cname') 5240-5245
WHITE_SPACE (' ') 5245-5246
IDENT ('b') 5246-5247
WHITE_SPACE (' ') 5247-5248
OPERATOR ('=') 5248-5249
WHITE_SPACE (' ') 5249-5250
KEYWORD ('do') 5250-5252
WHITE_SPACE ('\n        ') 5252-5261
LINE_COMMENT ('-- print (pname i)\n') 5261-5280
WHITE_SPACE ('        ') 5280-5288
LINE_COMMENT ('-- print ": set to "\n') 5288-5309
WHITE_SPACE ('        ') 5309-5317
LINE_COMMENT ('-- print n\n') 5317-5328
WHITE_SPACE ('        ') 5328-5336
LINE_COMMENT ('-- print " (hidden single in "\n') 5336-5367
WHITE_SPACE ('        ') 5367-5375
LINE_COMMENT ('-- print cname\n') 5375-5390
WHITE_SPACE ('        ') 5390-5398
LINE_COMMENT ('-- println ")"\n') 5398-5413
WHITE_SPACE ('        ') 5413-5421
IDENT ('return') 5421-5427
WHITE_SPACE (' ') 5427-5428
IDENT ('newb') 5428-5432
WHITE_SPACE ('\n    ') 5432-5437
KEYWORD ('where') 5437-5442
WHITE_SPACE ('\n        ') 5442-5451
IDENT ('nf') 5451-5453
WHITE_SPACE ('     ') 5453-5458
OPERATOR ('=') 5458-5459
WHITE_SPACE (' ') 5459-5460
LBRACKET ('[') 5460-5461
IDENT ('n') 5461-5462
RBRACKET (']') 5462-5463
WHITE_SPACE ('\n        ') 5463-5472
IDENT ('newb') 5472-5476
WHITE_SPACE ('   ') 5476-5479
OPERATOR ('=') 5479-5480
WHITE_SPACE (' ') 5480-5481
LPAREN ('(') 5481-5482
IDENT ('i') 5482-5483
COMMA (',') 5483-5484
WHITE_SPACE (' ') 5484-5485
IDENT ('nf') 5485-5487
RPAREN (')') 5487-5488
WHITE_SPACE (' ') 5488-5489
OPERATOR (':') 5489-5490
WHITE_SPACE (' ') 5490-5491
LBRACKET ('[') 5491-5492
WHITE_SPACE (' ') 5492-5493
IDENT ('f') 5493-5494
WHITE_SPACE (' ') 5494-5495
OPERATOR ('|') 5495-5496
WHITE_SPACE (' ') 5496-5497
IDENT ('f') 5497-5498
WHITE_SPACE (' ') 5498-5499
OPERATOR ('<-') 5499-5501
WHITE_SPACE (' ') 5501-5502
IDENT ('b') 5502-5503
COMMA (',') 5503-5504
WHITE_SPACE (' ') 5504-5505
IDENT ('fst') 5505-5508
WHITE_SPACE (' ') 5508-5509
IDENT ('f') 5509-5510
WHITE_SPACE (' ') 5510-5511
OPERATOR ('!=') 5511-5513
WHITE_SPACE (' ') 5513-5514
IDENT ('i') 5514-5515
WHITE_SPACE (' ') 5515-5516
RBRACKET (']') 5516-5517
WHITE_SPACE ('\n\n\n') 5517-5520
LINE_COMMENT ('-- ----------------------------- SOLVING STRATEGIES ---------------------------------------------\n') 5520-5618
LINE_COMMENT ('-- reduce candidate sets that contains numbers already in same row, col or box\n') 5618-5697
LINE_COMMENT ('-- This finds (and logs) NAKED SINGLEs in passing.\n') 5697-5748
IDENT ('reduce') 5748-5754
WHITE_SPACE (' ') 5754-5755
IDENT ('b') 5755-5756
WHITE_SPACE (' ') 5756-5757
OPERATOR ('=') 5757-5758
WHITE_SPACE (' ') 5758-5759
LBRACKET ('[') 5759-5760
WHITE_SPACE ('  ') 5760-5762
IDENT ('turnoff1') 5762-5770
WHITE_SPACE (' ') 5770-5771
IDENT ('p') 5771-5772
WHITE_SPACE (' ') 5772-5773
IDENT ('sss') 5773-5776
WHITE_SPACE (' ') 5776-5777
OPERATOR ('|') 5777-5778
WHITE_SPACE (' ') 5778-5779
LPAREN ('(') 5779-5780
IDENT ('p') 5780-5781
COMMA (',') 5781-5782
IDENT ('cell') 5782-5786
RPAREN (')') 5786-5787
WHITE_SPACE (' ') 5787-5788
OPERATOR ('<-') 5788-5790
WHITE_SPACE (' ') 5790-5791
IDENT ('b') 5791-5792
COMMA (',') 5792-5793
WHITE_SPACE ('               ') 5793-5808
LINE_COMMENT ('-- for each field\n') 5808-5826
WHITE_SPACE ('                ') 5826-5842
IDENT ('unsolved') 5842-5850
WHITE_SPACE (' ') 5850-5851
IDENT ('cell') 5851-5855
COMMA (',') 5855-5856
WHITE_SPACE ('                              ') 5856-5886
LINE_COMMENT ('--  with more than 1 candidate\n') 5886-5917
WHITE_SPACE ('                ') 5917-5933
LINE_COMMENT ('--       single fields in containers that are candidates of that field\n') 5933-6004
WHITE_SPACE ('                ') 6004-6020
IDENT ('sss') 6020-6023
WHITE_SPACE (' ') 6023-6024
OPERATOR ('=') 6024-6025
WHITE_SPACE (' ') 6025-6026
LBRACKET ('[') 6026-6027
WHITE_SPACE (' ') 6027-6028
IDENT ('s') 6028-6029
WHITE_SPACE (' ') 6029-6030
OPERATOR ('|') 6030-6031
WHITE_SPACE (' ') 6031-6032
LPAREN ('(') 6032-6033
IDENT ('rcb') 6033-6036
COMMA (',') 6036-6037
WHITE_SPACE (' ') 6037-6038
IDENT ('_') 6038-6039
RPAREN (')') 6039-6040
WHITE_SPACE (' ') 6040-6041
OPERATOR ('<-') 6041-6043
WHITE_SPACE (' ') 6043-6044
IDENT ('containers') 6044-6054
COMMA (',') 6054-6055
WHITE_SPACE (' ') 6055-6056
LBRACKET ('[') 6056-6057
IDENT ('s') 6057-6058
RBRACKET (']') 6058-6059
WHITE_SPACE (' ') 6059-6060
OPERATOR ('<-') 6060-6062
WHITE_SPACE (' ') 6062-6063
IDENT ('map') 6063-6066
WHITE_SPACE (' ') 6066-6067
LPAREN ('(') 6067-6068
IDENT ('getc') 6068-6072
WHITE_SPACE (' ') 6072-6073
IDENT ('b') 6073-6074
RPAREN (')') 6074-6075
WHITE_SPACE (' ') 6075-6076
LPAREN ('(') 6076-6077
IDENT ('rcb') 6077-6080
WHITE_SPACE (' ') 6080-6081
IDENT ('p') 6081-6082
RPAREN (')') 6082-6083
COMMA (',') 6083-6084
WHITE_SPACE (' ') 6084-6085
IDENT ('s') 6085-6086
WHITE_SPACE (' ') 6086-6087
INFIX_IDENT ('`elem`') 6087-6093
WHITE_SPACE (' ') 6093-6094
IDENT ('cell') 6094-6098
RBRACKET (']') 6098-6099
COMMA (',') 6099-6100
WHITE_SPACE ('\n                ') 6100-6117
IDENT ('sss') 6117-6120
WHITE_SPACE (' ') 6120-6121
OPERATOR ('!=') 6121-6123
WHITE_SPACE (' ') 6123-6124
LBRACKET ('[') 6124-6125
RBRACKET (']') 6125-6126
WHITE_SPACE (' ') 6126-6127
RBRACKET (']') 6127-6128
WHITE_SPACE ('                                     ') 6128-6165
LINE_COMMENT ('-- collect field index, elements to remove from candidate set\n') 6165-6227
WHITE_SPACE ('\n') 6227-6228
LINE_COMMENT ('-- look for a number that appears in exactly 1 candidate set of a container\n') 6228-6304
LINE_COMMENT ('-- this number can go in no other place (HIDDEN SINGLE)\n') 6304-6360
IDENT ('hiddenSingle') 6360-6372
WHITE_SPACE (' ') 6372-6373
IDENT ('b') 6373-6374
WHITE_SPACE (' ') 6374-6375
OPERATOR ('=') 6375-6376
WHITE_SPACE (' ') 6376-6377
LBRACKET ('[') 6377-6378
WHITE_SPACE (' ') 6378-6379
IDENT ('setto') 6379-6384
WHITE_SPACE (' ') 6384-6385
IDENT ('i') 6385-6386
WHITE_SPACE (' ') 6386-6387
IDENT ('n') 6387-6388
WHITE_SPACE (' ') 6388-6389
IDENT ('cname') 6389-6394
WHITE_SPACE (' ') 6394-6395
OPERATOR ('|') 6395-6396
WHITE_SPACE ('                     ') 6396-6417
LINE_COMMENT ('-- select index, number, containername\n') 6417-6456
WHITE_SPACE ('            ') 6456-6468
LPAREN ('(') 6468-6469
IDENT ('cname') 6469-6474
COMMA (',') 6474-6475
WHITE_SPACE (' ') 6475-6476
IDENT ('rcb') 6476-6479
RPAREN (')') 6479-6480
WHITE_SPACE (' ') 6480-6481
OPERATOR ('<-') 6481-6483
WHITE_SPACE (' ') 6483-6484
IDENT ('allrcb') 6484-6490
COMMA (',') 6490-6491
WHITE_SPACE ('                 ') 6491-6508
LINE_COMMENT ('-- FOR rcb IN allrcb\n') 6508-6529
WHITE_SPACE ('            ') 6529-6541
IDENT ('n') 6541-6542
WHITE_SPACE (' ') 6542-6543
OPERATOR ('<-') 6543-6545
WHITE_SPACE (' ') 6545-6546
IDENT ('elements') 6546-6554
COMMA (',') 6554-6555
WHITE_SPACE ('                          ') 6555-6581
LINE_COMMENT ('--  FOR n IN elements\n') 6581-6603
WHITE_SPACE ('            ') 6603-6615
IDENT ('fs') 6615-6617
WHITE_SPACE ('     ') 6617-6622
OPERATOR ('=') 6622-6623
WHITE_SPACE (' ') 6623-6624
IDENT ('filter') 6624-6630
WHITE_SPACE (' ') 6630-6631
LPAREN ('(') 6631-6632
IDENT ('unsolved') 6632-6640
WHITE_SPACE (' ') 6640-6641
OPERATOR ('•') 6641-6642
WHITE_SPACE (' ') 6642-6643
IDENT ('snd') 6643-6646
RPAREN (')') 6646-6647
WHITE_SPACE (' ') 6647-6648
LPAREN ('(') 6648-6649
IDENT ('map') 6649-6652
WHITE_SPACE (' ') 6652-6653
LPAREN ('(') 6653-6654
IDENT ('getf') 6654-6658
WHITE_SPACE (' ') 6658-6659
IDENT ('b') 6659-6660
RPAREN (')') 6660-6661
WHITE_SPACE (' ') 6661-6662
IDENT ('rcb') 6662-6665
RPAREN (')') 6665-6666
COMMA (',') 6666-6667
WHITE_SPACE ('\n            ') 6667-6680
IDENT ('occurs') 6680-6686
WHITE_SPACE ('  ') 6686-6688
OPERATOR ('=') 6688-6689
WHITE_SPACE (' ') 6689-6690
IDENT ('filter') 6690-6696
WHITE_SPACE (' ') 6696-6697
LPAREN ('(') 6697-6698
LPAREN ('(') 6698-6699
IDENT ('n') 6699-6700
WHITE_SPACE (' ') 6700-6701
INFIX_IDENT ('`elem`') 6701-6707
RPAREN (')') 6707-6708
WHITE_SPACE (' ') 6708-6709
OPERATOR ('•') 6709-6710
WHITE_SPACE (' ') 6710-6711
IDENT ('snd') 6711-6714
RPAREN (')') 6714-6715
WHITE_SPACE (' ') 6715-6716
IDENT ('fs') 6716-6718
COMMA (',') 6718-6719
WHITE_SPACE ('\n            ') 6719-6732
IDENT ('length') 6732-6738
WHITE_SPACE (' ') 6738-6739
IDENT ('occurs') 6739-6745
WHITE_SPACE (' ') 6745-6746
OPERATOR ('==') 6746-6748
WHITE_SPACE (' ') 6748-6749
NUMBER_LITERAL ('1') 6749-6750
COMMA (',') 6750-6751
WHITE_SPACE ('\n            ') 6751-6764
LPAREN ('(') 6764-6765
IDENT ('i') 6765-6766
COMMA (',') 6766-6767
WHITE_SPACE (' ') 6767-6768
IDENT ('_') 6768-6769
RPAREN (')') 6769-6770
WHITE_SPACE (' ') 6770-6771
OPERATOR ('<-') 6771-6773
WHITE_SPACE (' ') 6773-6774
IDENT ('occurs') 6774-6780
WHITE_SPACE (' ') 6780-6781
RBRACKET (']') 6781-6782
WHITE_SPACE ('\n\n') 6782-6784
LINE_COMMENT ('-- look for NAKED PAIRS, TRIPLES, QUADS\n') 6784-6824
IDENT ('nakedPair') 6824-6833
WHITE_SPACE (' ') 6833-6834
IDENT ('n') 6834-6835
WHITE_SPACE (' ') 6835-6836
IDENT ('b') 6836-6837
WHITE_SPACE (' ') 6837-6838
OPERATOR ('=') 6838-6839
WHITE_SPACE (' ') 6839-6840
LBRACKET ('[') 6840-6841
WHITE_SPACE (' ') 6841-6842
IDENT ('turnoff') 6842-6849
WHITE_SPACE (' ') 6849-6850
IDENT ('p') 6850-6851
WHITE_SPACE (' ') 6851-6852
IDENT ('t') 6852-6853
WHITE_SPACE (' ') 6853-6854
LPAREN ('(') 6854-6855
STRING_LITERAL ('"(naked tuple in "') 6855-6873
WHITE_SPACE (' ') 6873-6874
OPERATOR ('++') 6874-6876
WHITE_SPACE (' ') 6876-6877
IDENT ('nm') 6877-6879
WHITE_SPACE (' ') 6879-6880
OPERATOR ('++') 6880-6882
WHITE_SPACE (' ') 6882-6883
STRING_LITERAL ('")"') 6883-6886
RPAREN (')') 6886-6887
WHITE_SPACE (' ') 6887-6888
OPERATOR ('|') 6888-6889
WHITE_SPACE ('           ') 6889-6900
LINE_COMMENT ('-- SELECT pos, tuple, name\n') 6900-6927
WHITE_SPACE ('            ') 6927-6939
LINE_COMMENT ('-- n <- [2,3,4],                    //  FOR n IN [2,3,4]\n') 6939-6996
WHITE_SPACE ('            ') 6996-7008
LPAREN ('(') 7008-7009
IDENT ('nm') 7009-7011
COMMA (',') 7011-7012
WHITE_SPACE (' ') 7012-7013
IDENT ('rcb') 7013-7016
RPAREN (')') 7016-7017
WHITE_SPACE (' ') 7017-7018
OPERATOR ('<-') 7018-7020
WHITE_SPACE (' ') 7020-7021
IDENT ('allrcb') 7021-7027
COMMA (',') 7027-7028
WHITE_SPACE ('             ') 7028-7041
LINE_COMMENT ('--    FOR rcb IN containers\n') 7041-7069
WHITE_SPACE ('            ') 7069-7081
IDENT ('fs') 7081-7083
WHITE_SPACE (' ') 7083-7084
OPERATOR ('=') 7084-7085
WHITE_SPACE (' ') 7085-7086
IDENT ('map') 7086-7089
WHITE_SPACE (' ') 7089-7090
LPAREN ('(') 7090-7091
IDENT ('getf') 7091-7095
WHITE_SPACE (' ') 7095-7096
IDENT ('b') 7096-7097
RPAREN (')') 7097-7098
WHITE_SPACE (' ') 7098-7099
IDENT ('rcb') 7099-7102
COMMA (',') 7102-7103
WHITE_SPACE ('              ') 7103-7117
LINE_COMMENT ('--      let fs = fields for rcb positions\n') 7117-7159
WHITE_SPACE ('            ') 7159-7171
IDENT ('u') 7171-7172
WHITE_SPACE ('  ') 7172-7174
OPERATOR ('=') 7174-7175
WHITE_SPACE (' ') 7175-7176
LPAREN ('(') 7176-7177
IDENT ('fold') 7177-7181
WHITE_SPACE (' ') 7181-7182
IDENT ('union') 7182-7187
WHITE_SPACE (' ') 7187-7188
LBRACKET ('[') 7188-7189
RBRACKET (']') 7189-7190
WHITE_SPACE (' ') 7190-7191
DOT ('.') 7191-7192
WHITE_SPACE (' ') 7192-7193
IDENT ('filter') 7193-7199
WHITE_SPACE (' ') 7199-7200
IDENT ('unsolved') 7200-7208
WHITE_SPACE (' ') 7208-7209
DOT ('.') 7209-7210
WHITE_SPACE (' ') 7210-7211
IDENT ('map') 7211-7214
WHITE_SPACE (' ') 7214-7215
IDENT ('snd') 7215-7218
RPAREN (')') 7218-7219
WHITE_SPACE (' ') 7219-7220
IDENT ('fs') 7220-7222
COMMA (',') 7222-7223
WHITE_SPACE ('   ') 7223-7226
LINE_COMMENT ('-- let u = union of non single candidates\n') 7226-7268
WHITE_SPACE ('            ') 7268-7280
IDENT ('t') 7280-7281
WHITE_SPACE (' ') 7281-7282
OPERATOR ('<-') 7282-7284
WHITE_SPACE (' ') 7284-7285
IDENT ('n') 7285-7286
WHITE_SPACE (' ') 7286-7287
INFIX_IDENT ('`outof`') 7287-7294
WHITE_SPACE (' ') 7294-7295
IDENT ('u') 7295-7296
COMMA (',') 7296-7297
WHITE_SPACE ('                   ') 7297-7316
LINE_COMMENT ('--      FOR t IN n-tuples\n') 7316-7342
WHITE_SPACE ('            ') 7342-7354
IDENT ('hit') 7354-7357
WHITE_SPACE (' ') 7357-7358
OPERATOR ('=') 7358-7359
WHITE_SPACE (' ') 7359-7360
LPAREN ('(') 7360-7361
IDENT ('filter') 7361-7367
WHITE_SPACE (' ') 7367-7368
LPAREN ('(') 7368-7369
LPAREN ('(') 7369-7370
INFIX_IDENT ('`subset`') 7370-7378
WHITE_SPACE (' ') 7378-7379
IDENT ('t') 7379-7380
RPAREN (')') 7380-7381
WHITE_SPACE (' ') 7381-7382
DOT ('.') 7382-7383
WHITE_SPACE (' ') 7383-7384
IDENT ('snd') 7384-7387
RPAREN (')') 7387-7388
WHITE_SPACE (' ') 7388-7389
DOT ('.') 7389-7390
WHITE_SPACE (' ') 7390-7391
IDENT ('filter') 7391-7397
WHITE_SPACE (' ') 7397-7398
LPAREN ('(') 7398-7399
IDENT ('unsolved') 7399-7407
WHITE_SPACE (' ') 7407-7408
DOT ('.') 7408-7409
WHITE_SPACE (' ') 7409-7410
IDENT ('snd') 7410-7413
RPAREN (')') 7413-7414
RPAREN (')') 7414-7415
WHITE_SPACE (' ') 7415-7416
IDENT ('fs') 7416-7418
COMMA (',') 7418-7419
WHITE_SPACE ('\n            ') 7419-7432
IDENT ('length') 7432-7438
WHITE_SPACE (' ') 7438-7439
IDENT ('hit') 7439-7442
WHITE_SPACE (' ') 7442-7443
OPERATOR ('==') 7443-7445
WHITE_SPACE (' ') 7445-7446
IDENT ('n') 7446-7447
COMMA (',') 7447-7448
WHITE_SPACE ('\n            ') 7448-7461
LPAREN ('(') 7461-7462
IDENT ('p') 7462-7463
COMMA (',') 7463-7464
WHITE_SPACE (' ') 7464-7465
IDENT ('cell') 7465-7469
RPAREN (')') 7469-7470
WHITE_SPACE (' ') 7470-7471
OPERATOR ('<-') 7471-7473
WHITE_SPACE (' ') 7473-7474
IDENT ('fs') 7474-7476
COMMA (',') 7476-7477
WHITE_SPACE ('\n            ') 7477-7490
IDENT ('p') 7490-7491
WHITE_SPACE (' ') 7491-7492
INFIX_IDENT ('`notElem`') 7492-7501
WHITE_SPACE (' ') 7501-7502
IDENT ('map') 7502-7505
WHITE_SPACE (' ') 7505-7506
IDENT ('fst') 7506-7509
WHITE_SPACE (' ') 7509-7510
IDENT ('hit') 7510-7513
COMMA (',') 7513-7514
WHITE_SPACE ('\n            ') 7514-7527
IDENT ('any') 7527-7530
WHITE_SPACE (' ') 7530-7531
LPAREN ('(') 7531-7532
INFIX_IDENT ('`elem`') 7532-7538
WHITE_SPACE (' ') 7538-7539
IDENT ('cell') 7539-7543
RPAREN (')') 7543-7544
WHITE_SPACE (' ') 7544-7545
IDENT ('t') 7545-7546
WHITE_SPACE ('\n            ') 7546-7559
RBRACKET (']') 7559-7560
WHITE_SPACE ('\n\n') 7560-7562
LINE_COMMENT ('-- look for HIDDEN PAIRS, TRIPLES or QUADS\n') 7562-7605
IDENT ('hiddenPair') 7605-7615
WHITE_SPACE (' ') 7615-7616
IDENT ('n') 7616-7617
WHITE_SPACE (' ') 7617-7618
IDENT ('b') 7618-7619
WHITE_SPACE (' ') 7619-7620
OPERATOR ('=') 7620-7621
WHITE_SPACE (' ') 7621-7622
LBRACKET ('[') 7622-7623
WHITE_SPACE (' ') 7623-7624
IDENT ('turnoff') 7624-7631
WHITE_SPACE (' ') 7631-7632
IDENT ('p') 7632-7633
WHITE_SPACE (' ') 7633-7634
IDENT ('off') 7634-7637
WHITE_SPACE (' ') 7637-7638
LPAREN ('(') 7638-7639
STRING_LITERAL ('"(hidden "') 7639-7649
WHITE_SPACE (' ') 7649-7650
OPERATOR ('++') 7650-7652
WHITE_SPACE (' ') 7652-7653
IDENT ('show') 7653-7657
WHITE_SPACE (' ') 7657-7658
IDENT ('t') 7658-7659
WHITE_SPACE (' ') 7659-7660
OPERATOR ('++') 7660-7662
WHITE_SPACE (' ') 7662-7663
STRING_LITERAL ('" in "') 7663-7669
WHITE_SPACE (' ') 7669-7670
OPERATOR ('++') 7670-7672
WHITE_SPACE (' ') 7672-7673
IDENT ('nm') 7673-7675
WHITE_SPACE (' ') 7675-7676
OPERATOR ('++') 7676-7678
WHITE_SPACE (' ') 7678-7679
STRING_LITERAL ('")"') 7679-7682
RPAREN (')') 7682-7683
WHITE_SPACE (' ') 7683-7684
OPERATOR ('|') 7684-7685
WHITE_SPACE ('           ') 7685-7696
LINE_COMMENT ('-- SELECT pos, tuple, name\n') 7696-7723
WHITE_SPACE ('            ') 7723-7735
LINE_COMMENT ('-- n <- [2,3,4],                    //  FOR n IN [2,3,4]\n') 7735-7792
WHITE_SPACE ('            ') 7792-7804
LPAREN ('(') 7804-7805
IDENT ('nm') 7805-7807
COMMA (',') 7807-7808
WHITE_SPACE (' ') 7808-7809
IDENT ('rcb') 7809-7812
RPAREN (')') 7812-7813
WHITE_SPACE (' ') 7813-7814
OPERATOR ('<-') 7814-7816
WHITE_SPACE (' ') 7816-7817
IDENT ('allrcb') 7817-7823
COMMA (',') 7823-7824
WHITE_SPACE ('             ') 7824-7837
LINE_COMMENT ('--    FOR rcb IN containers\n') 7837-7865
WHITE_SPACE ('            ') 7865-7877
IDENT ('fs') 7877-7879
WHITE_SPACE (' ') 7879-7880
OPERATOR ('=') 7880-7881
WHITE_SPACE (' ') 7881-7882
IDENT ('map') 7882-7885
WHITE_SPACE (' ') 7885-7886
LPAREN ('(') 7886-7887
IDENT ('getf') 7887-7891
WHITE_SPACE (' ') 7891-7892
IDENT ('b') 7892-7893
RPAREN (')') 7893-7894
WHITE_SPACE (' ') 7894-7895
IDENT ('rcb') 7895-7898
COMMA (',') 7898-7899
WHITE_SPACE ('              ') 7899-7913
LINE_COMMENT ('--      let fs = fields for rcb positions\n') 7913-7955
WHITE_SPACE ('            ') 7955-7967
IDENT ('u') 7967-7968
WHITE_SPACE ('  ') 7968-7970
OPERATOR ('=') 7970-7971
WHITE_SPACE (' ') 7971-7972
LPAREN ('(') 7972-7973
IDENT ('fold') 7973-7977
WHITE_SPACE (' ') 7977-7978
IDENT ('union') 7978-7983
WHITE_SPACE (' ') 7983-7984
LBRACKET ('[') 7984-7985
RBRACKET (']') 7985-7986
WHITE_SPACE (' ') 7986-7987
DOT ('.') 7987-7988
WHITE_SPACE (' ') 7988-7989
IDENT ('filter') 7989-7995
WHITE_SPACE (' ') 7995-7996
LPAREN ('(') 7996-7997
LPAREN ('(') 7997-7998
OPERATOR ('>') 7998-7999
NUMBER_LITERAL ('1') 7999-8000
RPAREN (')') 8000-8001
WHITE_SPACE (' ') 8001-8002
DOT ('.') 8002-8003
WHITE_SPACE (' ') 8003-8004
IDENT ('length') 8004-8010
RPAREN (')') 8010-8011
WHITE_SPACE (' ') 8011-8012
DOT ('.') 8012-8013
WHITE_SPACE (' ') 8013-8014
IDENT ('map') 8014-8017
WHITE_SPACE (' ') 8017-8018
IDENT ('snd') 8018-8021
RPAREN (')') 8021-8022
WHITE_SPACE (' ') 8022-8023
IDENT ('fs') 8023-8025
COMMA (',') 8025-8026
WHITE_SPACE ('   ') 8026-8029
LINE_COMMENT ('-- let u = union of non single candidates\n') 8029-8071
WHITE_SPACE ('            ') 8071-8083
IDENT ('t') 8083-8084
WHITE_SPACE (' ') 8084-8085
OPERATOR ('<-') 8085-8087
WHITE_SPACE (' ') 8087-8088
IDENT ('n') 8088-8089
WHITE_SPACE (' ') 8089-8090
INFIX_IDENT ('`outof`') 8090-8097
WHITE_SPACE (' ') 8097-8098
IDENT ('u') 8098-8099
COMMA (',') 8099-8100
WHITE_SPACE ('                   ') 8100-8119
LINE_COMMENT ('--      FOR t IN n-tuples\n') 8119-8145
WHITE_SPACE ('            ') 8145-8157
IDENT ('hit') 8157-8160
WHITE_SPACE (' ') 8160-8161
OPERATOR ('=') 8161-8162
WHITE_SPACE (' ') 8162-8163
LPAREN ('(') 8163-8164
IDENT ('filter') 8164-8170
WHITE_SPACE (' ') 8170-8171
LPAREN ('(') 8171-8172
IDENT ('any') 8172-8175
WHITE_SPACE (' ') 8175-8176
LPAREN ('(') 8176-8177
WHITE_SPACE (' ') 8177-8178
INFIX_IDENT ('`elem`') 8178-8184
WHITE_SPACE (' ') 8184-8185
IDENT ('t') 8185-8186
RPAREN (')') 8186-8187
WHITE_SPACE (' ') 8187-8188
DOT ('.') 8188-8189
WHITE_SPACE (' ') 8189-8190
IDENT ('snd') 8190-8193
RPAREN (')') 8193-8194
WHITE_SPACE (' ') 8194-8195
DOT ('.') 8195-8196
WHITE_SPACE (' ') 8196-8197
IDENT ('filter') 8197-8203
WHITE_SPACE (' ') 8203-8204
LPAREN ('(') 8204-8205
IDENT ('unsolved') 8205-8213
WHITE_SPACE (' ') 8213-8214
DOT ('.') 8214-8215
WHITE_SPACE (' ') 8215-8216
IDENT ('snd') 8216-8219
RPAREN (')') 8219-8220
RPAREN (')') 8220-8221
WHITE_SPACE (' ') 8221-8222
IDENT ('fs') 8222-8224
COMMA (',') 8224-8225
WHITE_SPACE ('\n            ') 8225-8238
IDENT ('length') 8238-8244
WHITE_SPACE (' ') 8244-8245
IDENT ('hit') 8245-8248
WHITE_SPACE (' ') 8248-8249
OPERATOR ('==') 8249-8251
WHITE_SPACE (' ') 8251-8252
IDENT ('n') 8252-8253
COMMA (',') 8253-8254
WHITE_SPACE ('\n            ') 8254-8267
IDENT ('off') 8267-8270
WHITE_SPACE (' ') 8270-8271
OPERATOR ('=') 8271-8272
WHITE_SPACE (' ') 8272-8273
LPAREN ('(') 8273-8274
IDENT ('fold') 8274-8278
WHITE_SPACE (' ') 8278-8279
IDENT ('union') 8279-8284
WHITE_SPACE (' ') 8284-8285
LBRACKET ('[') 8285-8286
RBRACKET (']') 8286-8287
WHITE_SPACE (' ') 8287-8288
DOT ('.') 8288-8289
WHITE_SPACE (' ') 8289-8290
IDENT ('map') 8290-8293
WHITE_SPACE (' ') 8293-8294
IDENT ('snd') 8294-8297
RPAREN (')') 8297-8298
WHITE_SPACE (' ') 8298-8299
IDENT ('hit') 8299-8302
WHITE_SPACE (' ') 8302-8303
INFIX_IDENT ('`minus`') 8303-8310
WHITE_SPACE (' ') 8310-8311
IDENT ('t') 8311-8312
COMMA (',') 8312-8313
WHITE_SPACE ('\n            ') 8313-8326
IDENT ('off') 8326-8329
WHITE_SPACE (' ') 8329-8330
OPERATOR ('!=') 8330-8332
WHITE_SPACE (' ') 8332-8333
LBRACKET ('[') 8333-8334
RBRACKET (']') 8334-8335
COMMA (',') 8335-8336
WHITE_SPACE ('\n            ') 8336-8349
LPAREN ('(') 8349-8350
IDENT ('p') 8350-8351
COMMA (',') 8351-8352
WHITE_SPACE (' ') 8352-8353
IDENT ('cell') 8353-8357
RPAREN (')') 8357-8358
WHITE_SPACE (' ') 8358-8359
OPERATOR ('<-') 8359-8361
WHITE_SPACE (' ') 8361-8362
IDENT ('hit') 8362-8365
COMMA (',') 8365-8366
WHITE_SPACE ('\n            ') 8366-8379
OPERATOR ('!') 8379-8380
WHITE_SPACE (' ') 8380-8381
LPAREN ('(') 8381-8382
IDENT ('cell') 8382-8386
WHITE_SPACE (' ') 8386-8387
INFIX_IDENT ('`subset`') 8387-8395
WHITE_SPACE (' ') 8395-8396
IDENT ('t') 8396-8397
RPAREN (')') 8397-8398
WHITE_SPACE ('\n            ') 8398-8411
RBRACKET (']') 8411-8412
WHITE_SPACE ('\n\n') 8412-8414
IDENT ('a') 8414-8415
WHITE_SPACE (' ') 8415-8416
INFIX_IDENT ('`subset`') 8416-8424
WHITE_SPACE (' ') 8424-8425
IDENT ('b') 8425-8426
WHITE_SPACE (' ') 8426-8427
OPERATOR ('=') 8427-8428
WHITE_SPACE (' ') 8428-8429
IDENT ('all') 8429-8432
WHITE_SPACE (' ') 8432-8433
LPAREN ('(') 8433-8434
INFIX_IDENT ('`elem`') 8434-8440
WHITE_SPACE (' ') 8440-8441
IDENT ('b') 8441-8442
RPAREN (')') 8442-8443
WHITE_SPACE (' ') 8443-8444
IDENT ('a') 8444-8445
WHITE_SPACE ('\n') 8445-8446
IDENT ('a') 8446-8447
WHITE_SPACE (' ') 8447-8448
INFIX_IDENT ('`union`') 8448-8455
WHITE_SPACE ('  ') 8455-8457
IDENT ('b') 8457-8458
WHITE_SPACE (' ') 8458-8459
OPERATOR ('=') 8459-8460
WHITE_SPACE (' ') 8460-8461
IDENT ('uniq') 8461-8465
WHITE_SPACE (' ') 8465-8466
LPAREN ('(') 8466-8467
IDENT ('sort') 8467-8471
WHITE_SPACE (' ') 8471-8472
LPAREN ('(') 8472-8473
IDENT ('a') 8473-8474
WHITE_SPACE (' ') 8474-8475
OPERATOR ('++') 8475-8477
WHITE_SPACE (' ') 8477-8478
IDENT ('b') 8478-8479
RPAREN (')') 8479-8480
RPAREN (')') 8480-8481
WHITE_SPACE ('\n') 8481-8482
IDENT ('a') 8482-8483
WHITE_SPACE (' ') 8483-8484
INFIX_IDENT ('`minus`') 8484-8491
WHITE_SPACE ('  ') 8491-8493
IDENT ('b') 8493-8494
WHITE_SPACE (' ') 8494-8495
OPERATOR ('=') 8495-8496
WHITE_SPACE (' ') 8496-8497
IDENT ('filter') 8497-8503
WHITE_SPACE (' ') 8503-8504
LPAREN ('(') 8504-8505
INFIX_IDENT ('`notElem`') 8505-8514
WHITE_SPACE (' ') 8514-8515
IDENT ('b') 8515-8516
RPAREN (')') 8516-8517
WHITE_SPACE (' ') 8517-8518
IDENT ('a') 8518-8519
WHITE_SPACE ('\n') 8519-8520
IDENT ('a') 8520-8521
WHITE_SPACE (' ') 8521-8522
INFIX_IDENT ('`common`') 8522-8530
WHITE_SPACE (' ') 8530-8531
IDENT ('b') 8531-8532
WHITE_SPACE (' ') 8532-8533
OPERATOR ('=') 8533-8534
WHITE_SPACE (' ') 8534-8535
IDENT ('filter') 8535-8541
WHITE_SPACE (' ') 8541-8542
LPAREN ('(') 8542-8543
INFIX_IDENT ('`elem`') 8543-8549
WHITE_SPACE (' ') 8549-8550
IDENT ('b') 8550-8551
RPAREN (')') 8551-8552
WHITE_SPACE (' ') 8552-8553
IDENT ('a') 8553-8554
WHITE_SPACE ('\n') 8554-8555
IDENT ('n') 8555-8556
WHITE_SPACE (' ') 8556-8557
INFIX_IDENT ('`outof`') 8557-8564
WHITE_SPACE (' ') 8564-8565
IDENT ('as') 8565-8567
WHITE_SPACE ('\n    ') 8567-8572
OPERATOR ('|') 8572-8573
WHITE_SPACE (' ') 8573-8574
IDENT ('length') 8574-8580
WHITE_SPACE (' ') 8580-8581
IDENT ('as') 8581-8583
WHITE_SPACE (' ') 8583-8584
OPERATOR ('<') 8584-8585
WHITE_SPACE (' ') 8585-8586
IDENT ('n') 8586-8587
WHITE_SPACE (' ') 8587-8588
OPERATOR ('=') 8588-8589
WHITE_SPACE (' ') 8589-8590
LBRACKET ('[') 8590-8591
RBRACKET (']') 8591-8592
WHITE_SPACE ('\n    ') 8592-8597
OPERATOR ('|') 8597-8598
WHITE_SPACE (' ') 8598-8599
LBRACKET ('[') 8599-8600
RBRACKET (']') 8600-8601
WHITE_SPACE (' ') 8601-8602
OPERATOR ('<-') 8602-8604
WHITE_SPACE (' ') 8604-8605
IDENT ('as') 8605-8607
WHITE_SPACE ('      ') 8607-8613
OPERATOR ('=') 8613-8614
WHITE_SPACE (' ') 8614-8615
LBRACKET ('[') 8615-8616
RBRACKET (']') 8616-8617
WHITE_SPACE ('\n    ') 8617-8622
OPERATOR ('|') 8622-8623
WHITE_SPACE (' ') 8623-8624
NUMBER_LITERAL ('1') 8624-8625
WHITE_SPACE (' ') 8625-8626
OPERATOR ('>=') 8626-8628
WHITE_SPACE (' ') 8628-8629
IDENT ('n') 8629-8630
WHITE_SPACE ('        ') 8630-8638
OPERATOR ('=') 8638-8639
WHITE_SPACE (' ') 8639-8640
IDENT ('map') 8640-8643
WHITE_SPACE (' ') 8643-8644
LPAREN ('(') 8644-8645
OPERATOR (':') 8645-8646
LBRACKET ('[') 8646-8647
RBRACKET (']') 8647-8648
RPAREN (')') 8648-8649
WHITE_SPACE (' ') 8649-8650
IDENT ('as') 8650-8652
WHITE_SPACE ('\n    ') 8652-8657
OPERATOR ('|') 8657-8658
WHITE_SPACE (' ') 8658-8659
LPAREN ('(') 8659-8660
IDENT ('a') 8660-8661
OPERATOR (':') 8661-8662
IDENT ('bs') 8662-8664
RPAREN (')') 8664-8665
WHITE_SPACE (' ') 8665-8666
OPERATOR ('<-') 8666-8668
WHITE_SPACE (' ') 8668-8669
IDENT ('as') 8669-8671
WHITE_SPACE ('  ') 8671-8673
OPERATOR ('=') 8673-8674
WHITE_SPACE (' ') 8674-8675
IDENT ('map') 8675-8678
WHITE_SPACE (' ') 8678-8679
LPAREN ('(') 8679-8680
IDENT ('a') 8680-8681
OPERATOR (':') 8681-8682
RPAREN (')') 8682-8683
WHITE_SPACE (' ') 8683-8684
LPAREN ('(') 8684-8685
LPAREN ('(') 8685-8686
IDENT ('n') 8686-8687
NUMBER_LITERAL ('-1') 8687-8689
RPAREN (')') 8689-8690
WHITE_SPACE (' ') 8690-8691
INFIX_IDENT ('`outof`') 8691-8698
WHITE_SPACE (' ') 8698-8699
IDENT ('bs') 8699-8701
RPAREN (')') 8701-8702
WHITE_SPACE (' ') 8702-8703
OPERATOR ('++') 8703-8705
WHITE_SPACE (' ') 8705-8706
LPAREN ('(') 8706-8707
IDENT ('n') 8707-8708
WHITE_SPACE (' ') 8708-8709
INFIX_IDENT ('`outof`') 8709-8716
WHITE_SPACE (' ') 8716-8717
IDENT ('bs') 8717-8719
RPAREN (')') 8719-8720
WHITE_SPACE ('\n    ') 8720-8725
OPERATOR ('|') 8725-8726
WHITE_SPACE (' ') 8726-8727
IDENT ('otherwise') 8727-8736
WHITE_SPACE ('     ') 8736-8741
OPERATOR ('=') 8741-8742
WHITE_SPACE (' ') 8742-8743
IDENT ('undefined') 8743-8752
WHITE_SPACE ('  ') 8752-8754
LINE_COMMENT ('-- cannot happen because either as is empty or not\n') 8754-8805
WHITE_SPACE ('\n') 8805-8806
IDENT ('same') 8806-8810
WHITE_SPACE (' ') 8810-8811
IDENT ('f') 8811-8812
WHITE_SPACE (' ') 8812-8813
IDENT ('a') 8813-8814
WHITE_SPACE (' ') 8814-8815
IDENT ('b') 8815-8816
WHITE_SPACE (' ') 8816-8817
OPERATOR ('=') 8817-8818
WHITE_SPACE (' ') 8818-8819
IDENT ('b') 8819-8820
WHITE_SPACE (' ') 8820-8821
INFIX_IDENT ('`elem`') 8821-8827
WHITE_SPACE (' ') 8827-8828
IDENT ('f') 8828-8829
WHITE_SPACE (' ') 8829-8830
IDENT ('a') 8830-8831
WHITE_SPACE ('\n\n') 8831-8833
IDENT ('intersectionlist') 8833-8849
WHITE_SPACE (' ') 8849-8850
OPERATOR ('=') 8850-8851
WHITE_SPACE (' ') 8851-8852
LBRACKET ('[') 8852-8853
LPAREN ('(') 8853-8854
IDENT ('allboxs') 8854-8861
COMMA (',') 8861-8862
WHITE_SPACE (' ') 8862-8863
IDENT ('row') 8863-8866
COMMA (',') 8866-8867
WHITE_SPACE (' ') 8867-8868
STRING_LITERAL ('"box/row intersection"') 8868-8890
RPAREN (')') 8890-8891
COMMA (',') 8891-8892
WHITE_SPACE (' ') 8892-8893
LPAREN ('(') 8893-8894
IDENT ('allboxs') 8894-8901
COMMA (',') 8901-8902
WHITE_SPACE (' ') 8902-8903
IDENT ('col') 8903-8906
COMMA (',') 8906-8907
WHITE_SPACE (' ') 8907-8908
STRING_LITERAL ('"box/col intersection"') 8908-8930
RPAREN (')') 8930-8931
COMMA (',') 8931-8932
WHITE_SPACE ('\n                    ') 8932-8953
LPAREN ('(') 8953-8954
IDENT ('allrows') 8954-8961
WHITE_SPACE (' ') 8961-8962
OPERATOR ('++') 8962-8964
WHITE_SPACE (' ') 8964-8965
IDENT ('allcols') 8965-8972
COMMA (',') 8972-8973
WHITE_SPACE (' ') 8973-8974
IDENT ('box') 8974-8977
COMMA (',') 8977-8978
WHITE_SPACE (' ') 8978-8979
STRING_LITERAL ('"line/box intersection"') 8979-9002
RPAREN (')') 9002-9003
RBRACKET (']') 9003-9004
WHITE_SPACE ('\n') 9004-9005
IDENT ('intersections') 9005-9018
WHITE_SPACE (' ') 9018-9019
IDENT ('b') 9019-9020
WHITE_SPACE (' ') 9020-9021
OPERATOR ('=') 9021-9022
WHITE_SPACE (' ') 9022-9023
LBRACKET ('[') 9023-9024
WHITE_SPACE ('\n    ') 9024-9029
IDENT ('turnoff') 9029-9036
WHITE_SPACE (' ') 9036-9037
IDENT ('pos') 9037-9040
WHITE_SPACE (' ') 9040-9041
LBRACKET ('[') 9041-9042
IDENT ('c') 9042-9043
RBRACKET (']') 9043-9044
WHITE_SPACE (' ') 9044-9045
IDENT ('reason') 9045-9051
WHITE_SPACE (' ') 9051-9052
OPERATOR ('|') 9052-9053
WHITE_SPACE ('    ') 9053-9057
LINE_COMMENT ('-- SELECT position, candidate, reson\n') 9057-9094
WHITE_SPACE ('        ') 9094-9102
LPAREN ('(') 9102-9103
IDENT ('from') 9103-9107
COMMA (',') 9107-9108
WHITE_SPACE (' ') 9108-9109
IDENT ('container') 9109-9118
COMMA (',') 9118-9119
WHITE_SPACE (' ') 9119-9120
IDENT ('reason') 9120-9126
RPAREN (')') 9126-9127
WHITE_SPACE (' ') 9127-9128
OPERATOR ('<-') 9128-9130
WHITE_SPACE (' ') 9130-9131
IDENT ('intersectionlist') 9131-9147
COMMA (',') 9147-9148
WHITE_SPACE ('\n        ') 9148-9157
IDENT ('rcb') 9157-9160
WHITE_SPACE (' ') 9160-9161
OPERATOR ('<-') 9161-9163
WHITE_SPACE (' ') 9163-9164
IDENT ('from') 9164-9168
COMMA (',') 9168-9169
WHITE_SPACE ('\n        ') 9169-9178
IDENT ('fs') 9178-9180
WHITE_SPACE (' ') 9180-9181
OPERATOR ('=') 9181-9182
WHITE_SPACE (' ') 9182-9183
LPAREN ('(') 9183-9184
IDENT ('filter') 9184-9190
WHITE_SPACE (' ') 9190-9191
LPAREN ('(') 9191-9192
IDENT ('unsolved') 9192-9200
WHITE_SPACE (' ') 9200-9201
DOT ('.') 9201-9202
WHITE_SPACE (' ') 9202-9203
IDENT ('snd') 9203-9206
RPAREN (')') 9206-9207
WHITE_SPACE (' ') 9207-9208
DOT ('.') 9208-9209
WHITE_SPACE (' ') 9209-9210
IDENT ('map') 9210-9213
WHITE_SPACE (' ') 9213-9214
LPAREN ('(') 9214-9215
IDENT ('getf') 9215-9219
WHITE_SPACE (' ') 9219-9220
IDENT ('b') 9220-9221
RPAREN (')') 9221-9222
RPAREN (')') 9222-9223
WHITE_SPACE (' ') 9223-9224
IDENT ('rcb') 9224-9227
COMMA (',') 9227-9228
WHITE_SPACE ('        ') 9228-9236
LINE_COMMENT ('-- fs = fields in from with more than 1 candidate\n') 9236-9286
WHITE_SPACE ('        ') 9286-9294
IDENT ('c') 9294-9295
WHITE_SPACE (' ') 9295-9296
OPERATOR ('<-') 9296-9298
WHITE_SPACE (' ') 9298-9299
LPAREN ('(') 9299-9300
IDENT ('fold') 9300-9304
WHITE_SPACE (' ') 9304-9305
IDENT ('union') 9305-9310
WHITE_SPACE (' ') 9310-9311
LBRACKET ('[') 9311-9312
RBRACKET (']') 9312-9313
WHITE_SPACE (' ') 9313-9314
OPERATOR ('•') 9314-9315
WHITE_SPACE (' ') 9315-9316
IDENT ('map') 9316-9319
WHITE_SPACE (' ') 9319-9320
IDENT ('snd') 9320-9323
RPAREN (')') 9323-9324
WHITE_SPACE (' ') 9324-9325
IDENT ('fs') 9325-9327
COMMA (',') 9327-9328
WHITE_SPACE ('                          ') 9328-9354
LINE_COMMENT ('-- FOR c IN union of candidates\n') 9354-9386
WHITE_SPACE ('        ') 9386-9394
IDENT ('cpos') 9394-9398
WHITE_SPACE (' ') 9398-9399
OPERATOR ('=') 9399-9400
WHITE_SPACE (' ') 9400-9401
LPAREN ('(') 9401-9402
IDENT ('map') 9402-9405
WHITE_SPACE (' ') 9405-9406
IDENT ('fst') 9406-9409
WHITE_SPACE (' ') 9409-9410
OPERATOR ('•') 9410-9411
WHITE_SPACE (' ') 9411-9412
IDENT ('filter') 9412-9418
WHITE_SPACE (' ') 9418-9419
LPAREN ('(') 9419-9420
LPAREN ('(') 9420-9421
IDENT ('c') 9421-9422
WHITE_SPACE (' ') 9422-9423
INFIX_IDENT ('`elem`') 9423-9429
RPAREN (')') 9429-9430
WHITE_SPACE (' ') 9430-9431
OPERATOR ('•') 9431-9432
WHITE_SPACE (' ') 9432-9433
IDENT ('snd') 9433-9436
RPAREN (')') 9436-9437
RPAREN (')') 9437-9438
WHITE_SPACE (' ') 9438-9439
IDENT ('fs') 9439-9441
COMMA (',') 9441-9442
WHITE_SPACE ('            ') 9442-9454
LINE_COMMENT ('-- cpos = positions where c occurs\n') 9454-9489
WHITE_SPACE ('        ') 9489-9497
IDENT ('cpos') 9497-9501
WHITE_SPACE (' ') 9501-9502
OPERATOR ('!=') 9502-9504
WHITE_SPACE (' ') 9504-9505
LBRACKET ('[') 9505-9506
RBRACKET (']') 9506-9507
COMMA (',') 9507-9508
WHITE_SPACE ('                                                 ') 9508-9557
LINE_COMMENT ('-- WHERE cpos is not empty\n') 9557-9584
WHITE_SPACE ('        ') 9584-9592
IDENT ('all') 9592-9595
WHITE_SPACE (' ') 9595-9596
LPAREN ('(') 9596-9597
IDENT ('same') 9597-9601
WHITE_SPACE (' ') 9601-9602
IDENT ('container') 9602-9611
WHITE_SPACE (' ') 9611-9612
LPAREN ('(') 9612-9613
IDENT ('head') 9613-9617
WHITE_SPACE (' ') 9617-9618
IDENT ('cpos') 9618-9622
RPAREN (')') 9622-9623
RPAREN (')') 9623-9624
WHITE_SPACE (' ') 9624-9625
LPAREN ('(') 9625-9626
IDENT ('tail') 9626-9630
WHITE_SPACE (' ') 9630-9631
IDENT ('cpos') 9631-9635
RPAREN (')') 9635-9636
COMMA (',') 9636-9637
WHITE_SPACE ('               ') 9637-9652
LINE_COMMENT ('-- WHERE all positions are in the intersection\n') 9652-9699
WHITE_SPACE ('        ') 9699-9707
LINE_COMMENT ('-- we can remove all occurences of c that are in container, but not in from\n') 9707-9783
WHITE_SPACE ('        ') 9783-9791
LPAREN ('(') 9791-9792
IDENT ('pos') 9792-9795
COMMA (',') 9795-9796
WHITE_SPACE (' ') 9796-9797
IDENT ('cell') 9797-9801
RPAREN (')') 9801-9802
WHITE_SPACE (' ') 9802-9803
OPERATOR ('<-') 9803-9805
WHITE_SPACE (' ') 9805-9806
IDENT ('map') 9806-9809
WHITE_SPACE (' ') 9809-9810
LPAREN ('(') 9810-9811
IDENT ('getf') 9811-9815
WHITE_SPACE (' ') 9815-9816
IDENT ('b') 9816-9817
RPAREN (')') 9817-9818
WHITE_SPACE (' ') 9818-9819
LPAREN ('(') 9819-9820
IDENT ('container') 9820-9829
WHITE_SPACE (' ') 9829-9830
LPAREN ('(') 9830-9831
IDENT ('head') 9831-9835
WHITE_SPACE (' ') 9835-9836
IDENT ('cpos') 9836-9840
RPAREN (')') 9840-9841
RPAREN (')') 9841-9842
COMMA (',') 9842-9843
WHITE_SPACE ('\n        ') 9843-9852
IDENT ('c') 9852-9853
WHITE_SPACE (' ') 9853-9854
INFIX_IDENT ('`elem`') 9854-9860
WHITE_SPACE (' ') 9860-9861
IDENT ('cell') 9861-9865
COMMA (',') 9865-9866
WHITE_SPACE ('\n        ') 9866-9875
IDENT ('pos') 9875-9878
WHITE_SPACE (' ') 9878-9879
INFIX_IDENT ('`notElem`') 9879-9888
WHITE_SPACE (' ') 9888-9889
IDENT ('rcb') 9889-9892
WHITE_SPACE (' ') 9892-9893
RBRACKET (']') 9893-9894
WHITE_SPACE ('\n\n\n') 9894-9897
LINE_COMMENT ('-- look for an XY Wing\n') 9897-9920
LINE_COMMENT ('--  - there exists a cell A with candidates X and Y\n') 9920-9972
LINE_COMMENT ('--  - there exists a cell B with candidates X and Z that shares a container with A\n') 9972-10055
LINE_COMMENT ('--  - there exists a cell C with candidates Y and Z that shares a container with A\n') 10055-10138
LINE_COMMENT ('-- reasoning\n') 10138-10151
LINE_COMMENT ('--  - if A is X, B will be Z\n') 10151-10180
LINE_COMMENT ('--  - if A is Y, C will be Z\n') 10180-10209
LINE_COMMENT ('--  - since A will indeed be X or Y -> B or C will be Z\n') 10209-10265
LINE_COMMENT ('--  - thus, no cell that can see B and C can be Z\n') 10265-10315
IDENT ('xyWing') 10315-10321
WHITE_SPACE (' ') 10321-10322
IDENT ('board') 10322-10327
WHITE_SPACE (' ') 10327-10328
OPERATOR ('=') 10328-10329
WHITE_SPACE (' ') 10329-10330
LBRACKET ('[') 10330-10331
WHITE_SPACE (' ') 10331-10332
IDENT ('turnoff') 10332-10339
WHITE_SPACE (' ') 10339-10340
IDENT ('p') 10340-10341
WHITE_SPACE (' ') 10341-10342
LBRACKET ('[') 10342-10343
IDENT ('z') 10343-10344
RBRACKET (']') 10344-10345
WHITE_SPACE (' ') 10345-10346
LPAREN ('(') 10346-10347
STRING_LITERAL ('"xy wing "') 10347-10357
WHITE_SPACE (' ') 10357-10358
OPERATOR ('++') 10358-10360
WHITE_SPACE (' ') 10360-10361
IDENT ('pname') 10361-10366
WHITE_SPACE (' ') 10366-10367
IDENT ('b') 10367-10368
WHITE_SPACE (' ') 10368-10369
OPERATOR ('++') 10369-10371
WHITE_SPACE (' ') 10371-10372
STRING_LITERAL ('" "') 10372-10375
WHITE_SPACE (' ') 10375-10376
OPERATOR ('++') 10376-10378
WHITE_SPACE (' ') 10378-10379
IDENT ('pname') 10379-10384
WHITE_SPACE (' ') 10384-10385
IDENT ('c') 10385-10386
WHITE_SPACE (' ') 10386-10387
OPERATOR ('++') 10387-10389
WHITE_SPACE (' ') 10389-10390
STRING_LITERAL ('" because of "') 10390-10404
WHITE_SPACE (' ') 10404-10405
OPERATOR ('++') 10405-10407
WHITE_SPACE (' ') 10407-10408
IDENT ('pname') 10408-10413
WHITE_SPACE (' ') 10413-10414
IDENT ('a') 10414-10415
RPAREN (')') 10415-10416
WHITE_SPACE (' ') 10416-10417
OPERATOR ('|') 10417-10418
WHITE_SPACE ('\n        ') 10418-10427
LPAREN ('(') 10427-10428
IDENT ('a') 10428-10429
COMMA (',') 10429-10430
WHITE_SPACE (' ') 10430-10431
LBRACKET ('[') 10431-10432
IDENT ('x') 10432-10433
COMMA (',') 10433-10434
IDENT ('y') 10434-10435
RBRACKET (']') 10435-10436
RPAREN (')') 10436-10437
WHITE_SPACE (' ') 10437-10438
OPERATOR ('<-') 10438-10440
WHITE_SPACE (' ') 10440-10441
IDENT ('board') 10441-10446
COMMA (',') 10446-10447
WHITE_SPACE ('                            ') 10447-10475
LINE_COMMENT ('-- there exists a cell a with candidates x and y\n') 10475-10524
WHITE_SPACE ('        ') 10524-10532
IDENT ('rcba') 10532-10536
WHITE_SPACE (' ') 10536-10537
OPERATOR ('=') 10537-10538
WHITE_SPACE (' ') 10538-10539
IDENT ('map') 10539-10542
WHITE_SPACE (' ') 10542-10543
LPAREN ('(') 10543-10544
IDENT ('getf') 10544-10548
WHITE_SPACE (' ') 10548-10549
IDENT ('board') 10549-10554
RPAREN (')') 10554-10555
WHITE_SPACE (' ') 10555-10556
LPAREN ('(') 10556-10557
IDENT ('row') 10557-10560
WHITE_SPACE (' ') 10560-10561
IDENT ('a') 10561-10562
WHITE_SPACE (' ') 10562-10563
OPERATOR ('++') 10563-10565
WHITE_SPACE (' ') 10565-10566
IDENT ('col') 10566-10569
WHITE_SPACE (' ') 10569-10570
IDENT ('a') 10570-10571
WHITE_SPACE (' ') 10571-10572
OPERATOR ('++') 10572-10574
WHITE_SPACE (' ') 10574-10575
IDENT ('box') 10575-10578
WHITE_SPACE (' ') 10578-10579
IDENT ('a') 10579-10580
RPAREN (')') 10580-10581
COMMA (',') 10581-10582
WHITE_SPACE ('  ') 10582-10584
LINE_COMMENT ('-- rcba = all fields that share a container with a\n') 10584-10635
WHITE_SPACE ('        ') 10635-10643
LPAREN ('(') 10643-10644
IDENT ('b') 10644-10645
COMMA (',') 10645-10646
WHITE_SPACE (' ') 10646-10647
LBRACKET ('[') 10647-10648
IDENT ('b1') 10648-10650
COMMA (',') 10650-10651
WHITE_SPACE (' ') 10651-10652
IDENT ('b2') 10652-10654
RBRACKET (']') 10654-10655
RPAREN (')') 10655-10656
WHITE_SPACE (' ') 10656-10657
OPERATOR ('<-') 10657-10659
WHITE_SPACE (' ') 10659-10660
IDENT ('rcba') 10660-10664
COMMA (',') 10664-10665
WHITE_SPACE ('\n        ') 10665-10674
IDENT ('b') 10674-10675
WHITE_SPACE (' ') 10675-10676
OPERATOR ('!=') 10676-10678
WHITE_SPACE (' ') 10678-10679
IDENT ('a') 10679-10680
COMMA (',') 10680-10681
WHITE_SPACE ('\n        ') 10681-10690
IDENT ('b1') 10690-10692
WHITE_SPACE (' ') 10692-10693
OPERATOR ('==') 10693-10695
WHITE_SPACE (' ') 10695-10696
IDENT ('x') 10696-10697
WHITE_SPACE (' ') 10697-10698
OPERATOR ('&&') 10698-10700
WHITE_SPACE (' ') 10700-10701
IDENT ('b2') 10701-10703
WHITE_SPACE (' ') 10703-10704
OPERATOR ('!=') 10704-10706
WHITE_SPACE (' ') 10706-10707
IDENT ('y') 10707-10708
WHITE_SPACE (' ') 10708-10709
OPERATOR ('||') 10709-10711
WHITE_SPACE (' ') 10711-10712
IDENT ('b2') 10712-10714
WHITE_SPACE (' ') 10714-10715
OPERATOR ('==') 10715-10717
WHITE_SPACE (' ') 10717-10718
IDENT ('x') 10718-10719
WHITE_SPACE (' ') 10719-10720
OPERATOR ('&&') 10720-10722
WHITE_SPACE (' ') 10722-10723
IDENT ('b1') 10723-10725
WHITE_SPACE (' ') 10725-10726
OPERATOR ('!=') 10726-10728
WHITE_SPACE (' ') 10728-10729
IDENT ('y') 10729-10730
COMMA (',') 10730-10731
WHITE_SPACE ('       ') 10731-10738
LINE_COMMENT ('-- there exists a cell B with candidates x and z\n') 10738-10787
WHITE_SPACE ('        ') 10787-10795
IDENT ('z') 10795-10796
WHITE_SPACE (' ') 10796-10797
OPERATOR ('=') 10797-10798
WHITE_SPACE (' ') 10798-10799
KEYWORD ('if') 10799-10801
WHITE_SPACE (' ') 10801-10802
IDENT ('b1') 10802-10804
WHITE_SPACE (' ') 10804-10805
OPERATOR ('==') 10805-10807
WHITE_SPACE (' ') 10807-10808
IDENT ('x') 10808-10809
WHITE_SPACE (' ') 10809-10810
KEYWORD ('then') 10810-10814
WHITE_SPACE (' ') 10814-10815
IDENT ('b2') 10815-10817
WHITE_SPACE (' ') 10817-10818
KEYWORD ('else') 10818-10822
WHITE_SPACE (' ') 10822-10823
IDENT ('b1') 10823-10825
COMMA (',') 10825-10826
WHITE_SPACE ('\n        ') 10826-10835
LPAREN ('(') 10835-10836
IDENT ('c') 10836-10837
COMMA (',') 10837-10838
WHITE_SPACE (' ') 10838-10839
LBRACKET ('[') 10839-10840
IDENT ('c1') 10840-10842
COMMA (',') 10842-10843
WHITE_SPACE (' ') 10843-10844
IDENT ('c2') 10844-10846
RBRACKET (']') 10846-10847
RPAREN (')') 10847-10848
WHITE_SPACE (' ') 10848-10849
OPERATOR ('<-') 10849-10851
WHITE_SPACE (' ') 10851-10852
IDENT ('rcba') 10852-10856
COMMA (',') 10856-10857
WHITE_SPACE ('\n        ') 10857-10866
IDENT ('c') 10866-10867
WHITE_SPACE (' ') 10867-10868
OPERATOR ('!=') 10868-10870
WHITE_SPACE (' ') 10870-10871
IDENT ('a') 10871-10872
COMMA (',') 10872-10873
WHITE_SPACE (' ') 10873-10874
IDENT ('c') 10874-10875
OPERATOR ('!=') 10875-10877
WHITE_SPACE (' ') 10877-10878
IDENT ('b') 10878-10879
COMMA (',') 10879-10880
WHITE_SPACE ('\n        ') 10880-10889
IDENT ('c1') 10889-10891
WHITE_SPACE (' ') 10891-10892
OPERATOR ('==') 10892-10894
WHITE_SPACE (' ') 10894-10895
IDENT ('y') 10895-10896
WHITE_SPACE (' ') 10896-10897
OPERATOR ('&&') 10897-10899
WHITE_SPACE (' ') 10899-10900
IDENT ('c2') 10900-10902
WHITE_SPACE (' ') 10902-10903
OPERATOR ('==') 10903-10905
WHITE_SPACE (' ') 10905-10906
IDENT ('z') 10906-10907
WHITE_SPACE (' ') 10907-10908
OPERATOR ('||') 10908-10910
WHITE_SPACE (' ') 10910-10911
IDENT ('c1') 10911-10913
WHITE_SPACE (' ') 10913-10914
OPERATOR ('==') 10914-10916
WHITE_SPACE (' ') 10916-10917
IDENT ('z') 10917-10918
WHITE_SPACE (' ') 10918-10919
OPERATOR ('&&') 10919-10921
WHITE_SPACE (' ') 10921-10922
IDENT ('c2') 10922-10924
WHITE_SPACE (' ') 10924-10925
OPERATOR ('==') 10925-10927
WHITE_SPACE (' ') 10927-10928
IDENT ('y') 10928-10929
COMMA (',') 10929-10930
WHITE_SPACE ('       ') 10930-10937
LINE_COMMENT ('-- there exists a cell C with candidates y and z\n') 10937-10986
WHITE_SPACE ('        ') 10986-10994
IDENT ('ps') 10994-10996
WHITE_SPACE (' ') 10996-10997
OPERATOR ('=') 10997-10998
WHITE_SPACE (' ') 10998-10999
LPAREN ('(') 10999-11000
IDENT ('uniq') 11000-11004
WHITE_SPACE (' ') 11004-11005
DOT ('.') 11005-11006
WHITE_SPACE (' ') 11006-11007
IDENT ('sort') 11007-11011
RPAREN (')') 11011-11012
WHITE_SPACE (' ') 11012-11013
LPAREN ('(') 11013-11014
LPAREN ('(') 11014-11015
IDENT ('row') 11015-11018
WHITE_SPACE (' ') 11018-11019
IDENT ('b') 11019-11020
WHITE_SPACE (' ') 11020-11021
OPERATOR ('++') 11021-11023
WHITE_SPACE (' ') 11023-11024
IDENT ('col') 11024-11027
WHITE_SPACE (' ') 11027-11028
IDENT ('b') 11028-11029
WHITE_SPACE (' ') 11029-11030
OPERATOR ('++') 11030-11032
WHITE_SPACE (' ') 11032-11033
IDENT ('box') 11033-11036
WHITE_SPACE (' ') 11036-11037
IDENT ('b') 11037-11038
RPAREN (')') 11038-11039
WHITE_SPACE (' ') 11039-11040
INFIX_IDENT ('`common`') 11040-11048
WHITE_SPACE (' ') 11048-11049
LPAREN ('(') 11049-11050
IDENT ('row') 11050-11053
WHITE_SPACE (' ') 11053-11054
IDENT ('c') 11054-11055
WHITE_SPACE (' ') 11055-11056
OPERATOR ('++') 11056-11058
WHITE_SPACE (' ') 11058-11059
IDENT ('col') 11059-11062
WHITE_SPACE (' ') 11062-11063
IDENT ('c') 11063-11064
WHITE_SPACE (' ') 11064-11065
OPERATOR ('++') 11065-11067
WHITE_SPACE (' ') 11067-11068
IDENT ('box') 11068-11071
WHITE_SPACE (' ') 11071-11072
IDENT ('c') 11072-11073
RPAREN (')') 11073-11074
RPAREN (')') 11074-11075
COMMA (',') 11075-11076
WHITE_SPACE ('\n        ') 11076-11085
LINE_COMMENT ('-- remove z in ps\n') 11085-11103
WHITE_SPACE ('        ') 11103-11111
LPAREN ('(') 11111-11112
IDENT ('p') 11112-11113
COMMA (',') 11113-11114
WHITE_SPACE (' ') 11114-11115
IDENT ('cs') 11115-11117
RPAREN (')') 11117-11118
WHITE_SPACE (' ') 11118-11119
OPERATOR ('<-') 11119-11121
WHITE_SPACE (' ') 11121-11122
IDENT ('map') 11122-11125
WHITE_SPACE (' ') 11125-11126
LPAREN ('(') 11126-11127
IDENT ('getf') 11127-11131
WHITE_SPACE (' ') 11131-11132
IDENT ('board') 11132-11137
RPAREN (')') 11137-11138
WHITE_SPACE (' ') 11138-11139
IDENT ('ps') 11139-11141
COMMA (',') 11141-11142
WHITE_SPACE ('\n        ') 11142-11151
IDENT ('p') 11151-11152
WHITE_SPACE (' ') 11152-11153
OPERATOR ('!=') 11153-11155
WHITE_SPACE (' ') 11155-11156
IDENT ('b') 11156-11157
COMMA (',') 11157-11158
WHITE_SPACE (' ') 11158-11159
IDENT ('p') 11159-11160
WHITE_SPACE (' ') 11160-11161
OPERATOR ('!=') 11161-11163
WHITE_SPACE (' ') 11163-11164
IDENT ('c') 11164-11165
COMMA (',') 11165-11166
WHITE_SPACE ('\n        ') 11166-11175
IDENT ('z') 11175-11176
WHITE_SPACE (' ') 11176-11177
INFIX_IDENT ('`elem`') 11177-11183
WHITE_SPACE (' ') 11183-11184
IDENT ('cs') 11184-11186
WHITE_SPACE (' ') 11186-11187
RBRACKET (']') 11187-11188
WHITE_SPACE ('\n\n') 11188-11190
LINE_COMMENT ('-- look for a N-Fish (2: X-Wing, 3: Swordfish, 4: Jellyfish)\n') 11190-11251
LINE_COMMENT ('-- When all candidates for a particular digit in N rows are located\n') 11251-11319
LINE_COMMENT ('-- in only N columns, we can eliminate all candidates from those N columns\n') 11319-11394
LINE_COMMENT ('--  which are not located on those N rows\n') 11394-11436
IDENT ('fish') 11436-11440
WHITE_SPACE (' ') 11440-11441
IDENT ('n') 11441-11442
WHITE_SPACE (' ') 11442-11443
IDENT ('board') 11443-11448
WHITE_SPACE (' ') 11448-11449
OPERATOR ('=') 11449-11450
WHITE_SPACE (' ') 11450-11451
IDENT ('fish') 11451-11455
WHITE_SPACE (' ') 11455-11456
STRING_LITERAL ('"row"') 11456-11461
WHITE_SPACE (' ') 11461-11462
IDENT ('allrows') 11462-11469
WHITE_SPACE (' ') 11469-11470
IDENT ('row') 11470-11473
WHITE_SPACE (' ') 11473-11474
IDENT ('col') 11474-11477
WHITE_SPACE (' ') 11477-11478
OPERATOR ('++') 11478-11480
WHITE_SPACE (' ') 11480-11481
IDENT ('fish') 11481-11485
WHITE_SPACE (' ') 11485-11486
STRING_LITERAL ('"col"') 11486-11491
WHITE_SPACE (' ') 11491-11492
IDENT ('allcols') 11492-11499
WHITE_SPACE (' ') 11499-11500
IDENT ('col') 11500-11503
WHITE_SPACE (' ') 11503-11504
IDENT ('row') 11504-11507
WHITE_SPACE (' ') 11507-11508
KEYWORD ('where') 11508-11513
WHITE_SPACE ('\n    ') 11513-11518
IDENT ('fishname') 11518-11526
WHITE_SPACE (' ') 11526-11527
NUMBER_LITERAL ('2') 11527-11528
WHITE_SPACE (' ') 11528-11529
OPERATOR ('=') 11529-11530
WHITE_SPACE (' ') 11530-11531
STRING_LITERAL ('"X-Wing"') 11531-11539
WHITE_SPACE ('\n    ') 11539-11544
IDENT ('fishname') 11544-11552
WHITE_SPACE (' ') 11552-11553
NUMBER_LITERAL ('3') 11553-11554
WHITE_SPACE (' ') 11554-11555
OPERATOR ('=') 11555-11556
WHITE_SPACE (' ') 11556-11557
STRING_LITERAL ('"Swordfish"') 11557-11568
WHITE_SPACE ('\n    ') 11568-11573
IDENT ('fishname') 11573-11581
WHITE_SPACE (' ') 11581-11582
NUMBER_LITERAL ('4') 11582-11583
WHITE_SPACE (' ') 11583-11584
OPERATOR ('=') 11584-11585
WHITE_SPACE (' ') 11585-11586
STRING_LITERAL ('"Jellyfish"') 11586-11597
WHITE_SPACE ('\n    ') 11597-11602
IDENT ('fishname') 11602-11610
WHITE_SPACE (' ') 11610-11611
IDENT ('_') 11611-11612
WHITE_SPACE (' ') 11612-11613
OPERATOR ('=') 11613-11614
WHITE_SPACE (' ') 11614-11615
STRING_LITERAL ('"unknown fish"') 11615-11629
WHITE_SPACE ('\n    ') 11629-11634
IDENT ('fish') 11634-11638
WHITE_SPACE (' ') 11638-11639
IDENT ('nm') 11639-11641
WHITE_SPACE (' ') 11641-11642
IDENT ('allrows') 11642-11649
WHITE_SPACE (' ') 11649-11650
IDENT ('row') 11650-11653
WHITE_SPACE (' ') 11653-11654
IDENT ('col') 11654-11657
WHITE_SPACE (' ') 11657-11658
OPERATOR ('=') 11658-11659
WHITE_SPACE (' ') 11659-11660
LBRACKET ('[') 11660-11661
WHITE_SPACE (' ') 11661-11662
IDENT ('turnoff') 11662-11669
WHITE_SPACE (' ') 11669-11670
IDENT ('p') 11670-11671
WHITE_SPACE (' ') 11671-11672
LBRACKET ('[') 11672-11673
IDENT ('x') 11673-11674
RBRACKET (']') 11674-11675
WHITE_SPACE (' ') 11675-11676
LPAREN ('(') 11676-11677
IDENT ('fishname') 11677-11685
WHITE_SPACE (' ') 11685-11686
IDENT ('n') 11686-11687
WHITE_SPACE (' ') 11687-11688
OPERATOR ('++') 11688-11690
WHITE_SPACE (' ') 11690-11691
STRING_LITERAL ('" in "') 11691-11697
WHITE_SPACE (' ') 11697-11698
OPERATOR ('++') 11698-11700
WHITE_SPACE (' ') 11700-11701
IDENT ('nm') 11701-11703
WHITE_SPACE (' ') 11703-11704
OPERATOR ('++') 11704-11706
WHITE_SPACE (' ') 11706-11707
STRING_LITERAL ('" "') 11707-11710
WHITE_SPACE (' ') 11710-11711
OPERATOR ('++') 11711-11713
WHITE_SPACE (' ') 11713-11714
IDENT ('show') 11714-11718
WHITE_SPACE (' ') 11718-11719
LPAREN ('(') 11719-11720
IDENT ('map') 11720-11723
WHITE_SPACE (' ') 11723-11724
LPAREN ('(') 11724-11725
IDENT ('pname') 11725-11730
WHITE_SPACE (' ') 11730-11731
DOT ('.') 11731-11732
WHITE_SPACE (' ') 11732-11733
IDENT ('head') 11733-11737
RPAREN (')') 11737-11738
WHITE_SPACE (' ') 11738-11739
IDENT ('rset') 11739-11743
RPAREN (')') 11743-11744
RPAREN (')') 11744-11745
WHITE_SPACE (' ') 11745-11746
OPERATOR ('|') 11746-11747
WHITE_SPACE ('\n        ') 11747-11756
IDENT ('rset') 11756-11760
WHITE_SPACE (' ') 11760-11761
OPERATOR ('<-') 11761-11763
WHITE_SPACE (' ') 11763-11764
IDENT ('n') 11764-11765
WHITE_SPACE (' ') 11765-11766
INFIX_IDENT ('`outof`') 11766-11773
WHITE_SPACE (' ') 11773-11774
IDENT ('allrows') 11774-11781
COMMA (',') 11781-11782
WHITE_SPACE ('          ') 11782-11792
LINE_COMMENT ('-- take n rows (or cols)\n') 11792-11817
WHITE_SPACE ('        ') 11817-11825
IDENT ('x') 11825-11826
WHITE_SPACE (' ') 11826-11827
OPERATOR ('<-') 11827-11829
WHITE_SPACE (' ') 11829-11830
IDENT ('elements') 11830-11838
COMMA (',') 11838-11839
WHITE_SPACE ('                      ') 11839-11861
LINE_COMMENT ('-- look for certain number\n') 11861-11888
WHITE_SPACE ('        ') 11888-11896
IDENT ('rflds') 11896-11901
WHITE_SPACE (' ') 11901-11902
OPERATOR ('=') 11902-11903
WHITE_SPACE (' ') 11903-11904
IDENT ('map') 11904-11907
WHITE_SPACE (' ') 11907-11908
LPAREN ('(') 11908-11909
IDENT ('filter') 11909-11915
WHITE_SPACE (' ') 11915-11916
LPAREN ('(') 11916-11917
LPAREN ('(') 11917-11918
OPERATOR ('>') 11918-11919
NUMBER_LITERAL ('1') 11919-11920
RPAREN (')') 11920-11921
WHITE_SPACE (' ') 11921-11922
DOT ('.') 11922-11923
WHITE_SPACE (' ') 11923-11924
IDENT ('length') 11924-11930
WHITE_SPACE (' ') 11930-11931
DOT ('.') 11931-11932
WHITE_SPACE (' ') 11932-11933
IDENT ('snd') 11933-11936
RPAREN (')') 11936-11937
WHITE_SPACE (' ') 11937-11938
DOT ('.') 11938-11939
WHITE_SPACE (' ') 11939-11940
IDENT ('map') 11940-11943
WHITE_SPACE (' ') 11943-11944
LPAREN ('(') 11944-11945
IDENT ('getf') 11945-11949
WHITE_SPACE (' ') 11949-11950
IDENT ('board') 11950-11955
RPAREN (')') 11955-11956
RPAREN (')') 11956-11957
WHITE_SPACE (' ') 11957-11958
IDENT ('rset') 11958-11962
COMMA (',') 11962-11963
WHITE_SPACE ('       ') 11963-11970
LINE_COMMENT ('-- unsolved fields in the rowset\n') 11970-12003
WHITE_SPACE ('        ') 12003-12011
IDENT ('colss') 12011-12016
WHITE_SPACE ('  ') 12016-12018
OPERATOR ('=') 12018-12019
WHITE_SPACE (' ') 12019-12020
LPAREN ('(') 12020-12021
IDENT ('map') 12021-12024
WHITE_SPACE (' ') 12024-12025
LPAREN ('(') 12025-12026
IDENT ('map') 12026-12029
WHITE_SPACE (' ') 12029-12030
LPAREN ('(') 12030-12031
IDENT ('head') 12031-12035
WHITE_SPACE (' ') 12035-12036
DOT ('.') 12036-12037
WHITE_SPACE (' ') 12037-12038
IDENT ('col') 12038-12041
WHITE_SPACE (' ') 12041-12042
DOT ('.') 12042-12043
WHITE_SPACE (' ') 12043-12044
IDENT ('fst') 12044-12047
RPAREN (')') 12047-12048
WHITE_SPACE (' ') 12048-12049
DOT ('.') 12049-12050
WHITE_SPACE (' ') 12050-12051
IDENT ('filter') 12051-12057
WHITE_SPACE (' ') 12057-12058
LPAREN ('(') 12058-12059
LPAREN ('(') 12059-12060
IDENT ('x') 12060-12061
WHITE_SPACE (' ') 12061-12062
INFIX_IDENT ('`elem`') 12062-12068
RPAREN (')') 12068-12069
WHITE_SPACE (' ') 12069-12070
DOT ('.') 12070-12071
WHITE_SPACE (' ') 12071-12072
IDENT ('snd') 12072-12075
RPAREN (')') 12075-12076
RPAREN (')') 12076-12077
WHITE_SPACE (' ') 12077-12078
IDENT ('rflds') 12078-12083
RPAREN (')') 12083-12084
COMMA (',') 12084-12085
WHITE_SPACE ('   ') 12085-12088
LINE_COMMENT ('-- where x occurs in candidates\n') 12088-12120
WHITE_SPACE ('        ') 12120-12128
IDENT ('all') 12128-12131
WHITE_SPACE (' ') 12131-12132
LPAREN ('(') 12132-12133
LPAREN ('(') 12133-12134
OPERATOR ('>') 12134-12135
NUMBER_LITERAL ('1') 12135-12136
RPAREN (')') 12136-12137
WHITE_SPACE (' ') 12137-12138
DOT ('.') 12138-12139
WHITE_SPACE (' ') 12139-12140
IDENT ('length') 12140-12146
RPAREN (')') 12146-12147
WHITE_SPACE (' ') 12147-12148
IDENT ('colss') 12148-12153
COMMA (',') 12153-12154
WHITE_SPACE ('         ') 12154-12163
LINE_COMMENT ('-- x must appear in at least 2 cols\n') 12163-12199
WHITE_SPACE ('        ') 12199-12207
IDENT ('cols') 12207-12211
WHITE_SPACE (' ') 12211-12212
OPERATOR ('=') 12212-12213
WHITE_SPACE (' ') 12213-12214
IDENT ('fold') 12214-12218
WHITE_SPACE (' ') 12218-12219
IDENT ('union') 12219-12224
WHITE_SPACE (' ') 12224-12225
LBRACKET ('[') 12225-12226
RBRACKET (']') 12226-12227
WHITE_SPACE (' ') 12227-12228
IDENT ('colss') 12228-12233
COMMA (',') 12233-12234
WHITE_SPACE ('\n        ') 12234-12243
IDENT ('length') 12243-12249
WHITE_SPACE (' ') 12249-12250
IDENT ('cols') 12250-12254
WHITE_SPACE (' ') 12254-12255
OPERATOR ('==') 12255-12257
WHITE_SPACE (' ') 12257-12258
IDENT ('n') 12258-12259
COMMA (',') 12259-12260
WHITE_SPACE ('\n        ') 12260-12269
IDENT ('cstart') 12269-12275
WHITE_SPACE (' ') 12275-12276
OPERATOR ('<-') 12276-12278
WHITE_SPACE (' ') 12278-12279
IDENT ('cols') 12279-12283
COMMA (',') 12283-12284
WHITE_SPACE ('\n        ') 12284-12293
LPAREN ('(') 12293-12294
IDENT ('p') 12294-12295
COMMA (',') 12295-12296
WHITE_SPACE (' ') 12296-12297
IDENT ('cell') 12297-12301
RPAREN (')') 12301-12302
WHITE_SPACE (' ') 12302-12303
OPERATOR ('<-') 12303-12305
WHITE_SPACE (' ') 12305-12306
IDENT ('map') 12306-12309
WHITE_SPACE (' ') 12309-12310
LPAREN ('(') 12310-12311
IDENT ('getf') 12311-12315
WHITE_SPACE (' ') 12315-12316
IDENT ('board') 12316-12321
RPAREN (')') 12321-12322
WHITE_SPACE (' ') 12322-12323
LPAREN ('(') 12323-12324
IDENT ('col') 12324-12327
WHITE_SPACE (' ') 12327-12328
IDENT ('cstart') 12328-12334
RPAREN (')') 12334-12335
COMMA (',') 12335-12336
WHITE_SPACE ('\n        ') 12336-12345
IDENT ('x') 12345-12346
WHITE_SPACE (' ') 12346-12347
INFIX_IDENT ('`elem`') 12347-12353
WHITE_SPACE (' ') 12353-12354
IDENT ('cell') 12354-12358
COMMA (',') 12358-12359
WHITE_SPACE ('\n        ') 12359-12368
IDENT ('all') 12368-12371
WHITE_SPACE (' ') 12371-12372
LPAREN ('(') 12372-12373
IDENT ('p') 12373-12374
WHITE_SPACE (' ') 12374-12375
INFIX_IDENT ('`notElem`') 12375-12384
RPAREN (')') 12384-12385
WHITE_SPACE (' ') 12385-12386
IDENT ('rset') 12386-12390
RBRACKET (']') 12390-12391
WHITE_SPACE ('\n\n\n') 12391-12394
LINE_COMMENT ('-- compute immediate consequences of an assumption of the form (p `IS` e) or (p `ISNOT` e)\n') 12394-12485
IDENT ('conseq') 12485-12491
WHITE_SPACE (' ') 12491-12492
IDENT ('board') 12492-12497
WHITE_SPACE (' ') 12497-12498
LPAREN ('(') 12498-12499
IDENT ('IS') 12499-12501
WHITE_SPACE (' ') 12501-12502
IDENT ('p') 12502-12503
WHITE_SPACE (' ') 12503-12504
IDENT ('e') 12504-12505
RPAREN (')') 12505-12506
WHITE_SPACE (' ') 12506-12507
OPERATOR ('=') 12507-12508
WHITE_SPACE (' ') 12508-12509
IDENT ('uniq') 12509-12513
WHITE_SPACE (' ') 12513-12514
LPAREN ('(') 12514-12515
IDENT ('sort') 12515-12519
WHITE_SPACE (' ') 12519-12520
LPAREN ('(') 12520-12521
LBRACKET ('[') 12521-12522
WHITE_SPACE (' ') 12522-12523
IDENT ('p') 12523-12524
WHITE_SPACE (' ') 12524-12525
INFIX_IDENT ('`ISNOT`') 12525-12532
WHITE_SPACE (' ') 12532-12533
IDENT ('x') 12533-12534
WHITE_SPACE (' ') 12534-12535
OPERATOR ('|') 12535-12536
WHITE_SPACE (' ') 12536-12537
IDENT ('x') 12537-12538
WHITE_SPACE (' ') 12538-12539
OPERATOR ('<-') 12539-12541
WHITE_SPACE (' ') 12541-12542
IDENT ('getc') 12542-12546
WHITE_SPACE (' ') 12546-12547
IDENT ('board') 12547-12552
WHITE_SPACE (' ') 12552-12553
IDENT ('p') 12553-12554
COMMA (',') 12554-12555
WHITE_SPACE (' ') 12555-12556
IDENT ('x') 12556-12557
WHITE_SPACE (' ') 12557-12558
OPERATOR ('!=') 12558-12560
WHITE_SPACE (' ') 12560-12561
IDENT ('e') 12561-12562
WHITE_SPACE (' ') 12562-12563
RBRACKET (']') 12563-12564
WHITE_SPACE (' ') 12564-12565
OPERATOR ('++') 12565-12567
WHITE_SPACE ('\n    ') 12567-12572
LBRACKET ('[') 12572-12573
WHITE_SPACE (' ') 12573-12574
IDENT ('a') 12574-12575
WHITE_SPACE (' ') 12575-12576
INFIX_IDENT ('`ISNOT`') 12576-12583
WHITE_SPACE (' ') 12583-12584
IDENT ('e') 12584-12585
WHITE_SPACE (' ') 12585-12586
OPERATOR ('|') 12586-12587
WHITE_SPACE ('\n        ') 12587-12596
LPAREN ('(') 12596-12597
IDENT ('a') 12597-12598
COMMA (',') 12598-12599
IDENT ('cs') 12599-12601
RPAREN (')') 12601-12602
WHITE_SPACE (' ') 12602-12603
OPERATOR ('<-') 12603-12605
WHITE_SPACE (' ') 12605-12606
IDENT ('map') 12606-12609
WHITE_SPACE (' ') 12609-12610
LPAREN ('(') 12610-12611
IDENT ('getf') 12611-12615
WHITE_SPACE (' ') 12615-12616
IDENT ('board') 12616-12621
RPAREN (')') 12621-12622
WHITE_SPACE (' ') 12622-12623
LPAREN ('(') 12623-12624
IDENT ('row') 12624-12627
WHITE_SPACE (' ') 12627-12628
IDENT ('p') 12628-12629
WHITE_SPACE (' ') 12629-12630
OPERATOR ('++') 12630-12632
WHITE_SPACE (' ') 12632-12633
IDENT ('col') 12633-12636
WHITE_SPACE (' ') 12636-12637
IDENT ('p') 12637-12638
WHITE_SPACE (' ') 12638-12639
OPERATOR ('++') 12639-12641
WHITE_SPACE (' ') 12641-12642
IDENT ('box') 12642-12645
WHITE_SPACE (' ') 12645-12646
IDENT ('p') 12646-12647
RPAREN (')') 12647-12648
COMMA (',') 12648-12649
WHITE_SPACE ('\n        ') 12649-12658
IDENT ('a') 12658-12659
WHITE_SPACE (' ') 12659-12660
OPERATOR ('!=') 12660-12662
WHITE_SPACE (' ') 12662-12663
IDENT ('p') 12663-12664
COMMA (',') 12664-12665
WHITE_SPACE ('\n        ') 12665-12674
IDENT ('e') 12674-12675
WHITE_SPACE (' ') 12675-12676
INFIX_IDENT ('`elem`') 12676-12682
WHITE_SPACE (' ') 12682-12683
IDENT ('cs') 12683-12685
WHITE_SPACE ('\n    ') 12685-12690
RBRACKET (']') 12690-12691
RPAREN (')') 12691-12692
RPAREN (')') 12692-12693
WHITE_SPACE ('\n') 12693-12694
IDENT ('conseq') 12694-12700
WHITE_SPACE (' ') 12700-12701
IDENT ('board') 12701-12706
WHITE_SPACE (' ') 12706-12707
LPAREN ('(') 12707-12708
IDENT ('ISNOT') 12708-12713
WHITE_SPACE (' ') 12713-12714
IDENT ('p') 12714-12715
WHITE_SPACE ('  ') 12715-12717
IDENT ('e') 12717-12718
RPAREN (')') 12718-12719
WHITE_SPACE (' ') 12719-12720
OPERATOR ('=') 12720-12721
WHITE_SPACE (' ') 12721-12722
IDENT ('uniq') 12722-12726
WHITE_SPACE (' ') 12726-12727
LPAREN ('(') 12727-12728
IDENT ('sort') 12728-12732
WHITE_SPACE (' ') 12732-12733
LPAREN ('(') 12733-12734
LBRACKET ('[') 12734-12735
WHITE_SPACE (' ') 12735-12736
IDENT ('p') 12736-12737
WHITE_SPACE (' ') 12737-12738
INFIX_IDENT ('`IS`') 12738-12742
WHITE_SPACE (' ') 12742-12743
IDENT ('x') 12743-12744
WHITE_SPACE (' ') 12744-12745
OPERATOR ('|') 12745-12746
WHITE_SPACE (' ') 12746-12747
IDENT ('cs') 12747-12749
WHITE_SPACE (' ') 12749-12750
OPERATOR ('=') 12750-12751
WHITE_SPACE (' ') 12751-12752
IDENT ('getc') 12752-12756
WHITE_SPACE (' ') 12756-12757
IDENT ('board') 12757-12762
WHITE_SPACE (' ') 12762-12763
IDENT ('p') 12763-12764
COMMA (',') 12764-12765
WHITE_SPACE (' ') 12765-12766
IDENT ('length') 12766-12772
WHITE_SPACE (' ') 12772-12773
IDENT ('cs') 12773-12775
WHITE_SPACE (' ') 12775-12776
OPERATOR ('==') 12776-12778
WHITE_SPACE (' ') 12778-12779
NUMBER_LITERAL ('2') 12779-12780
COMMA (',') 12780-12781
WHITE_SPACE (' ') 12781-12782
IDENT ('x') 12782-12783
WHITE_SPACE (' ') 12783-12784
OPERATOR ('<-') 12784-12786
WHITE_SPACE (' ') 12786-12787
IDENT ('cs') 12787-12789
COMMA (',') 12789-12790
WHITE_SPACE (' ') 12790-12791
IDENT ('x') 12791-12792
WHITE_SPACE (' ') 12792-12793
OPERATOR ('!=') 12793-12795
WHITE_SPACE (' ') 12795-12796
IDENT ('e') 12796-12797
WHITE_SPACE (' ') 12797-12798
RBRACKET (']') 12798-12799
WHITE_SPACE (' ') 12799-12800
OPERATOR ('++') 12800-12802
WHITE_SPACE ('\n    ') 12802-12807
LBRACKET ('[') 12807-12808
WHITE_SPACE (' ') 12808-12809
IDENT ('a') 12809-12810
WHITE_SPACE (' ') 12810-12811
INFIX_IDENT ('`IS`') 12811-12815
WHITE_SPACE (' ') 12815-12816
IDENT ('e') 12816-12817
WHITE_SPACE (' ') 12817-12818
OPERATOR ('|') 12818-12819
WHITE_SPACE ('\n        ') 12819-12828
IDENT ('cp') 12828-12830
WHITE_SPACE (' ') 12830-12831
OPERATOR ('<-') 12831-12833
WHITE_SPACE (' ') 12833-12834
LBRACKET ('[') 12834-12835
IDENT ('row') 12835-12838
WHITE_SPACE (' ') 12838-12839
IDENT ('p') 12839-12840
COMMA (',') 12840-12841
WHITE_SPACE (' ') 12841-12842
IDENT ('box') 12842-12845
WHITE_SPACE (' ') 12845-12846
IDENT ('p') 12846-12847
COMMA (',') 12847-12848
WHITE_SPACE (' ') 12848-12849
IDENT ('col') 12849-12852
WHITE_SPACE (' ') 12852-12853
IDENT ('p') 12853-12854
RBRACKET (']') 12854-12855
COMMA (',') 12855-12856
WHITE_SPACE ('\n        ') 12856-12865
IDENT ('as') 12865-12867
WHITE_SPACE (' ') 12867-12868
OPERATOR ('=') 12868-12869
WHITE_SPACE (' ') 12869-12870
LPAREN ('(') 12870-12871
IDENT ('filter') 12871-12877
WHITE_SPACE (' ') 12877-12878
LPAREN ('(') 12878-12879
LPAREN ('(') 12879-12880
IDENT ('e') 12880-12881
WHITE_SPACE (' ') 12881-12882
INFIX_IDENT ('`elem`') 12882-12888
RPAREN (')') 12888-12889
WHITE_SPACE (' ') 12889-12890
DOT ('.') 12890-12891
WHITE_SPACE (' ') 12891-12892
IDENT ('getc') 12892-12896
WHITE_SPACE (' ') 12896-12897
IDENT ('board') 12897-12902
RPAREN (')') 12902-12903
WHITE_SPACE (' ') 12903-12904
DOT ('.') 12904-12905
WHITE_SPACE (' ') 12905-12906
IDENT ('filter') 12906-12912
WHITE_SPACE (' ') 12912-12913
LPAREN ('(') 12913-12914
IDENT ('p') 12914-12915
OPERATOR ('!=') 12915-12917
RPAREN (')') 12917-12918
RPAREN (')') 12918-12919
WHITE_SPACE (' ') 12919-12920
IDENT ('cp') 12920-12922
COMMA (',') 12922-12923
WHITE_SPACE ('\n        ') 12923-12932
IDENT ('length') 12932-12938
WHITE_SPACE (' ') 12938-12939
IDENT ('as') 12939-12941
WHITE_SPACE (' ') 12941-12942
OPERATOR ('==') 12942-12944
WHITE_SPACE (' ') 12944-12945
NUMBER_LITERAL ('1') 12945-12946
COMMA (',') 12946-12947
WHITE_SPACE ('\n        ') 12947-12956
IDENT ('a') 12956-12957
WHITE_SPACE (' ') 12957-12958
OPERATOR ('=') 12958-12959
WHITE_SPACE (' ') 12959-12960
IDENT ('head') 12960-12964
WHITE_SPACE (' ') 12964-12965
IDENT ('as') 12965-12967
WHITE_SPACE ('\n    ') 12967-12972
RBRACKET (']') 12972-12973
RPAREN (')') 12973-12974
RPAREN (')') 12974-12975
WHITE_SPACE ('\n\n') 12975-12977
LINE_COMMENT ('-- check if two assumptions contradict each other\n') 12977-13027
IDENT ('contradicts') 13027-13038
WHITE_SPACE (' ') 13038-13039
LPAREN ('(') 13039-13040
IDENT ('IS') 13040-13042
WHITE_SPACE (' ') 13042-13043
IDENT ('a') 13043-13044
WHITE_SPACE (' ') 13044-13045
IDENT ('x') 13045-13046
RPAREN (')') 13046-13047
WHITE_SPACE ('    ') 13047-13051
LPAREN ('(') 13051-13052
IDENT ('IS') 13052-13054
WHITE_SPACE (' ') 13054-13055
IDENT ('b') 13055-13056
WHITE_SPACE (' ') 13056-13057
IDENT ('y') 13057-13058
RPAREN (')') 13058-13059
WHITE_SPACE ('    ') 13059-13063
OPERATOR ('=') 13063-13064
WHITE_SPACE (' ') 13064-13065
IDENT ('a') 13065-13066
OPERATOR ('==') 13066-13068
IDENT ('b') 13068-13069
WHITE_SPACE (' ') 13069-13070
OPERATOR ('&&') 13070-13072
WHITE_SPACE (' ') 13072-13073
IDENT ('x') 13073-13074
OPERATOR ('!=') 13074-13076
IDENT ('y') 13076-13077
WHITE_SPACE ('\n') 13077-13078
IDENT ('contradicts') 13078-13089
WHITE_SPACE (' ') 13089-13090
LPAREN ('(') 13090-13091
IDENT ('IS') 13091-13093
WHITE_SPACE (' ') 13093-13094
IDENT ('a') 13094-13095
WHITE_SPACE (' ') 13095-13096
IDENT ('x') 13096-13097
RPAREN (')') 13097-13098
WHITE_SPACE ('    ') 13098-13102
LPAREN ('(') 13102-13103
IDENT ('ISNOT') 13103-13108
WHITE_SPACE (' ') 13108-13109
IDENT ('b') 13109-13110
WHITE_SPACE (' ') 13110-13111
IDENT ('y') 13111-13112
RPAREN (')') 13112-13113
WHITE_SPACE (' ') 13113-13114
OPERATOR ('=') 13114-13115
WHITE_SPACE (' ') 13115-13116
IDENT ('a') 13116-13117
OPERATOR ('==') 13117-13119
IDENT ('b') 13119-13120
WHITE_SPACE (' ') 13120-13121
OPERATOR ('&&') 13121-13123
WHITE_SPACE (' ') 13123-13124
IDENT ('x') 13124-13125
OPERATOR ('==') 13125-13127
IDENT ('y') 13127-13128
WHITE_SPACE ('\n') 13128-13129
IDENT ('contradicts') 13129-13140
WHITE_SPACE (' ') 13140-13141
LPAREN ('(') 13141-13142
IDENT ('ISNOT') 13142-13147
WHITE_SPACE (' ') 13147-13148
IDENT ('a') 13148-13149
WHITE_SPACE (' ') 13149-13150
IDENT ('x') 13150-13151
RPAREN (')') 13151-13152
WHITE_SPACE (' ') 13152-13153
LPAREN ('(') 13153-13154
IDENT ('IS') 13154-13156
WHITE_SPACE (' ') 13156-13157
IDENT ('b') 13157-13158
WHITE_SPACE (' ') 13158-13159
IDENT ('y') 13159-13160
RPAREN (')') 13160-13161
WHITE_SPACE ('    ') 13161-13165
OPERATOR ('=') 13165-13166
WHITE_SPACE (' ') 13166-13167
IDENT ('a') 13167-13168
OPERATOR ('==') 13168-13170
IDENT ('b') 13170-13171
WHITE_SPACE (' ') 13171-13172
OPERATOR ('&&') 13172-13174
WHITE_SPACE (' ') 13174-13175
IDENT ('x') 13175-13176
OPERATOR ('==') 13176-13178
IDENT ('y') 13178-13179
WHITE_SPACE ('\n') 13179-13180
IDENT ('contradicts') 13180-13191
WHITE_SPACE (' ') 13191-13192
LPAREN ('(') 13192-13193
IDENT ('ISNOT') 13193-13198
WHITE_SPACE (' ') 13198-13199
IDENT ('_') 13199-13200
WHITE_SPACE (' ') 13200-13201
IDENT ('_') 13201-13202
RPAREN (')') 13202-13203
WHITE_SPACE (' ') 13203-13204
LPAREN ('(') 13204-13205
IDENT ('ISNOT') 13205-13210
WHITE_SPACE (' ') 13210-13211
IDENT ('_') 13211-13212
WHITE_SPACE (' ') 13212-13213
IDENT ('_') 13213-13214
RPAREN (')') 13214-13215
WHITE_SPACE (' ') 13215-13216
OPERATOR ('=') 13216-13217
WHITE_SPACE (' ') 13217-13218
KEYWORD ('false') 13218-13223
WHITE_SPACE ('\n\n') 13223-13225
LINE_COMMENT ('-- get the Position of an Assumption\n') 13225-13262
IDENT ('aPos') 13262-13266
WHITE_SPACE (' ') 13266-13267
LPAREN ('(') 13267-13268
IDENT ('IS') 13268-13270
WHITE_SPACE (' ') 13270-13271
IDENT ('p') 13271-13272
WHITE_SPACE (' ') 13272-13273
IDENT ('_') 13273-13274
RPAREN (')') 13274-13275
WHITE_SPACE ('    ') 13275-13279
OPERATOR ('=') 13279-13280
WHITE_SPACE (' ') 13280-13281
IDENT ('p') 13281-13282
WHITE_SPACE ('\n') 13282-13283
IDENT ('aPos') 13283-13287
WHITE_SPACE (' ') 13287-13288
LPAREN ('(') 13288-13289
IDENT ('ISNOT') 13289-13294
WHITE_SPACE (' ') 13294-13295
IDENT ('p') 13295-13296
WHITE_SPACE (' ') 13296-13297
IDENT ('_') 13297-13298
RPAREN (')') 13298-13299
WHITE_SPACE (' ') 13299-13300
OPERATOR ('=') 13300-13301
WHITE_SPACE (' ') 13301-13302
IDENT ('p') 13302-13303
WHITE_SPACE ('\n\n') 13303-13305
LINE_COMMENT ('-- get List of elements that must be turned off when assumption is true/false\n') 13305-13383
IDENT ('toClear') 13383-13390
WHITE_SPACE (' ') 13390-13391
IDENT ('board') 13391-13396
WHITE_SPACE (' ') 13396-13397
KEYWORD ('true') 13397-13401
WHITE_SPACE ('  ') 13401-13403
LPAREN ('(') 13403-13404
IDENT ('IS') 13404-13406
WHITE_SPACE (' ') 13406-13407
IDENT ('p') 13407-13408
WHITE_SPACE (' ') 13408-13409
IDENT ('x') 13409-13410
RPAREN (')') 13410-13411
WHITE_SPACE ('    ') 13411-13415
OPERATOR ('=') 13415-13416
WHITE_SPACE (' ') 13416-13417
IDENT ('filter') 13417-13423
WHITE_SPACE (' ') 13423-13424
LPAREN ('(') 13424-13425
IDENT ('x') 13425-13426
OPERATOR ('!=') 13426-13428
RPAREN (')') 13428-13429
WHITE_SPACE (' ') 13429-13430
LPAREN ('(') 13430-13431
IDENT ('getc') 13431-13435
WHITE_SPACE (' ') 13435-13436
IDENT ('board') 13436-13441
WHITE_SPACE (' ') 13441-13442
IDENT ('p') 13442-13443
RPAREN (')') 13443-13444
WHITE_SPACE ('\n') 13444-13445
IDENT ('toClear') 13445-13452
WHITE_SPACE (' ') 13452-13453
IDENT ('board') 13453-13458
WHITE_SPACE (' ') 13458-13459
KEYWORD ('false') 13459-13464
WHITE_SPACE (' ') 13464-13465
LPAREN ('(') 13465-13466
IDENT ('IS') 13466-13468
WHITE_SPACE (' ') 13468-13469
IDENT ('p') 13469-13470
WHITE_SPACE (' ') 13470-13471
IDENT ('x') 13471-13472
RPAREN (')') 13472-13473
WHITE_SPACE ('    ') 13473-13477
OPERATOR ('=') 13477-13478
WHITE_SPACE (' ') 13478-13479
LBRACKET ('[') 13479-13480
IDENT ('x') 13480-13481
RBRACKET (']') 13481-13482
WHITE_SPACE ('\n') 13482-13483
IDENT ('toClear') 13483-13490
WHITE_SPACE (' ') 13490-13491
IDENT ('board') 13491-13496
WHITE_SPACE (' ') 13496-13497
KEYWORD ('true') 13497-13501
WHITE_SPACE ('  ') 13501-13503
LPAREN ('(') 13503-13504
IDENT ('ISNOT') 13504-13509
WHITE_SPACE (' ') 13509-13510
IDENT ('p') 13510-13511
WHITE_SPACE (' ') 13511-13512
IDENT ('x') 13512-13513
RPAREN (')') 13513-13514
WHITE_SPACE (' ') 13514-13515
OPERATOR ('=') 13515-13516
WHITE_SPACE (' ') 13516-13517
LBRACKET ('[') 13517-13518
IDENT ('x') 13518-13519
RBRACKET (']') 13519-13520
WHITE_SPACE ('\n') 13520-13521
IDENT ('toClear') 13521-13528
WHITE_SPACE (' ') 13528-13529
IDENT ('board') 13529-13534
WHITE_SPACE (' ') 13534-13535
KEYWORD ('false') 13535-13540
WHITE_SPACE (' ') 13540-13541
LPAREN ('(') 13541-13542
IDENT ('ISNOT') 13542-13547
WHITE_SPACE (' ') 13547-13548
IDENT ('p') 13548-13549
WHITE_SPACE (' ') 13549-13550
IDENT ('x') 13550-13551
RPAREN (')') 13551-13552
WHITE_SPACE (' ') 13552-13553
OPERATOR ('=') 13553-13554
WHITE_SPACE (' ') 13554-13555
IDENT ('filter') 13555-13561
WHITE_SPACE (' ') 13561-13562
LPAREN ('(') 13562-13563
IDENT ('x') 13563-13564
OPERATOR ('!=') 13564-13566
RPAREN (')') 13566-13567
WHITE_SPACE (' ') 13567-13568
LPAREN ('(') 13568-13569
IDENT ('getc') 13569-13573
WHITE_SPACE (' ') 13573-13574
IDENT ('board') 13574-13579
WHITE_SPACE (' ') 13579-13580
IDENT ('p') 13580-13581
RPAREN (')') 13581-13582
WHITE_SPACE ('\n\n\n') 13582-13585
LINE_COMMENT ('-- look for assumptions whose implications contradict themselves\n') 13585-13650
IDENT ('chain') 13650-13655
WHITE_SPACE (' ') 13655-13656
IDENT ('board') 13656-13661
WHITE_SPACE (' ') 13661-13662
IDENT ('paths') 13662-13667
WHITE_SPACE (' ') 13667-13668
OPERATOR ('=') 13668-13669
WHITE_SPACE (' ') 13669-13670
LBRACKET ('[') 13670-13671
WHITE_SPACE (' ') 13671-13672
IDENT ('solution') 13672-13680
WHITE_SPACE (' ') 13680-13681
IDENT ('a') 13681-13682
WHITE_SPACE (' ') 13682-13683
LPAREN ('(') 13683-13684
IDENT ('head') 13684-13688
WHITE_SPACE (' ') 13688-13689
IDENT ('cs') 13689-13691
RPAREN (')') 13691-13692
WHITE_SPACE (' ') 13692-13693
LPAREN ('(') 13693-13694
IDENT ('reverse') 13694-13701
WHITE_SPACE (' ') 13701-13702
IDENT ('cs') 13702-13704
RPAREN (')') 13704-13705
WHITE_SPACE (' ') 13705-13706
OPERATOR ('|') 13706-13707
WHITE_SPACE ('\n        ') 13707-13716
LPAREN ('(') 13716-13717
IDENT ('a') 13717-13718
COMMA (',') 13718-13719
WHITE_SPACE (' ') 13719-13720
IDENT ('css') 13720-13723
RPAREN (')') 13723-13724
WHITE_SPACE (' ') 13724-13725
OPERATOR ('<-') 13725-13727
WHITE_SPACE ('  ') 13727-13729
IDENT ('paths') 13729-13734
COMMA (',') 13734-13735
WHITE_SPACE ('\n        ') 13735-13744
IDENT ('cs') 13744-13746
WHITE_SPACE (' ') 13746-13747
OPERATOR ('<-') 13747-13749
WHITE_SPACE (' ') 13749-13750
IDENT ('take') 13750-13754
WHITE_SPACE (' ') 13754-13755
NUMBER_LITERAL ('1') 13755-13756
WHITE_SPACE (' ') 13756-13757
LBRACKET ('[') 13757-13758
WHITE_SPACE (' ') 13758-13759
IDENT ('cs') 13759-13761
WHITE_SPACE (' ') 13761-13762
OPERATOR ('|') 13762-13763
WHITE_SPACE (' ') 13763-13764
IDENT ('cs') 13764-13766
WHITE_SPACE (' ') 13766-13767
OPERATOR ('<-') 13767-13769
WHITE_SPACE (' ') 13769-13770
IDENT ('css') 13770-13773
COMMA (',') 13773-13774
WHITE_SPACE (' ') 13774-13775
IDENT ('contradicts') 13775-13786
WHITE_SPACE (' ') 13786-13787
IDENT ('a') 13787-13788
WHITE_SPACE (' ') 13788-13789
LPAREN ('(') 13789-13790
IDENT ('head') 13790-13794
WHITE_SPACE (' ') 13794-13795
IDENT ('cs') 13795-13797
RPAREN (')') 13797-13798
WHITE_SPACE (' ') 13798-13799
RBRACKET (']') 13799-13800
WHITE_SPACE ('\n        ') 13800-13809
RBRACKET (']') 13809-13810
WHITE_SPACE ('\n    ') 13810-13815
KEYWORD ('where') 13815-13820
WHITE_SPACE ('\n        ') 13820-13829
IDENT ('solution') 13829-13837
WHITE_SPACE (' ') 13837-13838
IDENT ('a') 13838-13839
WHITE_SPACE (' ') 13839-13840
IDENT ('c') 13840-13841
WHITE_SPACE (' ') 13841-13842
IDENT ('cs') 13842-13844
WHITE_SPACE (' ') 13844-13845
OPERATOR ('=') 13845-13846
WHITE_SPACE (' ') 13846-13847
IDENT ('turnoff') 13847-13854
WHITE_SPACE (' ') 13854-13855
LPAREN ('(') 13855-13856
IDENT ('aPos') 13856-13860
WHITE_SPACE (' ') 13860-13861
IDENT ('a') 13861-13862
RPAREN (')') 13862-13863
WHITE_SPACE (' ') 13863-13864
LPAREN ('(') 13864-13865
IDENT ('toClear') 13865-13872
WHITE_SPACE (' ') 13872-13873
IDENT ('board') 13873-13878
WHITE_SPACE (' ') 13878-13879
KEYWORD ('false') 13879-13884
WHITE_SPACE (' ') 13884-13885
IDENT ('a') 13885-13886
RPAREN (')') 13886-13887
WHITE_SPACE (' ') 13887-13888
IDENT ('reason') 13888-13894
WHITE_SPACE (' ') 13894-13895
KEYWORD ('where') 13895-13900
WHITE_SPACE ('\n            ') 13900-13913
IDENT ('reason') 13913-13919
WHITE_SPACE (' ') 13919-13920
OPERATOR ('=') 13920-13921
WHITE_SPACE (' ') 13921-13922
STRING_LITERAL ('"Assumption "') 13922-13935
WHITE_SPACE (' ') 13935-13936
OPERATOR ('++') 13936-13938
WHITE_SPACE (' ') 13938-13939
IDENT ('show') 13939-13943
WHITE_SPACE (' ') 13943-13944
IDENT ('a') 13944-13945
WHITE_SPACE (' ') 13945-13946
OPERATOR ('++') 13946-13948
WHITE_SPACE (' ') 13948-13949
STRING_LITERAL ('" implies "') 13949-13960
WHITE_SPACE (' ') 13960-13961
OPERATOR ('++') 13961-13963
WHITE_SPACE (' ') 13963-13964
IDENT ('show') 13964-13968
WHITE_SPACE (' ') 13968-13969
IDENT ('c') 13969-13970
WHITE_SPACE (' ') 13970-13971
OPERATOR ('++') 13971-13973
WHITE_SPACE (' ') 13973-13974
STRING_LITERAL ('"\n\t"') 13974-13980
WHITE_SPACE ('\n                ') 13980-13997
OPERATOR ('++') 13997-13999
WHITE_SPACE (' ') 13999-14000
IDENT ('showcs') 14000-14006
WHITE_SPACE (' ') 14006-14007
IDENT ('cs') 14007-14009
WHITE_SPACE (' ') 14009-14010
OPERATOR ('++') 14010-14012
WHITE_SPACE (' ') 14012-14013
STRING_LITERAL ('"\n\t"') 14013-14019
WHITE_SPACE ('\n                ') 14019-14036
OPERATOR ('++') 14036-14038
WHITE_SPACE (' ') 14038-14039
STRING_LITERAL ('"Therefore, "') 14039-14052
WHITE_SPACE (' ') 14052-14053
OPERATOR ('++') 14053-14055
WHITE_SPACE (' ') 14055-14056
IDENT ('show') 14056-14060
WHITE_SPACE (' ') 14060-14061
IDENT ('a') 14061-14062
WHITE_SPACE (' ') 14062-14063
OPERATOR ('++') 14063-14065
WHITE_SPACE (' ') 14065-14066
STRING_LITERAL ('" must be false."') 14066-14083
WHITE_SPACE ('\n\n') 14083-14085
LINE_COMMENT ('-- look for an assumption that yields to contradictory implications\n') 14085-14153
LINE_COMMENT ('-- this assumption must be false\n') 14153-14186
IDENT ('chainContra') 14186-14197
WHITE_SPACE (' ') 14197-14198
IDENT ('board') 14198-14203
WHITE_SPACE (' ') 14203-14204
IDENT ('paths') 14204-14209
WHITE_SPACE (' ') 14209-14210
OPERATOR ('=') 14210-14211
WHITE_SPACE (' ') 14211-14212
LBRACKET ('[') 14212-14213
WHITE_SPACE (' ') 14213-14214
IDENT ('solution') 14214-14222
WHITE_SPACE (' ') 14222-14223
IDENT ('a') 14223-14224
WHITE_SPACE (' ') 14224-14225
LPAREN ('(') 14225-14226
IDENT ('reverse') 14226-14233
WHITE_SPACE (' ') 14233-14234
IDENT ('pro') 14234-14237
RPAREN (')') 14237-14238
WHITE_SPACE (' ') 14238-14239
LPAREN ('(') 14239-14240
IDENT ('reverse') 14240-14247
WHITE_SPACE (' ') 14247-14248
IDENT ('contra') 14248-14254
RPAREN (')') 14254-14255
WHITE_SPACE (' ') 14255-14256
OPERATOR ('|') 14256-14257
WHITE_SPACE ('\n        ') 14257-14266
LPAREN ('(') 14266-14267
IDENT ('a') 14267-14268
COMMA (',') 14268-14269
WHITE_SPACE (' ') 14269-14270
IDENT ('css') 14270-14273
RPAREN (')') 14273-14274
WHITE_SPACE (' ') 14274-14275
OPERATOR ('<-') 14275-14277
WHITE_SPACE (' ') 14277-14278
IDENT ('paths') 14278-14283
COMMA (',') 14283-14284
WHITE_SPACE ('                                                  ') 14284-14334
LINE_COMMENT ('-- FOR ALL assumptions "a" with list of conclusions "css"\n') 14334-14392
WHITE_SPACE ('        ') 14392-14400
LPAREN ('(') 14400-14401
IDENT ('pro') 14401-14404
COMMA (',') 14404-14405
WHITE_SPACE (' ') 14405-14406
IDENT ('contra') 14406-14412
RPAREN (')') 14412-14413
WHITE_SPACE (' ') 14413-14414
OPERATOR ('<-') 14414-14416
WHITE_SPACE (' ') 14416-14417
IDENT ('take') 14417-14421
WHITE_SPACE (' ') 14421-14422
NUMBER_LITERAL ('1') 14422-14423
WHITE_SPACE (' ') 14423-14424
LBRACKET ('[') 14424-14425
WHITE_SPACE (' ') 14425-14426
LPAREN ('(') 14426-14427
IDENT ('pro') 14427-14430
COMMA (',') 14430-14431
WHITE_SPACE (' ') 14431-14432
IDENT ('contra') 14432-14438
RPAREN (')') 14438-14439
WHITE_SPACE (' ') 14439-14440
OPERATOR ('|') 14440-14441
WHITE_SPACE ('\n            ') 14441-14454
IDENT ('pro') 14454-14457
WHITE_SPACE (' ') 14457-14458
OPERATOR ('<-') 14458-14460
WHITE_SPACE (' ') 14460-14461
LPAREN ('(') 14461-14462
IDENT ('uniqBy') 14462-14468
WHITE_SPACE (' ') 14468-14469
LPAREN ('(') 14469-14470
IDENT ('using') 14470-14475
WHITE_SPACE (' ') 14475-14476
IDENT ('head') 14476-14480
RPAREN (')') 14480-14481
WHITE_SPACE (' ') 14481-14482
DOT ('.') 14482-14483
WHITE_SPACE (' ') 14483-14484
IDENT ('sortBy') 14484-14490
WHITE_SPACE (' ') 14490-14491
LPAREN ('(') 14491-14492
IDENT ('comparing') 14492-14501
WHITE_SPACE (' ') 14501-14502
IDENT ('head') 14502-14506
RPAREN (')') 14506-14507
RPAREN (')') 14507-14508
WHITE_SPACE (' ') 14508-14509
IDENT ('css') 14509-14512
COMMA (',') 14512-14513
WHITE_SPACE ('     ') 14513-14518
LINE_COMMENT ('-- FOR ALL conclusion chains "pro"\n') 14518-14553
WHITE_SPACE ('            ') 14553-14565
IDENT ('c') 14565-14566
WHITE_SPACE (' ') 14566-14567
OPERATOR ('=') 14567-14568
WHITE_SPACE (' ') 14568-14569
IDENT ('head') 14569-14573
WHITE_SPACE (' ') 14573-14574
IDENT ('pro') 14574-14577
COMMA (',') 14577-14578
WHITE_SPACE ('                                                   ') 14578-14629
LINE_COMMENT ('-- LET "c" BE the final conclusion\n') 14629-14664
WHITE_SPACE ('            ') 14664-14676
IDENT ('contra') 14676-14682
WHITE_SPACE (' ') 14682-14683
OPERATOR ('<-') 14683-14685
WHITE_SPACE (' ') 14685-14686
IDENT ('take') 14686-14690
WHITE_SPACE (' ') 14690-14691
NUMBER_LITERAL ('1') 14691-14692
WHITE_SPACE (' ') 14692-14693
LPAREN ('(') 14693-14694
IDENT ('filter') 14694-14700
WHITE_SPACE (' ') 14700-14701
LPAREN ('(') 14701-14702
LPAREN ('(') 14702-14703
IDENT ('contradicts') 14703-14714
WHITE_SPACE (' ') 14714-14715
IDENT ('c') 14715-14716
RPAREN (')') 14716-14717
WHITE_SPACE (' ') 14717-14718
DOT ('.') 14718-14719
WHITE_SPACE (' ') 14719-14720
IDENT ('head') 14720-14724
RPAREN (')') 14724-14725
WHITE_SPACE (' ') 14725-14726
IDENT ('css') 14726-14729
RPAREN (')') 14729-14730
WHITE_SPACE ('          ') 14730-14740
LINE_COMMENT ('-- THE FIRST conclusion that contradicts c\n') 14740-14783
WHITE_SPACE ('        ') 14783-14791
RBRACKET (']') 14791-14792
WHITE_SPACE ('\n      ') 14792-14799
RBRACKET (']') 14799-14800
WHITE_SPACE ('\n    ') 14800-14805
KEYWORD ('where') 14805-14810
WHITE_SPACE ('\n        ') 14810-14819
IDENT ('solution') 14819-14827
WHITE_SPACE (' ') 14827-14828
IDENT ('a') 14828-14829
WHITE_SPACE (' ') 14829-14830
IDENT ('pro') 14830-14833
WHITE_SPACE (' ') 14833-14834
IDENT ('con') 14834-14837
WHITE_SPACE (' ') 14837-14838
OPERATOR ('=') 14838-14839
WHITE_SPACE (' ') 14839-14840
IDENT ('turnoff') 14840-14847
WHITE_SPACE (' ') 14847-14848
LPAREN ('(') 14848-14849
IDENT ('aPos') 14849-14853
WHITE_SPACE (' ') 14853-14854
IDENT ('a') 14854-14855
RPAREN (')') 14855-14856
WHITE_SPACE (' ') 14856-14857
LPAREN ('(') 14857-14858
IDENT ('toClear') 14858-14865
WHITE_SPACE (' ') 14865-14866
IDENT ('board') 14866-14871
WHITE_SPACE (' ') 14871-14872
KEYWORD ('false') 14872-14877
WHITE_SPACE (' ') 14877-14878
IDENT ('a') 14878-14879
RPAREN (')') 14879-14880
WHITE_SPACE (' ') 14880-14881
IDENT ('reason') 14881-14887
WHITE_SPACE (' ') 14887-14888
KEYWORD ('where') 14888-14893
WHITE_SPACE ('\n            ') 14893-14906
IDENT ('reason') 14906-14912
WHITE_SPACE (' ') 14912-14913
OPERATOR ('=') 14913-14914
WHITE_SPACE (' ') 14914-14915
LPAREN ('(') 14915-14916
STRING_LITERAL ('"assumption "') 14916-14929
WHITE_SPACE (' ') 14929-14930
OPERATOR ('++') 14930-14932
WHITE_SPACE (' ') 14932-14933
IDENT ('show') 14933-14937
WHITE_SPACE (' ') 14937-14938
IDENT ('a') 14938-14939
WHITE_SPACE (' ') 14939-14940
OPERATOR ('++') 14940-14942
WHITE_SPACE (' ') 14942-14943
STRING_LITERAL ('" leads to contradictory conclusions\n\t"') 14943-14984
WHITE_SPACE ('\n                        ') 14984-15009
OPERATOR ('++') 15009-15011
WHITE_SPACE (' ') 15011-15012
IDENT ('showcs') 15012-15018
WHITE_SPACE (' ') 15018-15019
IDENT ('pro') 15019-15022
WHITE_SPACE (' ') 15022-15023
OPERATOR ('++') 15023-15025
WHITE_SPACE (' ') 15025-15026
STRING_LITERAL ('"\n\t"') 15026-15032
WHITE_SPACE (' ') 15032-15033
OPERATOR ('++') 15033-15035
WHITE_SPACE (' ') 15035-15036
IDENT ('showcs') 15036-15042
WHITE_SPACE (' ') 15042-15043
IDENT ('con') 15043-15046
RPAREN (')') 15046-15047
WHITE_SPACE ('\n\n\n\n') 15047-15051
LINE_COMMENT ('-- look for a common implication c of some assumptions ai, where at least 1 ai is true\n') 15051-15138
LINE_COMMENT ('-- so that (a0 OR a1 OR a2 OR ...) IMPLIES c\n') 15138-15183
LINE_COMMENT ('-- For all cells pi in same container that have x as candidate, we can construct (p0==x OR p1==x OR ... OR pi==x)\n') 15183-15297
LINE_COMMENT ('-- For a cell p with candidates ci, we can construct (p==c0 OR p==c1)\n') 15297-15367
IDENT ('cellRegionChain') 15367-15382
WHITE_SPACE (' ') 15382-15383
IDENT ('board') 15383-15388
WHITE_SPACE (' ') 15388-15389
IDENT ('paths') 15389-15394
WHITE_SPACE (' ') 15394-15395
OPERATOR ('=') 15395-15396
WHITE_SPACE (' ') 15396-15397
LBRACKET ('[') 15397-15398
WHITE_SPACE (' ') 15398-15399
IDENT ('solution') 15399-15407
WHITE_SPACE (' ') 15407-15408
IDENT ('b') 15408-15409
WHITE_SPACE (' ') 15409-15410
IDENT ('as') 15410-15412
WHITE_SPACE (' ') 15412-15413
LPAREN ('(') 15413-15414
IDENT ('map') 15414-15417
WHITE_SPACE (' ') 15417-15418
IDENT ('head') 15418-15422
WHITE_SPACE (' ') 15422-15423
IDENT ('os') 15423-15425
RPAREN (')') 15425-15426
WHITE_SPACE (' ') 15426-15427
OPERATOR ('|') 15427-15428
WHITE_SPACE ('\n        ') 15428-15437
IDENT ('as') 15437-15439
WHITE_SPACE (' ') 15439-15440
OPERATOR ('<-') 15440-15442
WHITE_SPACE (' ') 15442-15443
IDENT ('cellas') 15443-15449
WHITE_SPACE (' ') 15449-15450
OPERATOR ('++') 15450-15452
WHITE_SPACE (' ') 15452-15453
IDENT ('regionas') 15453-15461
COMMA (',') 15461-15462
WHITE_SPACE ('           ') 15462-15473
LINE_COMMENT ('-- one of as must be true\n') 15473-15499
WHITE_SPACE ('        ') 15499-15507
IDENT ('iss') 15507-15510
WHITE_SPACE (' ') 15510-15511
OPERATOR ('=') 15511-15512
WHITE_SPACE (' ') 15512-15513
IDENT ('filter') 15513-15519
WHITE_SPACE (' ') 15519-15520
LPAREN ('(') 15520-15521
LPAREN ('(') 15521-15522
INFIX_IDENT ('`elem`') 15522-15528
WHITE_SPACE (' ') 15528-15529
IDENT ('as') 15529-15531
RPAREN (')') 15531-15532
WHITE_SPACE (' ') 15532-15533
DOT ('.') 15533-15534
WHITE_SPACE (' ') 15534-15535
IDENT ('fst') 15535-15538
RPAREN (')') 15538-15539
WHITE_SPACE (' ') 15539-15540
IDENT ('paths') 15540-15545
COMMA (',') 15545-15546
WHITE_SPACE ('    ') 15546-15550
LINE_COMMENT ('-- the implications for as\n') 15550-15577
WHITE_SPACE ('        ') 15577-15585
LPAREN ('(') 15585-15586
IDENT ('a') 15586-15587
COMMA (',') 15587-15588
WHITE_SPACE (' ') 15588-15589
IDENT ('ass') 15589-15592
RPAREN (')') 15592-15593
WHITE_SPACE (' ') 15593-15594
OPERATOR ('<-') 15594-15596
WHITE_SPACE (' ') 15596-15597
IDENT ('take') 15597-15601
WHITE_SPACE (' ') 15601-15602
NUMBER_LITERAL ('1') 15602-15603
WHITE_SPACE (' ') 15603-15604
IDENT ('iss') 15604-15607
COMMA (',') 15607-15608
WHITE_SPACE ('             ') 15608-15621
LINE_COMMENT ('-- implications for first assumption\n') 15621-15658
WHITE_SPACE ('        ') 15658-15666
IDENT ('fs') 15666-15668
WHITE_SPACE (' ') 15668-15669
OPERATOR ('<-') 15669-15671
WHITE_SPACE (' ') 15671-15672
LPAREN ('(') 15672-15673
IDENT ('uniqBy') 15673-15679
WHITE_SPACE (' ') 15679-15680
LPAREN ('(') 15680-15681
IDENT ('using') 15681-15686
WHITE_SPACE (' ') 15686-15687
IDENT ('head') 15687-15691
RPAREN (')') 15691-15692
WHITE_SPACE (' ') 15692-15693
DOT ('.') 15693-15694
WHITE_SPACE (' ') 15694-15695
IDENT ('sortBy') 15695-15701
WHITE_SPACE (' ') 15701-15702
LPAREN ('(') 15702-15703
IDENT ('comparing') 15703-15712
WHITE_SPACE (' ') 15712-15713
IDENT ('head') 15713-15717
RPAREN (')') 15717-15718
RPAREN (')') 15718-15719
WHITE_SPACE (' ') 15719-15720
IDENT ('ass') 15720-15723
COMMA (',') 15723-15724
WHITE_SPACE ('\n        ') 15724-15733
IDENT ('b') 15733-15734
WHITE_SPACE (' ') 15734-15735
OPERATOR ('=') 15735-15736
WHITE_SPACE (' ') 15736-15737
IDENT ('head') 15737-15741
WHITE_SPACE (' ') 15741-15742
IDENT ('fs') 15742-15744
COMMA (',') 15744-15745
WHITE_SPACE ('                        ') 15745-15769
LINE_COMMENT ('-- final conclusions of first assumption\n') 15769-15810
WHITE_SPACE ('        ') 15810-15818
IDENT ('os') 15818-15820
WHITE_SPACE (' ') 15820-15821
OPERATOR ('=') 15821-15822
WHITE_SPACE (' ') 15822-15823
LBRACKET ('[') 15823-15824
IDENT ('fs') 15824-15826
RBRACKET (']') 15826-15827
WHITE_SPACE (' ') 15827-15828
OPERATOR (':') 15828-15829
WHITE_SPACE (' ') 15829-15830
IDENT ('map') 15830-15833
WHITE_SPACE (' ') 15833-15834
LPAREN ('(') 15834-15835
IDENT ('take') 15835-15839
WHITE_SPACE (' ') 15839-15840
NUMBER_LITERAL ('1') 15840-15841
WHITE_SPACE (' ') 15841-15842
DOT ('.') 15842-15843
WHITE_SPACE (' ') 15843-15844
IDENT ('filter') 15844-15850
WHITE_SPACE (' ') 15850-15851
LPAREN ('(') 15851-15852
LPAREN ('(') 15852-15853
IDENT ('b') 15853-15854
OPERATOR ('==') 15854-15856
RPAREN (')') 15856-15857
WHITE_SPACE (' ') 15857-15858
DOT ('.') 15858-15859
WHITE_SPACE (' ') 15859-15860
IDENT ('head') 15860-15864
RPAREN (')') 15864-15865
WHITE_SPACE (' ') 15865-15866
DOT ('.') 15866-15867
WHITE_SPACE (' ') 15867-15868
IDENT ('snd') 15868-15871
RPAREN (')') 15871-15872
WHITE_SPACE (' ') 15872-15873
LPAREN ('(') 15873-15874
IDENT ('tail') 15874-15878
WHITE_SPACE (' ') 15878-15879
IDENT ('iss') 15879-15882
RPAREN (')') 15882-15883
COMMA (',') 15883-15884
WHITE_SPACE (' ') 15884-15885
LINE_COMMENT ('-- look for implications with same conclusion\n') 15885-15931
WHITE_SPACE ('        ') 15931-15939
IDENT ('all') 15939-15942
WHITE_SPACE (' ') 15942-15943
LPAREN ('(') 15943-15944
LBRACKET ('[') 15944-15945
RBRACKET (']') 15945-15946
OPERATOR ('!=') 15946-15948
RPAREN (')') 15948-15949
WHITE_SPACE (' ') 15949-15950
IDENT ('os') 15950-15952
RBRACKET (']') 15952-15953
WHITE_SPACE ('\n    ') 15953-15958
KEYWORD ('where') 15958-15963
WHITE_SPACE ('\n        ') 15963-15972
IDENT ('cellas') 15972-15978
WHITE_SPACE ('   ') 15978-15981
OPERATOR ('=') 15981-15982
WHITE_SPACE (' ') 15982-15983
LBRACKET ('[') 15983-15984
WHITE_SPACE (' ') 15984-15985
IDENT ('map') 15985-15988
WHITE_SPACE (' ') 15988-15989
LPAREN ('(') 15989-15990
IDENT ('p') 15990-15991
WHITE_SPACE (' ') 15991-15992
INFIX_IDENT ('`IS`') 15992-15996
RPAREN (')') 15996-15997
WHITE_SPACE (' ') 15997-15998
IDENT ('candidates') 15998-16008
WHITE_SPACE (' ') 16008-16009
OPERATOR ('|') 16009-16010
WHITE_SPACE (' ') 16010-16011
LPAREN ('(') 16011-16012
IDENT ('p') 16012-16013
COMMA (',') 16013-16014
WHITE_SPACE (' ') 16014-16015
IDENT ('candidates') 16015-16025
OPERATOR ('@') 16025-16026
LPAREN ('(') 16026-16027
IDENT ('_') 16027-16028
OPERATOR (':') 16028-16029
IDENT ('_') 16029-16030
OPERATOR (':') 16030-16031
IDENT ('_') 16031-16032
RPAREN (')') 16032-16033
RPAREN (')') 16033-16034
WHITE_SPACE (' ') 16034-16035
OPERATOR ('<-') 16035-16037
WHITE_SPACE (' ') 16037-16038
IDENT ('board') 16038-16043
WHITE_SPACE (' ') 16043-16044
RBRACKET (']') 16044-16045
WHITE_SPACE ('\n        ') 16045-16054
IDENT ('regionas') 16054-16062
WHITE_SPACE (' ') 16062-16063
OPERATOR ('=') 16063-16064
WHITE_SPACE (' ') 16064-16065
LBRACKET ('[') 16065-16066
WHITE_SPACE (' ') 16066-16067
IDENT ('map') 16067-16070
WHITE_SPACE (' ') 16070-16071
LPAREN ('(') 16071-16072
INFIX_IDENT ('`IS`') 16072-16076
WHITE_SPACE (' ') 16076-16077
IDENT ('e') 16077-16078
RPAREN (')') 16078-16079
WHITE_SPACE (' ') 16079-16080
IDENT ('ps') 16080-16082
WHITE_SPACE (' ') 16082-16083
OPERATOR ('|') 16083-16084
WHITE_SPACE ('\n            ') 16084-16097
IDENT ('region') 16097-16103
WHITE_SPACE (' ') 16103-16104
OPERATOR ('<-') 16104-16106
WHITE_SPACE (' ') 16106-16107
IDENT ('map') 16107-16110
WHITE_SPACE (' ') 16110-16111
LPAREN ('(') 16111-16112
IDENT ('map') 16112-16115
WHITE_SPACE (' ') 16115-16116
LPAREN ('(') 16116-16117
IDENT ('getf') 16117-16121
WHITE_SPACE (' ') 16121-16122
IDENT ('board') 16122-16127
RPAREN (')') 16127-16128
RPAREN (')') 16128-16129
WHITE_SPACE (' ') 16129-16130
LPAREN ('(') 16130-16131
IDENT ('allrows') 16131-16138
WHITE_SPACE (' ') 16138-16139
OPERATOR ('++') 16139-16141
WHITE_SPACE (' ') 16141-16142
IDENT ('allcols') 16142-16149
WHITE_SPACE (' ') 16149-16150
OPERATOR ('++') 16150-16152
WHITE_SPACE (' ') 16152-16153
IDENT ('allboxs') 16153-16160
RPAREN (')') 16160-16161
COMMA (',') 16161-16162
WHITE_SPACE ('\n            ') 16162-16175
IDENT ('e') 16175-16176
WHITE_SPACE (' ') 16176-16177
OPERATOR ('<-') 16177-16179
WHITE_SPACE (' ') 16179-16180
IDENT ('elements') 16180-16188
COMMA (',') 16188-16189
WHITE_SPACE ('\n            ') 16189-16202
IDENT ('ps') 16202-16204
WHITE_SPACE (' ') 16204-16205
OPERATOR ('=') 16205-16206
WHITE_SPACE (' ') 16206-16207
IDENT ('map') 16207-16210
WHITE_SPACE (' ') 16210-16211
IDENT ('fst') 16211-16214
WHITE_SPACE (' ') 16214-16215
LPAREN ('(') 16215-16216
IDENT ('filter') 16216-16222
WHITE_SPACE (' ') 16222-16223
LPAREN ('(') 16223-16224
LPAREN ('(') 16224-16225
IDENT ('e') 16225-16226
WHITE_SPACE (' ') 16226-16227
INFIX_IDENT ('`elem`') 16227-16233
RPAREN (')') 16233-16234
WHITE_SPACE (' ') 16234-16235
DOT ('.') 16235-16236
WHITE_SPACE (' ') 16236-16237
IDENT ('snd') 16237-16240
RPAREN (')') 16240-16241
WHITE_SPACE (' ') 16241-16242
IDENT ('region') 16242-16248
RPAREN (')') 16248-16249
COMMA (',') 16249-16250
WHITE_SPACE ('\n            ') 16250-16263
IDENT ('length') 16263-16269
WHITE_SPACE (' ') 16269-16270
IDENT ('ps') 16270-16272
WHITE_SPACE (' ') 16272-16273
OPERATOR ('>') 16273-16274
WHITE_SPACE (' ') 16274-16275
NUMBER_LITERAL ('1') 16275-16276
WHITE_SPACE (' ') 16276-16277
RBRACKET (']') 16277-16278
WHITE_SPACE ('\n        ') 16278-16287
IDENT ('solution') 16287-16295
WHITE_SPACE (' ') 16295-16296
IDENT ('b') 16296-16297
WHITE_SPACE (' ') 16297-16298
IDENT ('as') 16298-16300
WHITE_SPACE (' ') 16300-16301
IDENT ('oss') 16301-16304
WHITE_SPACE (' ') 16304-16305
OPERATOR ('=') 16305-16306
WHITE_SPACE (' ') 16306-16307
IDENT ('turnoff') 16307-16314
WHITE_SPACE (' ') 16314-16315
LPAREN ('(') 16315-16316
IDENT ('aPos') 16316-16320
WHITE_SPACE (' ') 16320-16321
IDENT ('b') 16321-16322
RPAREN (')') 16322-16323
WHITE_SPACE (' ') 16323-16324
LPAREN ('(') 16324-16325
IDENT ('toClear') 16325-16332
WHITE_SPACE (' ') 16332-16333
IDENT ('board') 16333-16338
WHITE_SPACE (' ') 16338-16339
KEYWORD ('true') 16339-16343
WHITE_SPACE (' ') 16343-16344
IDENT ('b') 16344-16345
RPAREN (')') 16345-16346
WHITE_SPACE (' ') 16346-16347
IDENT ('reason') 16347-16353
WHITE_SPACE (' ') 16353-16354
KEYWORD ('where') 16354-16359
WHITE_SPACE ('\n            ') 16359-16372
IDENT ('reason') 16372-16378
WHITE_SPACE (' ') 16378-16379
OPERATOR ('=') 16379-16380
WHITE_SPACE (' ') 16380-16381
STRING_LITERAL ('"all of the assumptions "') 16381-16406
WHITE_SPACE (' ') 16406-16407
OPERATOR ('++') 16407-16409
WHITE_SPACE (' ') 16409-16410
IDENT ('joined') 16410-16416
WHITE_SPACE (' ') 16416-16417
STRING_LITERAL ('", "') 16417-16421
WHITE_SPACE (' ') 16421-16422
LPAREN ('(') 16422-16423
IDENT ('map') 16423-16426
WHITE_SPACE (' ') 16426-16427
IDENT ('show') 16427-16431
WHITE_SPACE (' ') 16431-16432
IDENT ('as') 16432-16434
RPAREN (')') 16434-16435
WHITE_SPACE (' ') 16435-16436
OPERATOR ('++') 16436-16438
WHITE_SPACE (' ') 16438-16439
STRING_LITERAL ('" imply "') 16439-16448
WHITE_SPACE (' ') 16448-16449
OPERATOR ('++') 16449-16451
WHITE_SPACE (' ') 16451-16452
IDENT ('show') 16452-16456
WHITE_SPACE (' ') 16456-16457
IDENT ('b') 16457-16458
WHITE_SPACE (' ') 16458-16459
OPERATOR ('++') 16459-16461
WHITE_SPACE (' ') 16461-16462
STRING_LITERAL ('"\n\t"') 16462-16468
WHITE_SPACE ('\n                ') 16468-16485
OPERATOR ('++') 16485-16487
WHITE_SPACE (' ') 16487-16488
IDENT ('joined') 16488-16494
WHITE_SPACE (' ') 16494-16495
STRING_LITERAL ('"\n\t"') 16495-16501
WHITE_SPACE (' ') 16501-16502
LPAREN ('(') 16502-16503
IDENT ('map') 16503-16506
WHITE_SPACE (' ') 16506-16507
LPAREN ('(') 16507-16508
IDENT ('showcs') 16508-16514
WHITE_SPACE (' ') 16514-16515
DOT ('.') 16515-16516
WHITE_SPACE (' ') 16516-16517
IDENT ('reverse') 16517-16524
RPAREN (')') 16524-16525
WHITE_SPACE (' ') 16525-16526
IDENT ('oss') 16526-16529
RPAREN (')') 16529-16530
WHITE_SPACE (' ') 16530-16531
OPERATOR ('++') 16531-16533
WHITE_SPACE (' ') 16533-16534
STRING_LITERAL ('"\n\t"') 16534-16540
WHITE_SPACE ('\n                ') 16540-16557
OPERATOR ('++') 16557-16559
WHITE_SPACE (' ') 16559-16560
STRING_LITERAL ('"One of them must be true, so "') 16560-16591
WHITE_SPACE (' ') 16591-16592
OPERATOR ('++') 16592-16594
WHITE_SPACE (' ') 16594-16595
IDENT ('show') 16595-16599
WHITE_SPACE (' ') 16599-16600
IDENT ('b') 16600-16601
WHITE_SPACE (' ') 16601-16602
OPERATOR ('++') 16602-16604
WHITE_SPACE (' ') 16604-16605
STRING_LITERAL ('" must be true."') 16605-16621
WHITE_SPACE ('\n\n\n') 16621-16624
BLOCK_COMMENT ('{-\n    For some functions, we need a data structure like\n        [ (Assumption, [[Assumption]]) ]\n    i.e. a list of possible assumptions including all implied assumptions.\n    The implied assumptions shall at best be stored in reverse order for easier selection of:\n    - self-contradicting assumptions,\n    - everything that follows from a given assumption (map (map head) [[a]])\n    -...\n-}') 16624-17017
WHITE_SPACE ('\n') 17017-17018
DOC_COMMENT ('--- List of all assumptions for a given board (Brett)\n') 17018-17072
IDENT ('assumptions') 17072-17083
WHITE_SPACE (' ') 17083-17084
OPERATOR ('::') 17084-17086
WHITE_SPACE (' ') 17086-17087
IDENT ('Brett') 17087-17092
WHITE_SPACE (' ') 17092-17093
OPERATOR ('->') 17093-17095
WHITE_SPACE (' ') 17095-17096
LBRACKET ('[') 17096-17097
IDENT ('Assumption') 17097-17107
RBRACKET (']') 17107-17108
WHITE_SPACE ('\n') 17108-17109
IDENT ('assumptions') 17109-17120
WHITE_SPACE (' ') 17120-17121
IDENT ('board') 17121-17126
WHITE_SPACE (' ') 17126-17127
OPERATOR ('=') 17127-17128
WHITE_SPACE (' ') 17128-17129
LBRACKET ('[') 17129-17130
WHITE_SPACE (' ') 17130-17131
IDENT ('a') 17131-17132
WHITE_SPACE (' ') 17132-17133
OPERATOR ('|') 17133-17134
WHITE_SPACE ('\n                ') 17134-17151
LPAREN ('(') 17151-17152
IDENT ('p') 17152-17153
COMMA (',') 17153-17154
WHITE_SPACE (' ') 17154-17155
IDENT ('cs') 17155-17157
RPAREN (')') 17157-17158
WHITE_SPACE (' ') 17158-17159
OPERATOR ('<-') 17159-17161
WHITE_SPACE (' ') 17161-17162
IDENT ('board') 17162-17167
COMMA (',') 17167-17168
WHITE_SPACE ('\n                ') 17168-17185
OPERATOR ('!') 17185-17186
LPAREN ('(') 17186-17187
IDENT ('single') 17187-17193
WHITE_SPACE (' ') 17193-17194
IDENT ('cs') 17194-17196
RPAREN (')') 17196-17197
COMMA (',') 17197-17198
WHITE_SPACE ('\n                ') 17198-17215
IDENT ('a') 17215-17216
WHITE_SPACE (' ') 17216-17217
OPERATOR ('<-') 17217-17219
WHITE_SPACE (' ') 17219-17220
IDENT ('map') 17220-17223
WHITE_SPACE (' ') 17223-17224
LPAREN ('(') 17224-17225
IDENT ('ISNOT') 17225-17230
WHITE_SPACE (' ') 17230-17231
IDENT ('p') 17231-17232
RPAREN (')') 17232-17233
WHITE_SPACE (' ') 17233-17234
IDENT ('cs') 17234-17236
WHITE_SPACE (' ') 17236-17237
OPERATOR ('++') 17237-17239
WHITE_SPACE (' ') 17239-17240
IDENT ('map') 17240-17243
WHITE_SPACE (' ') 17243-17244
LPAREN ('(') 17244-17245
IDENT ('IS') 17245-17247
WHITE_SPACE (' ') 17247-17248
IDENT ('p') 17248-17249
RPAREN (')') 17249-17250
WHITE_SPACE (' ') 17250-17251
IDENT ('cs') 17251-17253
WHITE_SPACE (' ') 17253-17254
RBRACKET (']') 17254-17255
WHITE_SPACE ('\n\n') 17255-17257
IDENT ('consequences') 17257-17269
WHITE_SPACE (' ') 17269-17270
OPERATOR ('::') 17270-17272
WHITE_SPACE (' ') 17272-17273
IDENT ('Brett') 17273-17278
WHITE_SPACE (' ') 17278-17279
OPERATOR ('->') 17279-17281
WHITE_SPACE (' ') 17281-17282
LBRACKET ('[') 17282-17283
IDENT ('Assumption') 17283-17293
RBRACKET (']') 17293-17294
WHITE_SPACE (' ') 17294-17295
OPERATOR ('->') 17295-17297
WHITE_SPACE (' ') 17297-17298
LBRACKET ('[') 17298-17299
LBRACKET ('[') 17299-17300
IDENT ('Assumption') 17300-17310
RBRACKET (']') 17310-17311
RBRACKET (']') 17311-17312
WHITE_SPACE ('\n') 17312-17313
IDENT ('consequences') 17313-17325
WHITE_SPACE (' ') 17325-17326
IDENT ('board') 17326-17331
WHITE_SPACE (' ') 17331-17332
IDENT ('as') 17332-17334
WHITE_SPACE (' ') 17334-17335
OPERATOR ('=') 17335-17336
WHITE_SPACE (' ') 17336-17337
IDENT ('map') 17337-17340
WHITE_SPACE (' ') 17340-17341
LPAREN ('(') 17341-17342
IDENT ('conseq') 17342-17348
WHITE_SPACE (' ') 17348-17349
IDENT ('board') 17349-17354
RPAREN (')') 17354-17355
WHITE_SPACE (' ') 17355-17356
IDENT ('as') 17356-17358
WHITE_SPACE ('\n\n') 17358-17360
IDENT ('acstree') 17360-17367
WHITE_SPACE (' ') 17367-17368
OPERATOR ('::') 17368-17370
WHITE_SPACE (' ') 17370-17371
IDENT ('Brett') 17371-17376
WHITE_SPACE (' ') 17376-17377
OPERATOR ('->') 17377-17379
WHITE_SPACE (' ') 17379-17380
IDENT ('TreeMap') 17380-17387
WHITE_SPACE (' ') 17387-17388
IDENT ('Assumption') 17388-17398
WHITE_SPACE (' ') 17398-17399
LBRACKET ('[') 17399-17400
IDENT ('Assumption') 17400-17410
RBRACKET (']') 17410-17411
WHITE_SPACE ('\n') 17411-17412
IDENT ('acstree') 17412-17419
WHITE_SPACE (' ') 17419-17420
IDENT ('board') 17420-17425
WHITE_SPACE (' ') 17425-17426
OPERATOR ('=') 17426-17427
WHITE_SPACE (' ') 17427-17428
IDENT ('TM') 17428-17430
DOT ('.') 17430-17431
IDENT ('fromList') 17431-17439
WHITE_SPACE (' ') 17439-17440
LPAREN ('(') 17440-17441
IDENT ('zip') 17441-17444
WHITE_SPACE (' ') 17444-17445
IDENT ('as') 17445-17447
WHITE_SPACE (' ') 17447-17448
IDENT ('cs') 17448-17450
RPAREN (')') 17450-17451
WHITE_SPACE ('\n    ') 17451-17456
KEYWORD ('where') 17456-17461
WHITE_SPACE ('\n        ') 17461-17470
IDENT ('as') 17470-17472
WHITE_SPACE (' ') 17472-17473
OPERATOR ('=') 17473-17474
WHITE_SPACE (' ') 17474-17475
IDENT ('assumptions') 17475-17486
WHITE_SPACE ('  ') 17486-17488
IDENT ('board') 17488-17493
WHITE_SPACE ('\n        ') 17493-17502
IDENT ('cs') 17502-17504
WHITE_SPACE (' ') 17504-17505
OPERATOR ('=') 17505-17506
WHITE_SPACE (' ') 17506-17507
IDENT ('consequences') 17507-17519
WHITE_SPACE (' ') 17519-17520
IDENT ('board') 17520-17525
WHITE_SPACE (' ') 17525-17526
IDENT ('as') 17526-17528
WHITE_SPACE ('\n\n') 17528-17530
LINE_COMMENT ('-- bypass maybe on tree lookup\n') 17530-17561
IDENT ('find') 17561-17565
WHITE_SPACE (' ') 17565-17566
OPERATOR ('::') 17566-17568
WHITE_SPACE (' ') 17568-17569
IDENT ('TreeMap') 17569-17576
WHITE_SPACE (' ') 17576-17577
IDENT ('Assumption') 17577-17587
WHITE_SPACE (' ') 17587-17588
LBRACKET ('[') 17588-17589
IDENT ('Assumption') 17589-17599
RBRACKET (']') 17599-17600
WHITE_SPACE (' ') 17600-17601
OPERATOR ('->') 17601-17603
WHITE_SPACE (' ') 17603-17604
IDENT ('Assumption') 17604-17614
WHITE_SPACE (' ') 17614-17615
OPERATOR ('->') 17615-17617
WHITE_SPACE (' ') 17617-17618
LBRACKET ('[') 17618-17619
IDENT ('Assumption') 17619-17629
RBRACKET (']') 17629-17630
WHITE_SPACE ('\n') 17630-17631
IDENT ('find') 17631-17635
WHITE_SPACE (' ') 17635-17636
IDENT ('t') 17636-17637
WHITE_SPACE (' ') 17637-17638
IDENT ('a') 17638-17639
WHITE_SPACE ('\n    ') 17639-17644
OPERATOR ('|') 17644-17645
WHITE_SPACE (' ') 17645-17646
IDENT ('Just') 17646-17650
WHITE_SPACE (' ') 17650-17651
IDENT ('cs') 17651-17653
WHITE_SPACE (' ') 17653-17654
OPERATOR ('<-') 17654-17656
WHITE_SPACE (' ') 17656-17657
IDENT ('t') 17657-17658
DOT ('.') 17658-17659
IDENT ('lookup') 17659-17665
WHITE_SPACE (' ') 17665-17666
IDENT ('a') 17666-17667
WHITE_SPACE (' ') 17667-17668
OPERATOR ('=') 17668-17669
WHITE_SPACE (' ') 17669-17670
IDENT ('cs') 17670-17672
WHITE_SPACE ('\n    ') 17672-17677
OPERATOR ('|') 17677-17678
WHITE_SPACE (' ') 17678-17679
IDENT ('otherwise') 17679-17688
WHITE_SPACE (' ') 17688-17689
OPERATOR ('=') 17689-17690
WHITE_SPACE (' ') 17690-17691
IDENT ('error') 17691-17696
WHITE_SPACE (' ') 17696-17697
LPAREN ('(') 17697-17698
STRING_LITERAL ('"no consequences for "') 17698-17720
WHITE_SPACE (' ') 17720-17721
OPERATOR ('++') 17721-17723
WHITE_SPACE (' ') 17723-17724
IDENT ('show') 17724-17728
WHITE_SPACE (' ') 17728-17729
IDENT ('a') 17729-17730
RPAREN (')') 17730-17731
WHITE_SPACE ('\n\n') 17731-17733
LINE_COMMENT ('-- for performance reasons, we confine ourselves to implication chains of length 20 per assumption\n') 17733-17832
IDENT ('mkPaths') 17832-17839
WHITE_SPACE (' ') 17839-17840
OPERATOR ('::') 17840-17842
WHITE_SPACE (' ') 17842-17843
IDENT ('TreeMap') 17843-17850
WHITE_SPACE (' ') 17850-17851
IDENT ('Assumption') 17851-17861
WHITE_SPACE (' ') 17861-17862
LBRACKET ('[') 17862-17863
IDENT ('Assumption') 17863-17873
RBRACKET (']') 17873-17874
WHITE_SPACE (' ') 17874-17875
OPERATOR ('->') 17875-17877
WHITE_SPACE (' ') 17877-17878
LBRACKET ('[') 17878-17879
WHITE_SPACE (' ') 17879-17880
LPAREN ('(') 17880-17881
IDENT ('Assumption') 17881-17891
COMMA (',') 17891-17892
WHITE_SPACE (' ') 17892-17893
LBRACKET ('[') 17893-17894
LBRACKET ('[') 17894-17895
IDENT ('Assumption') 17895-17905
RBRACKET (']') 17905-17906
RBRACKET (']') 17906-17907
RPAREN (')') 17907-17908
WHITE_SPACE (' ') 17908-17909
RBRACKET (']') 17909-17910
WHITE_SPACE ('\n') 17910-17911
IDENT ('mkPaths') 17911-17918
WHITE_SPACE (' ') 17918-17919
IDENT ('acst') 17919-17923
WHITE_SPACE (' ') 17923-17924
OPERATOR ('=') 17924-17925
WHITE_SPACE (' ') 17925-17926
IDENT ('map') 17926-17929
WHITE_SPACE (' ') 17929-17930
IDENT ('impl') 17930-17934
WHITE_SPACE ('  ') 17934-17936
LPAREN ('(') 17936-17937
IDENT ('keys') 17937-17941
WHITE_SPACE (' ') 17941-17942
IDENT ('acst') 17942-17946
RPAREN (')') 17946-17947
WHITE_SPACE ('   ') 17947-17950
LINE_COMMENT ('-- {[a1], [a2], [a3] ]\n') 17950-17973
WHITE_SPACE ('    ') 17973-17977
KEYWORD ('where') 17977-17982
WHITE_SPACE ('\n        ') 17982-17991
LINE_COMMENT ('-- [Assumption] -> [(a, [chains, ordered by length]\n') 17991-18043
WHITE_SPACE ('        ') 18043-18051
IDENT ('impl') 18051-18055
WHITE_SPACE (' ') 18055-18056
IDENT ('a') 18056-18057
WHITE_SPACE (' ') 18057-18058
OPERATOR ('=') 18058-18059
WHITE_SPACE (' ') 18059-18060
LPAREN ('(') 18060-18061
IDENT ('a') 18061-18062
COMMA (',') 18062-18063
WHITE_SPACE (' ') 18063-18064
IDENT ('impls') 18064-18069
WHITE_SPACE (' ') 18069-18070
LBRACKET ('[') 18070-18071
LBRACKET ('[') 18071-18072
IDENT ('a') 18072-18073
RBRACKET (']') 18073-18074
RBRACKET (']') 18074-18075
RPAREN (')') 18075-18076
WHITE_SPACE ('\n        ') 18076-18085
IDENT ('impls') 18085-18090
WHITE_SPACE (' ') 18090-18091
IDENT ('ns') 18091-18093
WHITE_SPACE (' ') 18093-18094
OPERATOR ('=') 18094-18095
WHITE_SPACE (' ') 18095-18096
LPAREN ('(') 18096-18097
IDENT ('take') 18097-18101
WHITE_SPACE (' ') 18101-18102
NUMBER_LITERAL ('1000') 18102-18106
WHITE_SPACE (' ') 18106-18107
OPERATOR ('•') 18107-18108
WHITE_SPACE (' ') 18108-18109
IDENT ('concat') 18109-18115
WHITE_SPACE (' ') 18115-18116
OPERATOR ('•') 18116-18117
WHITE_SPACE (' ') 18117-18118
IDENT ('takeUntil') 18118-18127
WHITE_SPACE (' ') 18127-18128
IDENT ('null') 18128-18132
WHITE_SPACE (' ') 18132-18133
OPERATOR ('•') 18133-18134
WHITE_SPACE (' ') 18134-18135
IDENT ('iterate') 18135-18142
WHITE_SPACE (' ') 18142-18143
IDENT ('expandchain') 18143-18154
RPAREN (')') 18154-18155
WHITE_SPACE (' ') 18155-18156
IDENT ('ns') 18156-18158
WHITE_SPACE ('\n        ') 18158-18167
LINE_COMMENT ('-- expandchain :: [[Assumption]] -> [[Assumption]]\n') 18167-18218
WHITE_SPACE ('        ') 18218-18226
IDENT ('expandchain') 18226-18237
WHITE_SPACE (' ') 18237-18238
IDENT ('css') 18238-18241
WHITE_SPACE (' ') 18241-18242
OPERATOR ('=') 18242-18243
WHITE_SPACE (' ') 18243-18244
LBRACKET ('[') 18244-18245
WHITE_SPACE (' ') 18245-18246
LPAREN ('(') 18246-18247
IDENT ('n') 18247-18248
OPERATOR (':') 18248-18249
IDENT ('a') 18249-18250
OPERATOR (':') 18250-18251
IDENT ('as') 18251-18253
RPAREN (')') 18253-18254
WHITE_SPACE (' ') 18254-18255
OPERATOR ('|') 18255-18256
WHITE_SPACE ('\n            ') 18256-18269
LPAREN ('(') 18269-18270
IDENT ('a') 18270-18271
WHITE_SPACE (' ') 18271-18272
OPERATOR (':') 18272-18273
WHITE_SPACE (' ') 18273-18274
IDENT ('as') 18274-18276
RPAREN (')') 18276-18277
WHITE_SPACE (' ') 18277-18278
OPERATOR ('<-') 18278-18280
WHITE_SPACE (' ') 18280-18281
IDENT ('css') 18281-18284
COMMA (',') 18284-18285
WHITE_SPACE ('               ') 18285-18300
LINE_COMMENT ('-- list of assumptions\n') 18300-18323
WHITE_SPACE ('            ') 18323-18335
IDENT ('n') 18335-18336
WHITE_SPACE (' ') 18336-18337
OPERATOR ('<-') 18337-18339
WHITE_SPACE (' ') 18339-18340
IDENT ('find') 18340-18344
WHITE_SPACE (' ') 18344-18345
IDENT ('acst') 18345-18349
WHITE_SPACE (' ') 18349-18350
IDENT ('a') 18350-18351
COMMA (',') 18351-18352
WHITE_SPACE ('              ') 18352-18366
LINE_COMMENT ('-- consequences of a\n') 18366-18387
WHITE_SPACE ('            ') 18387-18399
IDENT ('n') 18399-18400
WHITE_SPACE (' ') 18400-18401
INFIX_IDENT ('`notElem`') 18401-18410
WHITE_SPACE (' ') 18410-18411
IDENT ('as') 18411-18413
WHITE_SPACE ('                 ') 18413-18430
LINE_COMMENT ('-- avoid loops\n') 18430-18445
WHITE_SPACE ('          ') 18445-18455
RBRACKET (']') 18455-18456
WHITE_SPACE ('\n        ') 18456-18465
LINE_COMMENT ('-- uni (a:as) = a : uni (filter ((head a !=) • head) as)\n') 18465-18522
WHITE_SPACE ('        ') 18522-18530
LINE_COMMENT ('-- uni [] = empty\n') 18530-18548
WHITE_SPACE ('        ') 18548-18556
LINE_COMMENT ('-- empty = []\n') 18556-18570
WHITE_SPACE ('\n\n') 18570-18572
LINE_COMMENT ('-- ------------------ SOLVE A SUDOKU --------------------------\n') 18572-18636
LINE_COMMENT ('-- Apply all available strategies until nothing changes anymore\n') 18636-18700
LINE_COMMENT ('-- Strategy functions are supposed to return a list of\n') 18700-18755
LINE_COMMENT ('-- functions, which, when applied to a board, give a changed board.\n') 18755-18823
LINE_COMMENT ('-- When a strategy does not find anything to alter,\n') 18823-18875
LINE_COMMENT ('-- it returns [], and the next strategy can be tried.\n') 18875-18929
IDENT ('solve') 18929-18934
WHITE_SPACE (' ') 18934-18935
IDENT ('b') 18935-18936
WHITE_SPACE ('\n    ') 18936-18941
OPERATOR ('|') 18941-18942
WHITE_SPACE (' ') 18942-18943
IDENT ('all') 18943-18946
WHITE_SPACE (' ') 18946-18947
LPAREN ('(') 18947-18948
IDENT ('single') 18948-18954
WHITE_SPACE (' ') 18954-18955
DOT ('.') 18955-18956
WHITE_SPACE (' ') 18956-18957
IDENT ('snd') 18957-18960
RPAREN (')') 18960-18961
WHITE_SPACE (' ') 18961-18962
IDENT ('b') 18962-18963
WHITE_SPACE ('       ') 18963-18970
OPERATOR ('=') 18970-18971
WHITE_SPACE (' ') 18971-18972
IDENT ('result') 18972-18978
WHITE_SPACE (' ') 18978-18979
STRING_LITERAL ('"Solved"') 18979-18987
WHITE_SPACE (' ') 18987-18988
IDENT ('b') 18988-18989
WHITE_SPACE ('\n    ') 18989-18994
OPERATOR ('|') 18994-18995
WHITE_SPACE (' ') 18995-18996
IDENT ('any') 18996-18999
WHITE_SPACE (' ') 18999-19000
LPAREN ('(') 19000-19001
LPAREN ('(') 19001-19002
LBRACKET ('[') 19002-19003
RBRACKET (']') 19003-19004
OPERATOR ('==') 19004-19006
RPAREN (')') 19006-19007
WHITE_SPACE (' ') 19007-19008
DOT ('.') 19008-19009
WHITE_SPACE (' ') 19009-19010
IDENT ('snd') 19010-19013
RPAREN (')') 19013-19014
WHITE_SPACE (' ') 19014-19015
IDENT ('b') 19015-19016
WHITE_SPACE ('       ') 19016-19023
OPERATOR ('=') 19023-19024
WHITE_SPACE (' ') 19024-19025
IDENT ('result') 19025-19031
WHITE_SPACE (' ') 19031-19032
STRING_LITERAL ('"not solvable"') 19032-19046
WHITE_SPACE (' ') 19046-19047
IDENT ('b') 19047-19048
WHITE_SPACE ('\n    ') 19048-19053
OPERATOR ('|') 19053-19054
WHITE_SPACE (' ') 19054-19055
IDENT ('res') 19055-19058
OPERATOR ('@') 19058-19059
LPAREN ('(') 19059-19060
IDENT ('_') 19060-19061
OPERATOR (':') 19061-19062
IDENT ('_') 19062-19063
RPAREN (')') 19063-19064
WHITE_SPACE (' ') 19064-19065
OPERATOR ('<-') 19065-19067
WHITE_SPACE (' ') 19067-19068
IDENT ('reduce') 19068-19074
WHITE_SPACE (' ') 19074-19075
IDENT ('b') 19075-19076
WHITE_SPACE ('       ') 19076-19083
OPERATOR ('=') 19083-19084
WHITE_SPACE (' ') 19084-19085
IDENT ('apply') 19085-19090
WHITE_SPACE (' ') 19090-19091
IDENT ('b') 19091-19092
WHITE_SPACE (' ') 19092-19093
IDENT ('res') 19093-19096
WHITE_SPACE (' ') 19096-19097
OPERATOR ('>>=') 19097-19100
IDENT ('solve') 19100-19105
WHITE_SPACE ('       ') 19105-19112
LINE_COMMENT ('-- compute smallest candidate sets\n') 19112-19147
WHITE_SPACE ('    ') 19147-19151
LINE_COMMENT ('-- comment "candidate sets are up to date" = ()\n') 19151-19199
WHITE_SPACE ('    ') 19199-19203
OPERATOR ('|') 19203-19204
WHITE_SPACE (' ') 19204-19205
IDENT ('res') 19205-19208
OPERATOR ('@') 19208-19209
LPAREN ('(') 19209-19210
IDENT ('_') 19210-19211
OPERATOR (':') 19211-19212
IDENT ('_') 19212-19213
RPAREN (')') 19213-19214
WHITE_SPACE (' ') 19214-19215
OPERATOR ('<-') 19215-19217
WHITE_SPACE (' ') 19217-19218
IDENT ('hiddenSingle') 19218-19230
WHITE_SPACE (' ') 19230-19231
IDENT ('b') 19231-19232
WHITE_SPACE ('  ') 19232-19234
OPERATOR ('=') 19234-19235
WHITE_SPACE (' ') 19235-19236
IDENT ('apply') 19236-19241
WHITE_SPACE (' ') 19241-19242
IDENT ('b') 19242-19243
WHITE_SPACE (' ') 19243-19244
IDENT ('res') 19244-19247
WHITE_SPACE (' ') 19247-19248
OPERATOR ('>>=') 19248-19251
WHITE_SPACE (' ') 19251-19252
IDENT ('solve') 19252-19257
WHITE_SPACE ('     ') 19257-19262
LINE_COMMENT ('-- find HIDDEN SINGLES\n') 19262-19285
WHITE_SPACE ('    ') 19285-19289
LINE_COMMENT ('-- comment "no more hidden singles" = ()\n') 19289-19330
WHITE_SPACE ('    ') 19330-19334
OPERATOR ('|') 19334-19335
WHITE_SPACE (' ') 19335-19336
IDENT ('res') 19336-19339
OPERATOR ('@') 19339-19340
LPAREN ('(') 19340-19341
IDENT ('_') 19341-19342
OPERATOR (':') 19342-19343
IDENT ('_') 19343-19344
RPAREN (')') 19344-19345
WHITE_SPACE (' ') 19345-19346
OPERATOR ('<-') 19346-19348
WHITE_SPACE (' ') 19348-19349
IDENT ('intersections') 19349-19362
WHITE_SPACE (' ') 19362-19363
IDENT ('b') 19363-19364
WHITE_SPACE (' ') 19364-19365
OPERATOR ('=') 19365-19366
WHITE_SPACE (' ') 19366-19367
IDENT ('apply') 19367-19372
WHITE_SPACE (' ') 19372-19373
IDENT ('b') 19373-19374
WHITE_SPACE (' ') 19374-19375
IDENT ('res') 19375-19378
WHITE_SPACE (' ') 19378-19379
OPERATOR ('>>=') 19379-19382
WHITE_SPACE (' ') 19382-19383
IDENT ('solve') 19383-19388
WHITE_SPACE ('     ') 19388-19393
LINE_COMMENT ('-- find locked candidates\n') 19393-19419
WHITE_SPACE ('    ') 19419-19423
LINE_COMMENT ('-- comment "no more intersections" = ()\n') 19423-19463
WHITE_SPACE ('    ') 19463-19467
OPERATOR ('|') 19467-19468
WHITE_SPACE (' ') 19468-19469
IDENT ('res') 19469-19472
OPERATOR ('@') 19472-19473
LPAREN ('(') 19473-19474
IDENT ('_') 19474-19475
OPERATOR (':') 19475-19476
IDENT ('_') 19476-19477
RPAREN (')') 19477-19478
WHITE_SPACE (' ') 19478-19479
OPERATOR ('<-') 19479-19481
WHITE_SPACE (' ') 19481-19482
IDENT ('nakedPair') 19482-19491
WHITE_SPACE (' ') 19491-19492
NUMBER_LITERAL ('2') 19492-19493
WHITE_SPACE (' ') 19493-19494
IDENT ('b') 19494-19495
WHITE_SPACE ('     ') 19495-19500
OPERATOR ('=') 19500-19501
WHITE_SPACE (' ') 19501-19502
IDENT ('apply') 19502-19507
WHITE_SPACE (' ') 19507-19508
IDENT ('b') 19508-19509
WHITE_SPACE (' ') 19509-19510
IDENT ('res') 19510-19513
WHITE_SPACE (' ') 19513-19514
OPERATOR ('>>=') 19514-19517
WHITE_SPACE (' ') 19517-19518
IDENT ('solve') 19518-19523
WHITE_SPACE ('     ') 19523-19528
LINE_COMMENT ('-- find NAKED PAIRS, TRIPLES or QUADRUPELS\n') 19528-19571
WHITE_SPACE ('    ') 19571-19575
LINE_COMMENT ('-- comment "no more naked pairs" = ()\n') 19575-19613
WHITE_SPACE ('    ') 19613-19617
OPERATOR ('|') 19617-19618
WHITE_SPACE (' ') 19618-19619
IDENT ('res') 19619-19622
OPERATOR ('@') 19622-19623
LPAREN ('(') 19623-19624
IDENT ('_') 19624-19625
OPERATOR (':') 19625-19626
IDENT ('_') 19626-19627
RPAREN (')') 19627-19628
WHITE_SPACE (' ') 19628-19629
OPERATOR ('<-') 19629-19631
WHITE_SPACE (' ') 19631-19632
IDENT ('hiddenPair') 19632-19642
WHITE_SPACE ('  ') 19642-19644
NUMBER_LITERAL ('2') 19644-19645
WHITE_SPACE (' ') 19645-19646
IDENT ('b') 19646-19647
WHITE_SPACE ('   ') 19647-19650
OPERATOR ('=') 19650-19651
WHITE_SPACE (' ') 19651-19652
IDENT ('apply') 19652-19657
WHITE_SPACE (' ') 19657-19658
IDENT ('b') 19658-19659
WHITE_SPACE (' ') 19659-19660
IDENT ('res') 19660-19663
WHITE_SPACE (' ') 19663-19664
OPERATOR ('>>=') 19664-19667
WHITE_SPACE (' ') 19667-19668
IDENT ('solve') 19668-19673
WHITE_SPACE ('      ') 19673-19679
LINE_COMMENT ('-- find HIDDEN PAIRS, TRIPLES or QUADRUPELS\n') 19679-19723
WHITE_SPACE ('    ') 19723-19727
LINE_COMMENT ('-- comment "no more hidden pairs" = ()\n') 19727-19766
WHITE_SPACE ('    ') 19766-19770
LINE_COMMENT ('-- res@(_:_) <- nakedPair 3 b     = apply b res >>= solve       // find NAKED PAIRS, TRIPLES or QUADRUPELS\n') 19770-19877
WHITE_SPACE ('    ') 19877-19881
LINE_COMMENT ('-- | comment "no more naked triples" = ()\n') 19881-19923
WHITE_SPACE ('    ') 19923-19927
LINE_COMMENT ('-- res@(_:_) <- hiddenPair  3 b    = apply b res >>= solve      // find HIDDEN PAIRS, TRIPLES or QUADRUPELS\n') 19927-20035
WHITE_SPACE ('    ') 20035-20039
LINE_COMMENT ('-- | comment "no more hidden triples" = ()\n') 20039-20082
WHITE_SPACE ('    ') 20082-20086
LINE_COMMENT ('-- res@(_:_) <- nakedPair 4 b     = apply b res >>=solve       // find NAKED PAIRS, TRIPLES or QUADRUPELS\n') 20086-20192
WHITE_SPACE ('    ') 20192-20196
LINE_COMMENT ('-- | comment "no more naked quadruples" = ()\n') 20196-20241
WHITE_SPACE ('    ') 20241-20245
LINE_COMMENT ('-- res@(_:_) <- hiddenPair  4 b    = apply b res >>=solve      // find HIDDEN PAIRS, TRIPLES or QUADRUPELS\n') 20245-20352
WHITE_SPACE ('    ') 20352-20356
LINE_COMMENT ('-- | comment "no more hidden quadruples" = ()\n') 20356-20402
WHITE_SPACE ('    ') 20402-20406
OPERATOR ('|') 20406-20407
WHITE_SPACE (' ') 20407-20408
IDENT ('res') 20408-20411
OPERATOR ('@') 20411-20412
LPAREN ('(') 20412-20413
IDENT ('_') 20413-20414
OPERATOR (':') 20414-20415
IDENT ('_') 20415-20416
RPAREN (')') 20416-20417
WHITE_SPACE (' ') 20417-20418
OPERATOR ('<-') 20418-20420
WHITE_SPACE (' ') 20420-20421
IDENT ('xyWing') 20421-20427
WHITE_SPACE (' ') 20427-20428
IDENT ('b') 20428-20429
WHITE_SPACE ('            ') 20429-20441
OPERATOR ('=') 20441-20442
WHITE_SPACE (' ') 20442-20443
IDENT ('apply') 20443-20448
WHITE_SPACE (' ') 20448-20449
IDENT ('b') 20449-20450
WHITE_SPACE (' ') 20450-20451
IDENT ('res') 20451-20454
WHITE_SPACE (' ') 20454-20455
OPERATOR ('>>=') 20455-20458
IDENT ('solve') 20458-20463
WHITE_SPACE ('      ') 20463-20469
LINE_COMMENT ('-- find XY WINGS\n') 20469-20486
WHITE_SPACE ('    ') 20486-20490
LINE_COMMENT ('-- comment "no more xy wings"       = ()\n') 20490-20531
WHITE_SPACE ('    ') 20531-20535
OPERATOR ('|') 20535-20536
WHITE_SPACE (' ') 20536-20537
IDENT ('res') 20537-20540
OPERATOR ('@') 20540-20541
LPAREN ('(') 20541-20542
IDENT ('_') 20542-20543
OPERATOR (':') 20543-20544
IDENT ('_') 20544-20545
RPAREN (')') 20545-20546
WHITE_SPACE (' ') 20546-20547
OPERATOR ('<-') 20547-20549
WHITE_SPACE (' ') 20549-20550
IDENT ('fish') 20550-20554
WHITE_SPACE (' ') 20554-20555
NUMBER_LITERAL ('2') 20555-20556
WHITE_SPACE (' ') 20556-20557
IDENT ('b') 20557-20558
WHITE_SPACE ('            ') 20558-20570
OPERATOR ('=') 20570-20571
WHITE_SPACE (' ') 20571-20572
IDENT ('apply') 20572-20577
WHITE_SPACE (' ') 20577-20578
IDENT ('b') 20578-20579
WHITE_SPACE (' ') 20579-20580
IDENT ('res') 20580-20583
WHITE_SPACE (' ') 20583-20584
OPERATOR ('>>=') 20584-20587
IDENT ('solve') 20587-20592
WHITE_SPACE ('      ') 20592-20598
LINE_COMMENT ('-- find 2-FISH\n') 20598-20613
WHITE_SPACE ('    ') 20613-20617
LINE_COMMENT ('-- comment "no more x-wings"        = ()\n') 20617-20658
WHITE_SPACE ('    ') 20658-20662
LINE_COMMENT ('-- res@(_:_) <- fish 3 b            = apply b res >>=solve      // find 3-FISH\n') 20662-20741
WHITE_SPACE ('    ') 20741-20745
LINE_COMMENT ('-- | comment "no more swordfish"      = ()\n') 20745-20788
WHITE_SPACE ('    ') 20788-20792
LINE_COMMENT ('-- res@(_:_) <- fish 4 b            = apply b res >>=solve      // find 4-FISH\n') 20792-20871
WHITE_SPACE ('    ') 20871-20875
LINE_COMMENT ('-- | comment "no more jellyfish"      = ()\n') 20875-20918
WHITE_SPACE ('    ') 20918-20922
LINE_COMMENT ('-- | comment pcomment                 = ()\n') 20922-20965
WHITE_SPACE ('    ') 20965-20969
OPERATOR ('|') 20969-20970
WHITE_SPACE (' ') 20970-20971
IDENT ('res') 20971-20974
OPERATOR ('@') 20974-20975
LPAREN ('(') 20975-20976
IDENT ('_') 20976-20977
OPERATOR (':') 20977-20978
IDENT ('_') 20978-20979
RPAREN (')') 20979-20980
WHITE_SPACE (' ') 20980-20981
OPERATOR ('<-') 20981-20983
WHITE_SPACE (' ') 20983-20984
IDENT ('chain') 20984-20989
WHITE_SPACE (' ') 20989-20990
IDENT ('b') 20990-20991
WHITE_SPACE (' ') 20991-20992
IDENT ('paths') 20992-20997
WHITE_SPACE ('             ') 20997-21010
OPERATOR ('=') 21010-21011
WHITE_SPACE (' ') 21011-21012
IDENT ('apply') 21012-21017
WHITE_SPACE (' ') 21017-21018
IDENT ('b') 21018-21019
WHITE_SPACE (' ') 21019-21020
LPAREN ('(') 21020-21021
IDENT ('take') 21021-21025
WHITE_SPACE (' ') 21025-21026
NUMBER_LITERAL ('9') 21026-21027
WHITE_SPACE (' ') 21027-21028
IDENT ('res') 21028-21031
RPAREN (')') 21031-21032
WHITE_SPACE (' ') 21032-21033
OPERATOR ('>>=') 21033-21036
WHITE_SPACE (' ') 21036-21037
IDENT ('solve') 21037-21042
WHITE_SPACE ('  ') 21042-21044
LINE_COMMENT ('-- find forcing chains\n') 21044-21067
WHITE_SPACE ('    ') 21067-21071
OPERATOR ('|') 21071-21072
WHITE_SPACE (' ') 21072-21073
IDENT ('res') 21073-21076
OPERATOR ('@') 21076-21077
LPAREN ('(') 21077-21078
IDENT ('_') 21078-21079
OPERATOR (':') 21079-21080
IDENT ('_') 21080-21081
RPAREN (')') 21081-21082
WHITE_SPACE (' ') 21082-21083
OPERATOR ('<-') 21083-21085
WHITE_SPACE (' ') 21085-21086
IDENT ('cellRegionChain') 21086-21101
WHITE_SPACE (' ') 21101-21102
IDENT ('b') 21102-21103
WHITE_SPACE (' ') 21103-21104
IDENT ('paths') 21104-21109
WHITE_SPACE ('   ') 21109-21112
OPERATOR ('=') 21112-21113
WHITE_SPACE (' ') 21113-21114
IDENT ('apply') 21114-21119
WHITE_SPACE (' ') 21119-21120
IDENT ('b') 21120-21121
WHITE_SPACE (' ') 21121-21122
LPAREN ('(') 21122-21123
IDENT ('take') 21123-21127
WHITE_SPACE (' ') 21127-21128
NUMBER_LITERAL ('9') 21128-21129
WHITE_SPACE (' ') 21129-21130
IDENT ('res') 21130-21133
RPAREN (')') 21133-21134
WHITE_SPACE (' ') 21134-21135
OPERATOR ('>>=') 21135-21138
WHITE_SPACE (' ') 21138-21139
IDENT ('solve') 21139-21144
WHITE_SPACE ('  ') 21144-21146
LINE_COMMENT ('-- find common conclusion for true assumption\n') 21146-21192
WHITE_SPACE ('    ') 21192-21196
OPERATOR ('|') 21196-21197
WHITE_SPACE (' ') 21197-21198
IDENT ('res') 21198-21201
OPERATOR ('@') 21201-21202
LPAREN ('(') 21202-21203
IDENT ('_') 21203-21204
OPERATOR (':') 21204-21205
IDENT ('_') 21205-21206
RPAREN (')') 21206-21207
WHITE_SPACE (' ') 21207-21208
OPERATOR ('<-') 21208-21210
WHITE_SPACE (' ') 21210-21211
IDENT ('chainContra') 21211-21222
WHITE_SPACE (' ') 21222-21223
IDENT ('b') 21223-21224
WHITE_SPACE (' ') 21224-21225
IDENT ('paths') 21225-21230
WHITE_SPACE ('       ') 21230-21237
OPERATOR ('=') 21237-21238
WHITE_SPACE (' ') 21238-21239
IDENT ('apply') 21239-21244
WHITE_SPACE (' ') 21244-21245
IDENT ('b') 21245-21246
WHITE_SPACE (' ') 21246-21247
LPAREN ('(') 21247-21248
IDENT ('take') 21248-21252
WHITE_SPACE (' ') 21252-21253
NUMBER_LITERAL ('9') 21253-21254
WHITE_SPACE (' ') 21254-21255
IDENT ('res') 21255-21258
RPAREN (')') 21258-21259
WHITE_SPACE (' ') 21259-21260
OPERATOR ('>>=') 21260-21263
WHITE_SPACE (' ') 21263-21264
IDENT ('solve') 21264-21269
WHITE_SPACE ('  ') 21269-21271
LINE_COMMENT ('-- find assumptions that allow to infer both a and !a\n') 21271-21325
WHITE_SPACE ('    ') 21325-21329
LINE_COMMENT ('-- comment "consistent conclusions only"       = ()\n') 21329-21381
WHITE_SPACE ('\n    ') 21381-21386
OPERATOR ('|') 21386-21387
WHITE_SPACE (' ') 21387-21388
IDENT ('otherwise') 21388-21397
WHITE_SPACE (' ') 21397-21398
OPERATOR ('=') 21398-21399
WHITE_SPACE (' ') 21399-21400
IDENT ('result') 21400-21406
WHITE_SPACE (' ') 21406-21407
STRING_LITERAL ('"ambiguous"') 21407-21418
WHITE_SPACE (' ') 21418-21419
IDENT ('b') 21419-21420
WHITE_SPACE ('\n    ') 21420-21425
KEYWORD ('where') 21425-21430
WHITE_SPACE ('\n        ') 21430-21439
IDENT ('apply') 21439-21444
WHITE_SPACE (' ') 21444-21445
IDENT ('brd') 21445-21448
WHITE_SPACE (' ') 21448-21449
IDENT ('fs') 21449-21451
WHITE_SPACE (' ') 21451-21452
OPERATOR ('=') 21452-21453
WHITE_SPACE (' ') 21453-21454
IDENT ('foldM') 21454-21459
WHITE_SPACE (' ') 21459-21460
LPAREN ('(') 21460-21461
OPERATOR ('\') 21461-21462
IDENT ('b') 21462-21463
OPERATOR ('\') 21463-21464
IDENT ('f') 21464-21465
WHITE_SPACE (' ') 21465-21466
OPERATOR ('->') 21466-21468
WHITE_SPACE (' ') 21468-21469
IDENT ('f') 21469-21470
WHITE_SPACE (' ') 21470-21471
IDENT ('b') 21471-21472
RPAREN (')') 21472-21473
WHITE_SPACE (' ') 21473-21474
IDENT ('brd') 21474-21477
WHITE_SPACE (' ') 21477-21478
IDENT ('fs') 21478-21480
WHITE_SPACE ('\n        ') 21480-21489
IDENT ('paths') 21489-21494
WHITE_SPACE (' ') 21494-21495
OPERATOR ('=') 21495-21496
WHITE_SPACE (' ') 21496-21497
IDENT ('mkPaths') 21497-21504
WHITE_SPACE (' ') 21504-21505
LPAREN ('(') 21505-21506
IDENT ('acstree') 21506-21513
WHITE_SPACE (' ') 21513-21514
IDENT ('b') 21514-21515
RPAREN (')') 21515-21516
WHITE_SPACE ('\n        ') 21516-21525
LINE_COMMENT ('-- pcomment = show (length paths) ++ " assumptions with " ++ show (fold (+) 0 (map (length <~ snd) paths))\n') 21525-21632
WHITE_SPACE ('        ') 21632-21640
LINE_COMMENT ('--    ++ " implication chains"\n') 21640-21671
WHITE_SPACE ('\n') 21671-21672
LINE_COMMENT ('-- comment com = do stderr << com << "\n" for false\n') 21672-21724
LINE_COMMENT ('-- log com     = do stderr << com << "\n" for true\n') 21724-21775
WHITE_SPACE ('\n') 21775-21776
DOC_COMMENT ('--- turn a string into a row\n') 21776-21805
IDENT ('mkrow') 21805-21810
WHITE_SPACE (' ') 21810-21811
OPERATOR ('::') 21811-21813
WHITE_SPACE (' ') 21813-21814
IDENT ('String') 21814-21820
WHITE_SPACE (' ') 21820-21821
OPERATOR ('->') 21821-21823
WHITE_SPACE (' ') 21823-21824
LBRACKET ('[') 21824-21825
IDENT ('Zelle') 21825-21830
RBRACKET (']') 21830-21831
WHITE_SPACE ('\n') 21831-21832
IDENT ('mkrow') 21832-21837
WHITE_SPACE (' ') 21837-21838
IDENT ('s') 21838-21839
WHITE_SPACE (' ') 21839-21840
OPERATOR ('=') 21840-21841
WHITE_SPACE (' ') 21841-21842
IDENT ('mkrow1') 21842-21848
WHITE_SPACE (' ') 21848-21849
IDENT ('xs') 21849-21851
WHITE_SPACE ('\n    ') 21851-21856
KEYWORD ('where') 21856-21861
WHITE_SPACE ('\n        ') 21861-21870
IDENT ('xs') 21870-21872
WHITE_SPACE (' ') 21872-21873
OPERATOR ('=') 21873-21874
WHITE_SPACE (' ') 21874-21875
IDENT ('s') 21875-21876
WHITE_SPACE (' ') 21876-21877
OPERATOR ('++') 21877-21879
WHITE_SPACE (' ') 21879-21880
STRING_LITERAL ('"---------"') 21880-21891
WHITE_SPACE (' ') 21891-21892
LINE_COMMENT ('-- make sure at least 9 elements\n') 21892-21925
WHITE_SPACE ('        ') 21925-21933
IDENT ('mkrow1') 21933-21939
WHITE_SPACE (' ') 21939-21940
IDENT ('xs') 21940-21942
WHITE_SPACE (' ') 21942-21943
OPERATOR ('=') 21943-21944
WHITE_SPACE (' ') 21944-21945
LPAREN ('(') 21945-21946
IDENT ('take') 21946-21950
WHITE_SPACE (' ') 21950-21951
NUMBER_LITERAL ('9') 21951-21952
WHITE_SPACE (' ') 21952-21953
OPERATOR ('•') 21953-21954
WHITE_SPACE (' ') 21954-21955
IDENT ('filter') 21955-21961
WHITE_SPACE (' ') 21961-21962
LPAREN ('(') 21962-21963
LBRACKET ('[') 21963-21964
RBRACKET (']') 21964-21965
OPERATOR ('!=') 21965-21967
RPAREN (')') 21967-21968
WHITE_SPACE (' ') 21968-21969
OPERATOR ('•') 21969-21970
WHITE_SPACE (' ') 21970-21971
IDENT ('map') 21971-21974
WHITE_SPACE (' ') 21974-21975
IDENT ('f') 21975-21976
WHITE_SPACE (' ') 21976-21977
OPERATOR ('•') 21977-21978
WHITE_SPACE (' ') 21978-21979
IDENT ('unpacked') 21979-21987
RPAREN (')') 21987-21988
WHITE_SPACE (' ') 21988-21989
IDENT ('xs') 21989-21991
WHITE_SPACE ('\n        ') 21991-22000
IDENT ('f') 22000-22001
WHITE_SPACE (' ') 22001-22002
IDENT ('x') 22002-22003
WHITE_SPACE (' ') 22003-22004
OPERATOR ('|') 22004-22005
WHITE_SPACE (' ') 22005-22006
IDENT ('x') 22006-22007
WHITE_SPACE (' ') 22007-22008
OPERATOR ('>=') 22008-22010
WHITE_SPACE (' ') 22010-22011
CHAR_LITERAL (''1'') 22011-22014
WHITE_SPACE (' ') 22014-22015
OPERATOR ('&&') 22015-22017
WHITE_SPACE (' ') 22017-22018
IDENT ('x') 22018-22019
WHITE_SPACE (' ') 22019-22020
OPERATOR ('<=') 22020-22022
WHITE_SPACE (' ') 22022-22023
CHAR_LITERAL (''9'') 22023-22026
WHITE_SPACE ('  ') 22026-22028
OPERATOR ('=') 22028-22029
WHITE_SPACE ('  ') 22029-22031
LBRACKET ('[') 22031-22032
IDENT ('ord') 22032-22035
WHITE_SPACE (' ') 22035-22036
IDENT ('x') 22036-22037
WHITE_SPACE (' ') 22037-22038
OPERATOR ('-') 22038-22039
WHITE_SPACE (' ') 22039-22040
IDENT ('ord') 22040-22043
WHITE_SPACE (' ') 22043-22044
CHAR_LITERAL (''0'') 22044-22047
RBRACKET (']') 22047-22048
WHITE_SPACE ('\n            ') 22048-22061
OPERATOR ('|') 22061-22062
WHITE_SPACE (' ') 22062-22063
IDENT ('x') 22063-22064
WHITE_SPACE (' ') 22064-22065
OPERATOR ('==') 22065-22067
WHITE_SPACE (' ') 22067-22068
CHAR_LITERAL ('' '') 22068-22071
WHITE_SPACE ('  ') 22071-22073
OPERATOR ('=') 22073-22074
WHITE_SPACE (' ') 22074-22075
LBRACKET ('[') 22075-22076
RBRACKET (']') 22076-22077
WHITE_SPACE ('    ') 22077-22081
LINE_COMMENT ('-- ignored\n') 22081-22092
WHITE_SPACE ('            ') 22092-22104
OPERATOR ('|') 22104-22105
WHITE_SPACE (' ') 22105-22106
IDENT ('otherwise') 22106-22115
WHITE_SPACE (' ') 22115-22116
OPERATOR ('=') 22116-22117
WHITE_SPACE (' ') 22117-22118
IDENT ('elements') 22118-22126
WHITE_SPACE ('\n\n') 22126-22128
IDENT ('main') 22128-22132
WHITE_SPACE (' ') 22132-22133
LBRACKET ('[') 22133-22134
STRING_LITERAL ('"-h"') 22134-22138
RBRACKET (']') 22138-22139
WHITE_SPACE ('    ') 22139-22143
OPERATOR ('=') 22143-22144
WHITE_SPACE (' ') 22144-22145
IDENT ('main') 22145-22149
WHITE_SPACE (' ') 22149-22150
LBRACKET ('[') 22150-22151
RBRACKET (']') 22151-22152
WHITE_SPACE ('\n') 22152-22153
IDENT ('main') 22153-22157
WHITE_SPACE (' ') 22157-22158
LBRACKET ('[') 22158-22159
STRING_LITERAL ('"-help"') 22159-22166
RBRACKET (']') 22166-22167
WHITE_SPACE (' ') 22167-22168
OPERATOR ('=') 22168-22169
WHITE_SPACE (' ') 22169-22170
IDENT ('main') 22170-22174
WHITE_SPACE (' ') 22174-22175
LBRACKET ('[') 22175-22176
RBRACKET (']') 22176-22177
WHITE_SPACE ('\n') 22177-22178
IDENT ('main') 22178-22182
WHITE_SPACE (' ') 22182-22183
LBRACKET ('[') 22183-22184
RBRACKET (']') 22184-22185
WHITE_SPACE (' ') 22185-22186
OPERATOR ('=') 22186-22187
WHITE_SPACE (' ') 22187-22188
KEYWORD ('do') 22188-22190
WHITE_SPACE ('\n        ') 22190-22199
IDENT ('mapM_') 22199-22204
WHITE_SPACE (' ') 22204-22205
IDENT ('stderr') 22205-22211
DOT ('.') 22211-22212
IDENT ('println') 22212-22219
WHITE_SPACE (' ') 22219-22220
LBRACKET ('[') 22220-22221
WHITE_SPACE ('\n            ') 22221-22234
STRING_LITERAL ('"usage: java Sudoku file ..."') 22234-22263
COMMA (',') 22263-22264
WHITE_SPACE ('\n            ') 22264-22277
STRING_LITERAL ('"       java Sudoku position"') 22277-22306
COMMA (',') 22306-22307
WHITE_SPACE ('\n            ') 22307-22320
STRING_LITERAL ('"where position is a 81 char string consisting of digits"') 22320-22377
COMMA (',') 22377-22378
WHITE_SPACE ('\n            ') 22378-22391
STRING_LITERAL ('"One can get such a string by going to"') 22391-22430
COMMA (',') 22430-22431
WHITE_SPACE ('\n            ') 22431-22444
STRING_LITERAL ('"http://www.sudokuoftheday.com/pages/s-o-t-d.php"') 22444-22493
COMMA (',') 22493-22494
WHITE_SPACE ('\n            ') 22494-22507
STRING_LITERAL ('"Right click on the puzzle and open it in new tab"') 22507-22557
COMMA (',') 22557-22558
WHITE_SPACE ('\n            ') 22558-22571
STRING_LITERAL ('"Copy the 81 digits from the URL in the address field of your browser."') 22571-22642
COMMA (',') 22642-22643
WHITE_SPACE ('\n            ') 22643-22656
OPERATOR ('"",') 22656-22659
WHITE_SPACE ('\n            ') 22659-22672
STRING_LITERAL ('"There is also a file with hard sudokus in examples/top95.txt\n"') 22672-22736
RBRACKET (']') 22736-22737
WHITE_SPACE ('\n        ') 22737-22746
IDENT ('return') 22746-22752
WHITE_SPACE (' ') 22752-22753
LPAREN ('(') 22753-22754
RPAREN (')') 22754-22755
WHITE_SPACE ('\n\n\n') 22755-22758
IDENT ('main') 22758-22762
WHITE_SPACE (' ') 22762-22763
LBRACKET ('[') 22763-22764
IDENT ('s') 22764-22765
OPERATOR ('@´^') 22765-22768
LBRACKET ('[') 22768-22769
NUMBER_LITERAL ('0') 22769-22770
NUMBER_LITERAL ('-9') 22770-22772
OPERATOR ('\') 22772-22773
IDENT ('W') 22773-22774
RBRACKET (']') 22774-22775
LBRACE ('{') 22775-22776
NUMBER_LITERAL ('81') 22776-22778
RBRACE ('}') 22778-22779
OPERATOR ('$´') 22779-22781
RBRACKET (']') 22781-22782
WHITE_SPACE (' ') 22782-22783
OPERATOR ('=') 22783-22784
WHITE_SPACE (' ') 22784-22785
IDENT ('solve') 22785-22790
WHITE_SPACE (' ') 22790-22791
IDENT ('board') 22791-22796
WHITE_SPACE (' ') 22796-22797
OPERATOR ('>>') 22797-22799
WHITE_SPACE (' ') 22799-22800
IDENT ('return') 22800-22806
WHITE_SPACE (' ') 22806-22807
LPAREN ('(') 22807-22808
RPAREN (')') 22808-22809
WHITE_SPACE ('\n    ') 22809-22814
KEYWORD ('where') 22814-22819
WHITE_SPACE ('\n        ') 22819-22828
IDENT ('board') 22828-22833
WHITE_SPACE (' ') 22833-22834
OPERATOR ('=') 22834-22835
WHITE_SPACE (' ') 22835-22836
IDENT ('zip') 22836-22839
WHITE_SPACE (' ') 22839-22840
IDENT ('positions') 22840-22849
WHITE_SPACE (' ') 22849-22850
IDENT ('felder') 22850-22856
WHITE_SPACE ('\n        ') 22856-22865
IDENT ('felder') 22865-22871
WHITE_SPACE (' ') 22871-22872
OPERATOR ('=') 22872-22873
WHITE_SPACE (' ') 22873-22874
IDENT ('decode') 22874-22880
WHITE_SPACE (' ') 22880-22881
IDENT ('s') 22881-22882
WHITE_SPACE ('\n\n') 22882-22884
IDENT ('main') 22884-22888
WHITE_SPACE (' ') 22888-22889
IDENT ('files') 22889-22894
WHITE_SPACE (' ') 22894-22895
OPERATOR ('=') 22895-22896
WHITE_SPACE (' ') 22896-22897
IDENT ('forM_') 22897-22902
WHITE_SPACE (' ') 22902-22903
IDENT ('files') 22903-22908
WHITE_SPACE (' ') 22908-22909
IDENT ('sudoku') 22909-22915
WHITE_SPACE ('\n    ') 22915-22920
KEYWORD ('where') 22920-22925
WHITE_SPACE ('\n        ') 22925-22934
IDENT ('sudoku') 22934-22940
WHITE_SPACE (' ') 22940-22941
IDENT ('file') 22941-22945
WHITE_SPACE (' ') 22945-22946
OPERATOR ('=') 22946-22947
WHITE_SPACE (' ') 22947-22948
KEYWORD ('do') 22948-22950
WHITE_SPACE ('\n            ') 22950-22963
IDENT ('br') 22963-22965
WHITE_SPACE (' ') 22965-22966
OPERATOR ('<-') 22966-22968
WHITE_SPACE (' ') 22968-22969
IDENT ('openReader') 22969-22979
WHITE_SPACE (' ') 22979-22980
IDENT ('file') 22980-22984
WHITE_SPACE ('\n            ') 22984-22997
IDENT ('lines') 22997-23002
WHITE_SPACE (' ') 23002-23003
OPERATOR ('<-') 23003-23005
WHITE_SPACE (' ') 23005-23006
IDENT ('BufferedReader') 23006-23020
DOT ('.') 23020-23021
IDENT ('getLines') 23021-23029
WHITE_SPACE (' ') 23029-23030
IDENT ('br') 23030-23032
WHITE_SPACE ('\n            ') 23032-23045
IDENT ('bs') 23045-23047
WHITE_SPACE (' ') 23047-23048
OPERATOR ('<-') 23048-23050
WHITE_SPACE (' ') 23050-23051
IDENT ('process') 23051-23058
WHITE_SPACE (' ') 23058-23059
IDENT ('lines') 23059-23064
WHITE_SPACE ('\n            ') 23064-23077
IDENT ('ss') 23077-23079
WHITE_SPACE (' ') 23079-23080
OPERATOR ('<-') 23080-23082
WHITE_SPACE (' ') 23082-23083
IDENT ('mapM') 23083-23087
WHITE_SPACE (' ') 23087-23088
LPAREN ('(') 23088-23089
OPERATOR ('\') 23089-23090
IDENT ('b') 23090-23091
WHITE_SPACE (' ') 23091-23092
OPERATOR ('->') 23092-23094
WHITE_SPACE (' ') 23094-23095
IDENT ('print') 23095-23100
WHITE_SPACE (' ') 23100-23101
STRING_LITERAL ('"Puzzle: "') 23101-23111
WHITE_SPACE (' ') 23111-23112
OPERATOR ('>>') 23112-23114
WHITE_SPACE (' ') 23114-23115
IDENT ('printb') 23115-23121
WHITE_SPACE (' ') 23121-23122
IDENT ('b') 23122-23123
WHITE_SPACE (' ') 23123-23124
OPERATOR ('>>') 23124-23126
WHITE_SPACE (' ') 23126-23127
IDENT ('solve') 23127-23132
WHITE_SPACE (' ') 23132-23133
IDENT ('b') 23133-23134
RPAREN (')') 23134-23135
WHITE_SPACE (' ') 23135-23136
IDENT ('bs') 23136-23138
WHITE_SPACE ('\n            ') 23138-23151
IDENT ('println') 23151-23158
WHITE_SPACE (' ') 23158-23159
LPAREN ('(') 23159-23160
STRING_LITERAL ('"Euler: "') 23160-23169
WHITE_SPACE (' ') 23169-23170
OPERATOR ('++') 23170-23172
WHITE_SPACE (' ') 23172-23173
IDENT ('show') 23173-23177
WHITE_SPACE (' ') 23177-23178
LPAREN ('(') 23178-23179
IDENT ('sum') 23179-23182
WHITE_SPACE (' ') 23182-23183
LPAREN ('(') 23183-23184
IDENT ('map') 23184-23187
WHITE_SPACE (' ') 23187-23188
IDENT ('res012') 23188-23194
WHITE_SPACE (' ') 23194-23195
IDENT ('ss') 23195-23197
RPAREN (')') 23197-23198
RPAREN (')') 23198-23199
RPAREN (')') 23199-23200
WHITE_SPACE ('\n            ') 23200-23213
IDENT ('return') 23213-23219
WHITE_SPACE (' ') 23219-23220
LPAREN ('(') 23220-23221
RPAREN (')') 23221-23222
WHITE_SPACE ('\n\n') 23222-23224
LINE_COMMENT ('-- "--3-" => [1..9, 1..9, [3], 1..9]\n') 23224-23261
IDENT ('decode') 23261-23267
WHITE_SPACE (' ') 23267-23268
IDENT ('s') 23268-23269
WHITE_SPACE (' ') 23269-23270
OPERATOR ('=') 23270-23271
WHITE_SPACE (' ') 23271-23272
IDENT ('map') 23272-23275
WHITE_SPACE (' ') 23275-23276
IDENT ('candi') 23276-23281
WHITE_SPACE (' ') 23281-23282
LPAREN ('(') 23282-23283
IDENT ('unpacked') 23283-23291
WHITE_SPACE (' ') 23291-23292
IDENT ('s') 23292-23293
RPAREN (')') 23293-23294
WHITE_SPACE (' ') 23294-23295
KEYWORD ('where') 23295-23300
WHITE_SPACE ('\n        ') 23300-23309
IDENT ('candi') 23309-23314
WHITE_SPACE (' ') 23314-23315
IDENT ('c') 23315-23316
WHITE_SPACE (' ') 23316-23317
OPERATOR ('|') 23317-23318
WHITE_SPACE (' ') 23318-23319
IDENT ('c') 23319-23320
WHITE_SPACE (' ') 23320-23321
OPERATOR ('>=') 23321-23323
WHITE_SPACE (' ') 23323-23324
CHAR_LITERAL (''1'') 23324-23327
WHITE_SPACE (' ') 23327-23328
OPERATOR ('&&') 23328-23330
WHITE_SPACE (' ') 23330-23331
IDENT ('c') 23331-23332
WHITE_SPACE (' ') 23332-23333
OPERATOR ('<=') 23333-23335
WHITE_SPACE (' ') 23335-23336
CHAR_LITERAL (''9'') 23336-23339
WHITE_SPACE ('  ') 23339-23341
OPERATOR ('=') 23341-23342
WHITE_SPACE (' ') 23342-23343
LBRACKET ('[') 23343-23344
LPAREN ('(') 23344-23345
IDENT ('ord') 23345-23348
WHITE_SPACE (' ') 23348-23349
IDENT ('c') 23349-23350
WHITE_SPACE (' ') 23350-23351
OPERATOR ('-') 23351-23352
WHITE_SPACE (' ') 23352-23353
IDENT ('ord') 23353-23356
WHITE_SPACE (' ') 23356-23357
CHAR_LITERAL (''0'') 23357-23360
RPAREN (')') 23360-23361
RBRACKET (']') 23361-23362
WHITE_SPACE ('\n                ') 23362-23379
OPERATOR ('|') 23379-23380
WHITE_SPACE (' ') 23380-23381
IDENT ('otherwise') 23381-23390
WHITE_SPACE (' ') 23390-23391
OPERATOR ('=') 23391-23392
WHITE_SPACE (' ') 23392-23393
IDENT ('elements') 23393-23401
WHITE_SPACE ('\n') 23401-23402
IDENT ('process') 23402-23409
WHITE_SPACE (' ') 23409-23410
LBRACKET ('[') 23410-23411
RBRACKET (']') 23411-23412
WHITE_SPACE (' ') 23412-23413
OPERATOR ('=') 23413-23414
WHITE_SPACE (' ') 23414-23415
IDENT ('return') 23415-23421
WHITE_SPACE (' ') 23421-23422
LBRACKET ('[') 23422-23423
RBRACKET (']') 23423-23424
WHITE_SPACE ('\n') 23424-23425
IDENT ('process') 23425-23432
WHITE_SPACE (' ') 23432-23433
LPAREN ('(') 23433-23434
IDENT ('s') 23434-23435
OPERATOR (':') 23435-23436
IDENT ('ss') 23436-23438
RPAREN (')') 23438-23439
WHITE_SPACE ('\n    ') 23439-23444
OPERATOR ('|') 23444-23445
WHITE_SPACE (' ') 23445-23446
IDENT ('length') 23446-23452
WHITE_SPACE (' ') 23452-23453
IDENT ('s') 23453-23454
WHITE_SPACE (' ') 23454-23455
OPERATOR ('==') 23455-23457
WHITE_SPACE (' ') 23457-23458
NUMBER_LITERAL ('81') 23458-23460
WHITE_SPACE (' ') 23460-23461
OPERATOR ('=') 23461-23462
WHITE_SPACE (' ') 23462-23463
IDENT ('consider') 23463-23471
WHITE_SPACE (' ') 23471-23472
IDENT ('b1') 23472-23474
WHITE_SPACE ('\n    ') 23474-23479
OPERATOR ('|') 23479-23480
WHITE_SPACE (' ') 23480-23481
IDENT ('length') 23481-23487
WHITE_SPACE (' ') 23487-23488
IDENT ('s') 23488-23489
WHITE_SPACE (' ') 23489-23490
OPERATOR ('==') 23490-23492
WHITE_SPACE (' ') 23492-23493
NUMBER_LITERAL ('9') 23493-23494
COMMA (',') 23494-23495
WHITE_SPACE ('\n      ') 23495-23502
IDENT ('length') 23502-23508
WHITE_SPACE (' ') 23508-23509
IDENT ('acht') 23509-23513
WHITE_SPACE (' ') 23513-23514
OPERATOR ('==') 23514-23516
WHITE_SPACE (' ') 23516-23517
NUMBER_LITERAL ('8') 23517-23518
COMMA (',') 23518-23519
WHITE_SPACE ('\n      ') 23519-23526
IDENT ('all') 23526-23529
WHITE_SPACE (' ') 23529-23530
LPAREN ('(') 23530-23531
LPAREN ('(') 23531-23532
NUMBER_LITERAL ('9') 23532-23533
OPERATOR ('==') 23533-23535
RPAREN (')') 23535-23536
WHITE_SPACE (' ') 23536-23537
OPERATOR ('•') 23537-23538
WHITE_SPACE (' ') 23538-23539
IDENT ('length') 23539-23545
RPAREN (')') 23545-23546
WHITE_SPACE (' ') 23546-23547
IDENT ('acht') 23547-23551
WHITE_SPACE (' ') 23551-23552
OPERATOR ('=') 23552-23553
WHITE_SPACE (' ') 23553-23554
IDENT ('consider') 23554-23562
WHITE_SPACE (' ') 23562-23563
IDENT ('b2') 23563-23565
WHITE_SPACE ('\n    ') 23565-23570
OPERATOR ('|') 23570-23571
WHITE_SPACE (' ') 23571-23572
IDENT ('otherwise') 23572-23581
WHITE_SPACE (' ') 23581-23582
OPERATOR ('=') 23582-23583
WHITE_SPACE (' ') 23583-23584
KEYWORD ('do') 23584-23586
WHITE_SPACE ('\n            ') 23586-23599
IDENT ('stderr') 23599-23605
DOT ('.') 23605-23606
IDENT ('println') 23606-23613
WHITE_SPACE (' ') 23613-23614
LPAREN ('(') 23614-23615
STRING_LITERAL ('"skipped line: "') 23615-23631
WHITE_SPACE (' ') 23631-23632
OPERATOR ('++') 23632-23634
WHITE_SPACE (' ') 23634-23635
IDENT ('s') 23635-23636
RPAREN (')') 23636-23637
WHITE_SPACE ('\n            ') 23637-23650
IDENT ('process') 23650-23657
WHITE_SPACE (' ') 23657-23658
IDENT ('ss') 23658-23660
WHITE_SPACE ('\n    ') 23660-23665
KEYWORD ('where') 23665-23670
WHITE_SPACE ('\n        ') 23670-23679
IDENT ('acht') 23679-23683
WHITE_SPACE (' ') 23683-23684
OPERATOR ('=') 23684-23685
WHITE_SPACE (' ') 23685-23686
IDENT ('take') 23686-23690
WHITE_SPACE (' ') 23690-23691
NUMBER_LITERAL ('8') 23691-23692
WHITE_SPACE (' ') 23692-23693
IDENT ('ss') 23693-23695
WHITE_SPACE ('\n        ') 23695-23704
IDENT ('neun') 23704-23708
WHITE_SPACE (' ') 23708-23709
OPERATOR ('=') 23709-23710
WHITE_SPACE (' ') 23710-23711
IDENT ('fold') 23711-23715
WHITE_SPACE (' ') 23715-23716
LPAREN ('(') 23716-23717
OPERATOR ('++') 23717-23719
RPAREN (')') 23719-23720
WHITE_SPACE (' ') 23720-23721
STRING_LITERAL ('""') 23721-23723
WHITE_SPACE (' ') 23723-23724
LPAREN ('(') 23724-23725
IDENT ('s') 23725-23726
OPERATOR (':') 23726-23727
IDENT ('acht') 23727-23731
RPAREN (')') 23731-23732
WHITE_SPACE ('\n        ') 23732-23741
IDENT ('b1') 23741-23743
WHITE_SPACE (' ') 23743-23744
OPERATOR ('=') 23744-23745
WHITE_SPACE (' ') 23745-23746
IDENT ('zip') 23746-23749
WHITE_SPACE (' ') 23749-23750
IDENT ('positions') 23750-23759
WHITE_SPACE (' ') 23759-23760
LPAREN ('(') 23760-23761
IDENT ('decode') 23761-23767
WHITE_SPACE (' ') 23767-23768
IDENT ('s') 23768-23769
RPAREN (')') 23769-23770
WHITE_SPACE ('\n        ') 23770-23779
IDENT ('b2') 23779-23781
WHITE_SPACE (' ') 23781-23782
OPERATOR ('=') 23782-23783
WHITE_SPACE (' ') 23783-23784
IDENT ('zip') 23784-23787
WHITE_SPACE (' ') 23787-23788
IDENT ('positions') 23788-23797
WHITE_SPACE (' ') 23797-23798
LPAREN ('(') 23798-23799
IDENT ('decode') 23799-23805
WHITE_SPACE (' ') 23805-23806
IDENT ('neun') 23806-23810
RPAREN (')') 23810-23811
WHITE_SPACE ('\n        ') 23811-23820
IDENT ('consider') 23820-23828
WHITE_SPACE (' ') 23828-23829
IDENT ('b') 23829-23830
WHITE_SPACE (' ') 23830-23831
OPERATOR ('=') 23831-23832
WHITE_SPACE (' ') 23832-23833
KEYWORD ('do') 23833-23835
WHITE_SPACE ('\n            ') 23835-23848
LINE_COMMENT ('-- print "Puzzle: "\n') 23848-23868
WHITE_SPACE ('            ') 23868-23880
LINE_COMMENT ('-- printb b\n') 23880-23892
WHITE_SPACE ('            ') 23892-23904
IDENT ('bs') 23904-23906
WHITE_SPACE (' ') 23906-23907
OPERATOR ('<-') 23907-23909
WHITE_SPACE (' ') 23909-23910
IDENT ('process') 23910-23917
WHITE_SPACE (' ') 23917-23918
IDENT ('ss') 23918-23920
WHITE_SPACE ('\n            ') 23920-23933
IDENT ('return') 23933-23939
WHITE_SPACE (' ') 23939-23940
LPAREN ('(') 23940-23941
IDENT ('b') 23941-23942
OPERATOR (':') 23942-23943
IDENT ('bs') 23943-23945
RPAREN (')') 23945-23946